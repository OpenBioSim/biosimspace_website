Search.setIndex({"docnames": ["api/generated/BioSimSpace.Align.flexAlign", "api/generated/BioSimSpace.Align.generateNetwork", "api/generated/BioSimSpace.Align.matchAtoms", "api/generated/BioSimSpace.Align.merge", "api/generated/BioSimSpace.Align.rmsdAlign", "api/generated/BioSimSpace.Align.viewMapping", "api/generated/BioSimSpace.Box.boxTypes", "api/generated/BioSimSpace.Box.cubic", "api/generated/BioSimSpace.Box.generateBoxParameters", "api/generated/BioSimSpace.Box.rhombicDodecahedronHexagon", "api/generated/BioSimSpace.Box.rhombicDodecahedronSquare", "api/generated/BioSimSpace.Box.truncatedOctahedron", "api/generated/BioSimSpace.Convert.smiles", "api/generated/BioSimSpace.Convert.supportedFormats", "api/generated/BioSimSpace.Convert.to", "api/generated/BioSimSpace.Convert.toBioSimSpace", "api/generated/BioSimSpace.Convert.toOpenMM", "api/generated/BioSimSpace.Convert.toRDKit", "api/generated/BioSimSpace.Convert.toSire", "api/generated/BioSimSpace.FreeEnergy.Relative", "api/generated/BioSimSpace.FreeEnergy.engines", "api/generated/BioSimSpace.FreeEnergy.getData", "api/generated/BioSimSpace.Gateway.Area", "api/generated/BioSimSpace.Gateway.Boolean", "api/generated/BioSimSpace.Gateway.Charge", "api/generated/BioSimSpace.Gateway.Energy", "api/generated/BioSimSpace.Gateway.File", "api/generated/BioSimSpace.Gateway.FileSet", "api/generated/BioSimSpace.Gateway.Float", "api/generated/BioSimSpace.Gateway.Integer", "api/generated/BioSimSpace.Gateway.Length", "api/generated/BioSimSpace.Gateway.Node", "api/generated/BioSimSpace.Gateway.Pressure", "api/generated/BioSimSpace.Gateway.String", "api/generated/BioSimSpace.Gateway.Temperature", "api/generated/BioSimSpace.Gateway.Time", "api/generated/BioSimSpace.Gateway.Volume", "api/generated/BioSimSpace.IO.fileFormats", "api/generated/BioSimSpace.IO.formatInfo", "api/generated/BioSimSpace.IO.readMolecules", "api/generated/BioSimSpace.IO.readPDB", "api/generated/BioSimSpace.IO.readPerturbableSystem", "api/generated/BioSimSpace.IO.saveMolecules", "api/generated/BioSimSpace.IO.savePerturbableSystem", "api/generated/BioSimSpace.MD.engines", "api/generated/BioSimSpace.MD.run", "api/generated/BioSimSpace.Metadynamics.Bound", "api/generated/BioSimSpace.Metadynamics.CollectiveVariable.Distance", "api/generated/BioSimSpace.Metadynamics.CollectiveVariable.Funnel", "api/generated/BioSimSpace.Metadynamics.CollectiveVariable.RMSD", "api/generated/BioSimSpace.Metadynamics.CollectiveVariable.Torsion", "api/generated/BioSimSpace.Metadynamics.CollectiveVariable.list", "api/generated/BioSimSpace.Metadynamics.CollectiveVariable.makeFunnel", "api/generated/BioSimSpace.Metadynamics.CollectiveVariable.viewFunnel", "api/generated/BioSimSpace.Metadynamics.Grid", "api/generated/BioSimSpace.Metadynamics.Restraint", "api/generated/BioSimSpace.Metadynamics.engines", "api/generated/BioSimSpace.Metadynamics.run", "api/generated/BioSimSpace.Node.help", "api/generated/BioSimSpace.Node.list", "api/generated/BioSimSpace.Node.run", "api/generated/BioSimSpace.Node.setNodeDirectory", "api/generated/BioSimSpace.Notebook.View", "api/generated/BioSimSpace.Notebook.plot", "api/generated/BioSimSpace.Notebook.plotContour", "api/generated/BioSimSpace.Notebook.plotOverlapMatrix", "api/generated/BioSimSpace.Parameters.amberForceFields", "api/generated/BioSimSpace.Parameters.amberProteinForceFields", "api/generated/BioSimSpace.Parameters.ff03", "api/generated/BioSimSpace.Parameters.ff14SB", "api/generated/BioSimSpace.Parameters.ff99", "api/generated/BioSimSpace.Parameters.ff99SB", "api/generated/BioSimSpace.Parameters.ff99SBildn", "api/generated/BioSimSpace.Parameters.forceFields", "api/generated/BioSimSpace.Parameters.formalCharge", "api/generated/BioSimSpace.Parameters.gaff", "api/generated/BioSimSpace.Parameters.gaff2", "api/generated/BioSimSpace.Parameters.openForceFields", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_0_0", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_0_0_RC1", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_0_0_RC2", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_0_1", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_1_0", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_1_1", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_2_0", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_2_1", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_3_0", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_3_1", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_3_1_alpha_1", "api/generated/BioSimSpace.Parameters.openff_unconstrained_2_0_0", "api/generated/BioSimSpace.Parameters.openff_unconstrained_2_0_0_rc_1", "api/generated/BioSimSpace.Parameters.openff_unconstrained_2_0_0_rc_2", "api/generated/BioSimSpace.Parameters.openff_unconstrained_2_1_0", "api/generated/BioSimSpace.Parameters.openff_unconstrained_2_1_0_rc_1", "api/generated/BioSimSpace.Parameters.parameterise", "api/generated/BioSimSpace.Process.Amber", "api/generated/BioSimSpace.Process.Gromacs", "api/generated/BioSimSpace.Process.Namd", "api/generated/BioSimSpace.Process.OpenMM", "api/generated/BioSimSpace.Process.Plumed", "api/generated/BioSimSpace.Process.ProcessRunner", "api/generated/BioSimSpace.Process.Somd", "api/generated/BioSimSpace.Process.createProcess", "api/generated/BioSimSpace.Process.engines", "api/generated/BioSimSpace.Protocol.Custom", "api/generated/BioSimSpace.Protocol.Equilibration", "api/generated/BioSimSpace.Protocol.FreeEnergy", "api/generated/BioSimSpace.Protocol.FreeEnergyEquilibration", "api/generated/BioSimSpace.Protocol.FreeEnergyMinimisation", "api/generated/BioSimSpace.Protocol.FreeEnergyProduction", "api/generated/BioSimSpace.Protocol.Metadynamics", "api/generated/BioSimSpace.Protocol.Minimisation", "api/generated/BioSimSpace.Protocol.Production", "api/generated/BioSimSpace.Protocol.Steering", "api/generated/BioSimSpace.Protocol.createProtocol", "api/generated/BioSimSpace.Protocol.protocols", "api/generated/BioSimSpace.Solvent.solvate", "api/generated/BioSimSpace.Solvent.spc", "api/generated/BioSimSpace.Solvent.spce", "api/generated/BioSimSpace.Solvent.tip3p", "api/generated/BioSimSpace.Solvent.tip4p", "api/generated/BioSimSpace.Solvent.tip5p", "api/generated/BioSimSpace.Solvent.waterModels", "api/generated/BioSimSpace.Stream.load", "api/generated/BioSimSpace.Stream.save", "api/generated/BioSimSpace.Trajectory.Trajectory", "api/generated/BioSimSpace.Types.Angle", "api/generated/BioSimSpace.Types.Area", "api/generated/BioSimSpace.Types.Charge", "api/generated/BioSimSpace.Types.Coordinate", "api/generated/BioSimSpace.Types.Energy", "api/generated/BioSimSpace.Types.Length", "api/generated/BioSimSpace.Types.Pressure", "api/generated/BioSimSpace.Types.Temperature", "api/generated/BioSimSpace.Types.Time", "api/generated/BioSimSpace.Types.Vector", "api/generated/BioSimSpace.Types.Volume", "api/generated/BioSimSpace.Units.Angle.degree", "api/generated/BioSimSpace.Units.Angle.radian", "api/generated/BioSimSpace.Units.Area.angstrom2", "api/generated/BioSimSpace.Units.Area.meter2", "api/generated/BioSimSpace.Units.Area.nanometer2", "api/generated/BioSimSpace.Units.Area.picometer2", "api/generated/BioSimSpace.Units.Charge.coulomb", "api/generated/BioSimSpace.Units.Charge.electron_charge", "api/generated/BioSimSpace.Units.Energy.kcal_per_mol", "api/generated/BioSimSpace.Units.Energy.kj_per_mol", "api/generated/BioSimSpace.Units.Energy.kt", "api/generated/BioSimSpace.Units.Length.angstrom", "api/generated/BioSimSpace.Units.Length.meter", "api/generated/BioSimSpace.Units.Length.nanometer", "api/generated/BioSimSpace.Units.Length.picometer", "api/generated/BioSimSpace.Units.Pressure.atm", "api/generated/BioSimSpace.Units.Pressure.bar", "api/generated/BioSimSpace.Units.Temperature.celsius", "api/generated/BioSimSpace.Units.Temperature.fahrenheit", "api/generated/BioSimSpace.Units.Temperature.kelvin", "api/generated/BioSimSpace.Units.Time.day", "api/generated/BioSimSpace.Units.Time.femtosecond", "api/generated/BioSimSpace.Units.Time.hour", "api/generated/BioSimSpace.Units.Time.millisecond", "api/generated/BioSimSpace.Units.Time.minute", "api/generated/BioSimSpace.Units.Time.nanosecond", "api/generated/BioSimSpace.Units.Time.picosecond", "api/generated/BioSimSpace.Units.Time.second", "api/generated/BioSimSpace.Units.Volume.angstrom3", "api/generated/BioSimSpace.Units.Volume.meter3", "api/generated/BioSimSpace.Units.Volume.nanometer3", "api/generated/BioSimSpace.Units.Volume.picometer3", "api/generated/BioSimSpace._Config.Amber", "api/generated/BioSimSpace._Config.Gromacs", "api/generated/BioSimSpace._Config.Somd", "api/generated/BioSimSpace._Exceptions.AlignmentError", "api/generated/BioSimSpace._Exceptions.AnalysisError", "api/generated/BioSimSpace._Exceptions.ConversionError", "api/generated/BioSimSpace._Exceptions.IncompatibleError", "api/generated/BioSimSpace._Exceptions.MissingSoftwareError", "api/generated/BioSimSpace._Exceptions.ParameterisationError", "api/generated/BioSimSpace._Exceptions.StreamError", "api/generated/BioSimSpace._Exceptions.ThirdPartyError", "api/generated/BioSimSpace._SireWrappers.Atom", "api/generated/BioSimSpace._SireWrappers.Bond", "api/generated/BioSimSpace._SireWrappers.Molecule", "api/generated/BioSimSpace._SireWrappers.Molecules", "api/generated/BioSimSpace._SireWrappers.Residue", "api/generated/BioSimSpace._SireWrappers.SearchResult", "api/generated/BioSimSpace._SireWrappers.System", "api/generated/BioSimSpace._Utils.WorkDir", "api/generated/BioSimSpace._Utils._assert_imported", "api/generated/BioSimSpace._Utils._have_imported", "api/generated/BioSimSpace._Utils._module_stub", "api/generated/BioSimSpace._Utils._try_import", "api/generated/BioSimSpace._Utils.cd", "api/generated/BioSimSpace._Utils.command_split", "api/index", "api/index_Align", "api/index_Box", "api/index_Config", "api/index_Convert", "api/index_Exceptions", "api/index_FreeEnergy", "api/index_Gateway", "api/index_IO", "api/index_MD", "api/index_Metadynamics", "api/index_Metadynamics_CollectiveVariable", "api/index_Node", "api/index_Notebook", "api/index_Parameters", "api/index_Process", "api/index_Protocol", "api/index_Sandpit", "api/index_SireWrappers", "api/index_Solvent", "api/index_Stream", "api/index_Trajectory", "api/index_Types", "api/index_Units", "api/index_Utils", "changelog", "code_of_conduct", "compatibility", "contributing/codestyle", "contributing/development", "contributing/index", "contributing/packaging", "contributing/roadmap", "contributors", "features", "guides/index", "guides/nodes", "guides/protocols", "index", "install", "quickstart/index", "support", "tutorials/crystal_water", "tutorials/hydration_freenrg", "tutorials/index", "tutorials/metadynamics"], "filenames": ["api/generated/BioSimSpace.Align.flexAlign.rst", "api/generated/BioSimSpace.Align.generateNetwork.rst", "api/generated/BioSimSpace.Align.matchAtoms.rst", "api/generated/BioSimSpace.Align.merge.rst", "api/generated/BioSimSpace.Align.rmsdAlign.rst", "api/generated/BioSimSpace.Align.viewMapping.rst", "api/generated/BioSimSpace.Box.boxTypes.rst", "api/generated/BioSimSpace.Box.cubic.rst", "api/generated/BioSimSpace.Box.generateBoxParameters.rst", "api/generated/BioSimSpace.Box.rhombicDodecahedronHexagon.rst", "api/generated/BioSimSpace.Box.rhombicDodecahedronSquare.rst", "api/generated/BioSimSpace.Box.truncatedOctahedron.rst", "api/generated/BioSimSpace.Convert.smiles.rst", "api/generated/BioSimSpace.Convert.supportedFormats.rst", "api/generated/BioSimSpace.Convert.to.rst", "api/generated/BioSimSpace.Convert.toBioSimSpace.rst", "api/generated/BioSimSpace.Convert.toOpenMM.rst", "api/generated/BioSimSpace.Convert.toRDKit.rst", "api/generated/BioSimSpace.Convert.toSire.rst", "api/generated/BioSimSpace.FreeEnergy.Relative.rst", "api/generated/BioSimSpace.FreeEnergy.engines.rst", "api/generated/BioSimSpace.FreeEnergy.getData.rst", "api/generated/BioSimSpace.Gateway.Area.rst", "api/generated/BioSimSpace.Gateway.Boolean.rst", "api/generated/BioSimSpace.Gateway.Charge.rst", "api/generated/BioSimSpace.Gateway.Energy.rst", "api/generated/BioSimSpace.Gateway.File.rst", "api/generated/BioSimSpace.Gateway.FileSet.rst", "api/generated/BioSimSpace.Gateway.Float.rst", "api/generated/BioSimSpace.Gateway.Integer.rst", "api/generated/BioSimSpace.Gateway.Length.rst", "api/generated/BioSimSpace.Gateway.Node.rst", "api/generated/BioSimSpace.Gateway.Pressure.rst", "api/generated/BioSimSpace.Gateway.String.rst", "api/generated/BioSimSpace.Gateway.Temperature.rst", "api/generated/BioSimSpace.Gateway.Time.rst", "api/generated/BioSimSpace.Gateway.Volume.rst", "api/generated/BioSimSpace.IO.fileFormats.rst", "api/generated/BioSimSpace.IO.formatInfo.rst", "api/generated/BioSimSpace.IO.readMolecules.rst", "api/generated/BioSimSpace.IO.readPDB.rst", "api/generated/BioSimSpace.IO.readPerturbableSystem.rst", "api/generated/BioSimSpace.IO.saveMolecules.rst", "api/generated/BioSimSpace.IO.savePerturbableSystem.rst", "api/generated/BioSimSpace.MD.engines.rst", "api/generated/BioSimSpace.MD.run.rst", "api/generated/BioSimSpace.Metadynamics.Bound.rst", "api/generated/BioSimSpace.Metadynamics.CollectiveVariable.Distance.rst", "api/generated/BioSimSpace.Metadynamics.CollectiveVariable.Funnel.rst", "api/generated/BioSimSpace.Metadynamics.CollectiveVariable.RMSD.rst", "api/generated/BioSimSpace.Metadynamics.CollectiveVariable.Torsion.rst", "api/generated/BioSimSpace.Metadynamics.CollectiveVariable.list.rst", "api/generated/BioSimSpace.Metadynamics.CollectiveVariable.makeFunnel.rst", "api/generated/BioSimSpace.Metadynamics.CollectiveVariable.viewFunnel.rst", "api/generated/BioSimSpace.Metadynamics.Grid.rst", "api/generated/BioSimSpace.Metadynamics.Restraint.rst", "api/generated/BioSimSpace.Metadynamics.engines.rst", "api/generated/BioSimSpace.Metadynamics.run.rst", "api/generated/BioSimSpace.Node.help.rst", "api/generated/BioSimSpace.Node.list.rst", "api/generated/BioSimSpace.Node.run.rst", "api/generated/BioSimSpace.Node.setNodeDirectory.rst", "api/generated/BioSimSpace.Notebook.View.rst", "api/generated/BioSimSpace.Notebook.plot.rst", "api/generated/BioSimSpace.Notebook.plotContour.rst", "api/generated/BioSimSpace.Notebook.plotOverlapMatrix.rst", "api/generated/BioSimSpace.Parameters.amberForceFields.rst", "api/generated/BioSimSpace.Parameters.amberProteinForceFields.rst", "api/generated/BioSimSpace.Parameters.ff03.rst", "api/generated/BioSimSpace.Parameters.ff14SB.rst", "api/generated/BioSimSpace.Parameters.ff99.rst", "api/generated/BioSimSpace.Parameters.ff99SB.rst", "api/generated/BioSimSpace.Parameters.ff99SBildn.rst", "api/generated/BioSimSpace.Parameters.forceFields.rst", "api/generated/BioSimSpace.Parameters.formalCharge.rst", "api/generated/BioSimSpace.Parameters.gaff.rst", "api/generated/BioSimSpace.Parameters.gaff2.rst", "api/generated/BioSimSpace.Parameters.openForceFields.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_0_0.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_0_0_RC1.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_0_0_RC2.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_0_1.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_1_0.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_1_1.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_2_0.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_2_1.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_3_0.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_3_1.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_1_3_1_alpha_1.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_2_0_0.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_2_0_0_rc_1.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_2_0_0_rc_2.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_2_1_0.rst", "api/generated/BioSimSpace.Parameters.openff_unconstrained_2_1_0_rc_1.rst", "api/generated/BioSimSpace.Parameters.parameterise.rst", "api/generated/BioSimSpace.Process.Amber.rst", "api/generated/BioSimSpace.Process.Gromacs.rst", "api/generated/BioSimSpace.Process.Namd.rst", "api/generated/BioSimSpace.Process.OpenMM.rst", "api/generated/BioSimSpace.Process.Plumed.rst", "api/generated/BioSimSpace.Process.ProcessRunner.rst", "api/generated/BioSimSpace.Process.Somd.rst", "api/generated/BioSimSpace.Process.createProcess.rst", "api/generated/BioSimSpace.Process.engines.rst", "api/generated/BioSimSpace.Protocol.Custom.rst", "api/generated/BioSimSpace.Protocol.Equilibration.rst", "api/generated/BioSimSpace.Protocol.FreeEnergy.rst", "api/generated/BioSimSpace.Protocol.FreeEnergyEquilibration.rst", "api/generated/BioSimSpace.Protocol.FreeEnergyMinimisation.rst", "api/generated/BioSimSpace.Protocol.FreeEnergyProduction.rst", "api/generated/BioSimSpace.Protocol.Metadynamics.rst", "api/generated/BioSimSpace.Protocol.Minimisation.rst", "api/generated/BioSimSpace.Protocol.Production.rst", "api/generated/BioSimSpace.Protocol.Steering.rst", "api/generated/BioSimSpace.Protocol.createProtocol.rst", "api/generated/BioSimSpace.Protocol.protocols.rst", "api/generated/BioSimSpace.Solvent.solvate.rst", "api/generated/BioSimSpace.Solvent.spc.rst", "api/generated/BioSimSpace.Solvent.spce.rst", "api/generated/BioSimSpace.Solvent.tip3p.rst", "api/generated/BioSimSpace.Solvent.tip4p.rst", "api/generated/BioSimSpace.Solvent.tip5p.rst", "api/generated/BioSimSpace.Solvent.waterModels.rst", "api/generated/BioSimSpace.Stream.load.rst", "api/generated/BioSimSpace.Stream.save.rst", "api/generated/BioSimSpace.Trajectory.Trajectory.rst", "api/generated/BioSimSpace.Types.Angle.rst", "api/generated/BioSimSpace.Types.Area.rst", "api/generated/BioSimSpace.Types.Charge.rst", "api/generated/BioSimSpace.Types.Coordinate.rst", "api/generated/BioSimSpace.Types.Energy.rst", "api/generated/BioSimSpace.Types.Length.rst", "api/generated/BioSimSpace.Types.Pressure.rst", "api/generated/BioSimSpace.Types.Temperature.rst", "api/generated/BioSimSpace.Types.Time.rst", "api/generated/BioSimSpace.Types.Vector.rst", "api/generated/BioSimSpace.Types.Volume.rst", "api/generated/BioSimSpace.Units.Angle.degree.rst", "api/generated/BioSimSpace.Units.Angle.radian.rst", "api/generated/BioSimSpace.Units.Area.angstrom2.rst", "api/generated/BioSimSpace.Units.Area.meter2.rst", "api/generated/BioSimSpace.Units.Area.nanometer2.rst", "api/generated/BioSimSpace.Units.Area.picometer2.rst", "api/generated/BioSimSpace.Units.Charge.coulomb.rst", "api/generated/BioSimSpace.Units.Charge.electron_charge.rst", "api/generated/BioSimSpace.Units.Energy.kcal_per_mol.rst", "api/generated/BioSimSpace.Units.Energy.kj_per_mol.rst", "api/generated/BioSimSpace.Units.Energy.kt.rst", "api/generated/BioSimSpace.Units.Length.angstrom.rst", "api/generated/BioSimSpace.Units.Length.meter.rst", "api/generated/BioSimSpace.Units.Length.nanometer.rst", "api/generated/BioSimSpace.Units.Length.picometer.rst", "api/generated/BioSimSpace.Units.Pressure.atm.rst", "api/generated/BioSimSpace.Units.Pressure.bar.rst", "api/generated/BioSimSpace.Units.Temperature.celsius.rst", "api/generated/BioSimSpace.Units.Temperature.fahrenheit.rst", "api/generated/BioSimSpace.Units.Temperature.kelvin.rst", "api/generated/BioSimSpace.Units.Time.day.rst", "api/generated/BioSimSpace.Units.Time.femtosecond.rst", "api/generated/BioSimSpace.Units.Time.hour.rst", "api/generated/BioSimSpace.Units.Time.millisecond.rst", "api/generated/BioSimSpace.Units.Time.minute.rst", "api/generated/BioSimSpace.Units.Time.nanosecond.rst", "api/generated/BioSimSpace.Units.Time.picosecond.rst", "api/generated/BioSimSpace.Units.Time.second.rst", "api/generated/BioSimSpace.Units.Volume.angstrom3.rst", "api/generated/BioSimSpace.Units.Volume.meter3.rst", "api/generated/BioSimSpace.Units.Volume.nanometer3.rst", "api/generated/BioSimSpace.Units.Volume.picometer3.rst", "api/generated/BioSimSpace._Config.Amber.rst", "api/generated/BioSimSpace._Config.Gromacs.rst", "api/generated/BioSimSpace._Config.Somd.rst", "api/generated/BioSimSpace._Exceptions.AlignmentError.rst", "api/generated/BioSimSpace._Exceptions.AnalysisError.rst", "api/generated/BioSimSpace._Exceptions.ConversionError.rst", "api/generated/BioSimSpace._Exceptions.IncompatibleError.rst", "api/generated/BioSimSpace._Exceptions.MissingSoftwareError.rst", "api/generated/BioSimSpace._Exceptions.ParameterisationError.rst", "api/generated/BioSimSpace._Exceptions.StreamError.rst", "api/generated/BioSimSpace._Exceptions.ThirdPartyError.rst", "api/generated/BioSimSpace._SireWrappers.Atom.rst", "api/generated/BioSimSpace._SireWrappers.Bond.rst", "api/generated/BioSimSpace._SireWrappers.Molecule.rst", "api/generated/BioSimSpace._SireWrappers.Molecules.rst", "api/generated/BioSimSpace._SireWrappers.Residue.rst", "api/generated/BioSimSpace._SireWrappers.SearchResult.rst", "api/generated/BioSimSpace._SireWrappers.System.rst", "api/generated/BioSimSpace._Utils.WorkDir.rst", "api/generated/BioSimSpace._Utils._assert_imported.rst", "api/generated/BioSimSpace._Utils._have_imported.rst", "api/generated/BioSimSpace._Utils._module_stub.rst", "api/generated/BioSimSpace._Utils._try_import.rst", "api/generated/BioSimSpace._Utils.cd.rst", "api/generated/BioSimSpace._Utils.command_split.rst", "api/index.rst", "api/index_Align.rst", "api/index_Box.rst", "api/index_Config.rst", "api/index_Convert.rst", "api/index_Exceptions.rst", "api/index_FreeEnergy.rst", "api/index_Gateway.rst", "api/index_IO.rst", "api/index_MD.rst", "api/index_Metadynamics.rst", "api/index_Metadynamics_CollectiveVariable.rst", "api/index_Node.rst", "api/index_Notebook.rst", "api/index_Parameters.rst", "api/index_Process.rst", "api/index_Protocol.rst", "api/index_Sandpit.rst", "api/index_SireWrappers.rst", "api/index_Solvent.rst", "api/index_Stream.rst", "api/index_Trajectory.rst", "api/index_Types.rst", "api/index_Units.rst", "api/index_Utils.rst", "changelog.rst", "code_of_conduct.rst", "compatibility.rst", "contributing/codestyle.rst", "contributing/development.rst", "contributing/index.rst", "contributing/packaging.rst", "contributing/roadmap.rst", "contributors.rst", "features.rst", "guides/index.rst", "guides/nodes.rst", "guides/protocols.rst", "index.rst", "install.rst", "quickstart/index.rst", "support.rst", "tutorials/crystal_water.rst", "tutorials/hydration_freenrg.rst", "tutorials/index.rst", "tutorials/metadynamics.rst"], "titles": ["BioSimSpace.Align.flexAlign", "BioSimSpace.Align.generateNetwork", "BioSimSpace.Align.matchAtoms", "BioSimSpace.Align.merge", "BioSimSpace.Align.rmsdAlign", "BioSimSpace.Align.viewMapping", "BioSimSpace.Box.boxTypes", "BioSimSpace.Box.cubic", "BioSimSpace.Box.generateBoxParameters", "BioSimSpace.Box.rhombicDodecahedronHexagon", "BioSimSpace.Box.rhombicDodecahedronSquare", "BioSimSpace.Box.truncatedOctahedron", "BioSimSpace.Convert.smiles", "BioSimSpace.Convert.supportedFormats", "BioSimSpace.Convert.to", "BioSimSpace.Convert.toBioSimSpace", "BioSimSpace.Convert.toOpenMM", "BioSimSpace.Convert.toRDKit", "BioSimSpace.Convert.toSire", "BioSimSpace.FreeEnergy.Relative", "BioSimSpace.FreeEnergy.engines", "BioSimSpace.FreeEnergy.getData", "BioSimSpace.Gateway.Area", "BioSimSpace.Gateway.Boolean", "BioSimSpace.Gateway.Charge", "BioSimSpace.Gateway.Energy", "BioSimSpace.Gateway.File", "BioSimSpace.Gateway.FileSet", "BioSimSpace.Gateway.Float", "BioSimSpace.Gateway.Integer", "BioSimSpace.Gateway.Length", "BioSimSpace.Gateway.Node", "BioSimSpace.Gateway.Pressure", "BioSimSpace.Gateway.String", "BioSimSpace.Gateway.Temperature", "BioSimSpace.Gateway.Time", "BioSimSpace.Gateway.Volume", "BioSimSpace.IO.fileFormats", "BioSimSpace.IO.formatInfo", "BioSimSpace.IO.readMolecules", "BioSimSpace.IO.readPDB", "BioSimSpace.IO.readPerturbableSystem", "BioSimSpace.IO.saveMolecules", "BioSimSpace.IO.savePerturbableSystem", "BioSimSpace.MD.engines", "BioSimSpace.MD.run", "BioSimSpace.Metadynamics.Bound", "BioSimSpace.Metadynamics.CollectiveVariable.Distance", "BioSimSpace.Metadynamics.CollectiveVariable.Funnel", "BioSimSpace.Metadynamics.CollectiveVariable.RMSD", "BioSimSpace.Metadynamics.CollectiveVariable.Torsion", "BioSimSpace.Metadynamics.CollectiveVariable.list", "BioSimSpace.Metadynamics.CollectiveVariable.makeFunnel", "BioSimSpace.Metadynamics.CollectiveVariable.viewFunnel", "BioSimSpace.Metadynamics.Grid", "BioSimSpace.Metadynamics.Restraint", "BioSimSpace.Metadynamics.engines", "BioSimSpace.Metadynamics.run", "BioSimSpace.Node.help", "BioSimSpace.Node.list", "BioSimSpace.Node.run", "BioSimSpace.Node.setNodeDirectory", "BioSimSpace.Notebook.View", "BioSimSpace.Notebook.plot", "BioSimSpace.Notebook.plotContour", "BioSimSpace.Notebook.plotOverlapMatrix", "BioSimSpace.Parameters.amberForceFields", "BioSimSpace.Parameters.amberProteinForceFields", "BioSimSpace.Parameters.ff03", "BioSimSpace.Parameters.ff14SB", "BioSimSpace.Parameters.ff99", "BioSimSpace.Parameters.ff99SB", "BioSimSpace.Parameters.ff99SBildn", "BioSimSpace.Parameters.forceFields", "BioSimSpace.Parameters.formalCharge", "BioSimSpace.Parameters.gaff", "BioSimSpace.Parameters.gaff2", "BioSimSpace.Parameters.openForceFields", "BioSimSpace.Parameters.openff_unconstrained_1_0_0", "BioSimSpace.Parameters.openff_unconstrained_1_0_0_RC1", "BioSimSpace.Parameters.openff_unconstrained_1_0_0_RC2", "BioSimSpace.Parameters.openff_unconstrained_1_0_1", "BioSimSpace.Parameters.openff_unconstrained_1_1_0", "BioSimSpace.Parameters.openff_unconstrained_1_1_1", "BioSimSpace.Parameters.openff_unconstrained_1_2_0", "BioSimSpace.Parameters.openff_unconstrained_1_2_1", "BioSimSpace.Parameters.openff_unconstrained_1_3_0", "BioSimSpace.Parameters.openff_unconstrained_1_3_1", "BioSimSpace.Parameters.openff_unconstrained_1_3_1_alpha_1", "BioSimSpace.Parameters.openff_unconstrained_2_0_0", "BioSimSpace.Parameters.openff_unconstrained_2_0_0_rc_1", "BioSimSpace.Parameters.openff_unconstrained_2_0_0_rc_2", "BioSimSpace.Parameters.openff_unconstrained_2_1_0", "BioSimSpace.Parameters.openff_unconstrained_2_1_0_rc_1", "BioSimSpace.Parameters.parameterise", "BioSimSpace.Process.Amber", "BioSimSpace.Process.Gromacs", "BioSimSpace.Process.Namd", "BioSimSpace.Process.OpenMM", "BioSimSpace.Process.Plumed", "BioSimSpace.Process.ProcessRunner", "BioSimSpace.Process.Somd", "BioSimSpace.Process.createProcess", "BioSimSpace.Process.engines", "BioSimSpace.Protocol.Custom", "BioSimSpace.Protocol.Equilibration", "BioSimSpace.Protocol.FreeEnergy", "BioSimSpace.Protocol.FreeEnergyEquilibration", "BioSimSpace.Protocol.FreeEnergyMinimisation", "BioSimSpace.Protocol.FreeEnergyProduction", "BioSimSpace.Protocol.Metadynamics", "BioSimSpace.Protocol.Minimisation", "BioSimSpace.Protocol.Production", "BioSimSpace.Protocol.Steering", "BioSimSpace.Protocol.createProtocol", "BioSimSpace.Protocol.protocols", "BioSimSpace.Solvent.solvate", "BioSimSpace.Solvent.spc", "BioSimSpace.Solvent.spce", "BioSimSpace.Solvent.tip3p", "BioSimSpace.Solvent.tip4p", "BioSimSpace.Solvent.tip5p", "BioSimSpace.Solvent.waterModels", "BioSimSpace.Stream.load", "BioSimSpace.Stream.save", "BioSimSpace.Trajectory.Trajectory", "BioSimSpace.Types.Angle", "BioSimSpace.Types.Area", "BioSimSpace.Types.Charge", "BioSimSpace.Types.Coordinate", "BioSimSpace.Types.Energy", "BioSimSpace.Types.Length", "BioSimSpace.Types.Pressure", "BioSimSpace.Types.Temperature", "BioSimSpace.Types.Time", "BioSimSpace.Types.Vector", "BioSimSpace.Types.Volume", "BioSimSpace.Units.Angle.degree", "BioSimSpace.Units.Angle.radian", "BioSimSpace.Units.Area.angstrom2", "BioSimSpace.Units.Area.meter2", "BioSimSpace.Units.Area.nanometer2", "BioSimSpace.Units.Area.picometer2", "BioSimSpace.Units.Charge.coulomb", "BioSimSpace.Units.Charge.electron_charge", "BioSimSpace.Units.Energy.kcal_per_mol", "BioSimSpace.Units.Energy.kj_per_mol", "BioSimSpace.Units.Energy.kt", "BioSimSpace.Units.Length.angstrom", "BioSimSpace.Units.Length.meter", "BioSimSpace.Units.Length.nanometer", "BioSimSpace.Units.Length.picometer", "BioSimSpace.Units.Pressure.atm", "BioSimSpace.Units.Pressure.bar", "BioSimSpace.Units.Temperature.celsius", "BioSimSpace.Units.Temperature.fahrenheit", "BioSimSpace.Units.Temperature.kelvin", "BioSimSpace.Units.Time.day", "BioSimSpace.Units.Time.femtosecond", "BioSimSpace.Units.Time.hour", "BioSimSpace.Units.Time.millisecond", "BioSimSpace.Units.Time.minute", "BioSimSpace.Units.Time.nanosecond", "BioSimSpace.Units.Time.picosecond", "BioSimSpace.Units.Time.second", "BioSimSpace.Units.Volume.angstrom3", "BioSimSpace.Units.Volume.meter3", "BioSimSpace.Units.Volume.nanometer3", "BioSimSpace.Units.Volume.picometer3", "BioSimSpace._Config.Amber", "BioSimSpace._Config.Gromacs", "BioSimSpace._Config.Somd", "BioSimSpace._Exceptions.AlignmentError", "BioSimSpace._Exceptions.AnalysisError", "BioSimSpace._Exceptions.ConversionError", "BioSimSpace._Exceptions.IncompatibleError", "BioSimSpace._Exceptions.MissingSoftwareError", "BioSimSpace._Exceptions.ParameterisationError", "BioSimSpace._Exceptions.StreamError", "BioSimSpace._Exceptions.ThirdPartyError", "BioSimSpace._SireWrappers.Atom", "BioSimSpace._SireWrappers.Bond", "BioSimSpace._SireWrappers.Molecule", "BioSimSpace._SireWrappers.Molecules", "BioSimSpace._SireWrappers.Residue", "BioSimSpace._SireWrappers.SearchResult", "BioSimSpace._SireWrappers.System", "BioSimSpace._Utils.WorkDir", "BioSimSpace._Utils._assert_imported", "BioSimSpace._Utils._have_imported", "BioSimSpace._Utils._module_stub", "BioSimSpace._Utils._try_import", "BioSimSpace._Utils.cd", "BioSimSpace._Utils.command_split", "API Documentation", "BioSimSpace.Align", "BioSimSpace.Box", "BioSimSpace._Config", "BioSimSpace.Convert", "BioSimSpace._Exceptions", "BioSimSpace.FreeEnergy", "BioSimSpace.Gateway", "BioSimSpace.IO", "BioSimSpace.MD", "BioSimSpace.Metadynamics", "BioSimSpace.Metadynamics.CollectiveVariable", "BioSimSpace.Node", "BioSimSpace.Notebook", "BioSimSpace.Parameters", "BioSimSpace.Process", "BioSimSpace.Protocol", "BioSimSpace.Sandpit", "BioSimSpace._SireWrappers", "BioSimSpace.Solvent", "BioSimSpace.Stream", "BioSimSpace.Trajectory", "BioSimSpace.Types", "BioSimSpace.Units", "BioSimSpace._Utils", "Changelog", "Code of Conduct", "Compatibility", "Coding Style", "Developer\u2019s guide", "Contributing", "Development process", "Roadmap", "Contributors", "Features", "Detailed Guides", "Nodes", "Protocols", "OpenBioSim | BioSimSpace", "Installation", "Quick Start Guide", "How to ask for help", "Crystal water", "Hydration free energy", "Tutorials", "Metadynamics"], "terms": {"molecule0": [0, 1, 2, 3, 4, 5, 182], "molecule1": [0, 2, 3, 4, 5, 182], "map": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186, 195, 219, 233, 237], "none": [0, 1, 3, 4, 5, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 45, 47, 48, 49, 50, 52, 54, 57, 62, 63, 64, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 125, 169, 170, 182, 186, 187, 190, 191, 214], "fkcombu_ex": 0, "property_map0": [0, 2, 3, 4, 5, 186], "property_map1": [0, 2, 3, 4, 5, 186], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 208, 219, 223, 225, 232], "flexibli": [0, 2, 237], "atom": [0, 2, 3, 4, 5, 47, 48, 49, 50, 52, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 105, 107, 108, 109, 111, 112, 125, 181, 182, 183, 184, 185, 186, 195, 198, 210, 219, 236, 237, 239], "those": [0, 2, 3, 4, 5, 39, 116, 117, 118, 119, 120, 121, 198, 219, 223, 225, 231, 233, 236, 237], "us": [0, 1, 2, 3, 4, 19, 31, 39, 40, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 62, 65, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 125, 169, 180, 181, 182, 183, 184, 186, 190, 191, 194, 195, 196, 197, 198, 200, 204, 205, 207, 208, 209, 210, 211, 213, 214, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239], "between": [0, 1, 2, 3, 4, 5, 19, 48, 68, 69, 70, 71, 72, 95, 96, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 135, 182, 195, 198, 200, 201, 219, 225, 226, 230, 237], "match": [0, 2, 3, 4, 42, 45, 49, 57, 95, 96, 97, 98, 105, 107, 108, 109, 111, 112, 116, 117, 118, 119, 120, 121, 126, 127, 128, 130, 131, 132, 133, 134, 136, 181, 182, 183, 184, 186, 195, 219, 223, 230, 233, 236, 237, 239], "indic": [0, 1, 2, 3, 4, 5, 48, 49, 50, 52, 62, 100, 105, 107, 108, 109, 111, 112, 125, 182, 186, 195, 223, 226, 237, 239], "paramet": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 194, 196, 219, 223, 231, 234, 236, 237], "molecul": [0, 1, 2, 3, 4, 5, 12, 19, 39, 42, 43, 49, 52, 62, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 105, 107, 108, 109, 111, 112, 116, 117, 118, 119, 120, 121, 169, 170, 171, 180, 181, 184, 185, 186, 195, 198, 200, 207, 208, 209, 213, 219, 228, 234, 236, 237, 239], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 230, 231, 232, 233, 234, 236, 237, 239], "refer": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186, 200, 219, 225, 236], "dict": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 31, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 60, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186], "A": [0, 1, 2, 3, 4, 5, 6, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 57, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 196, 200, 222, 223, 230, 236], "dictionari": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 31, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 60, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186, 206, 222, 223, 230, 237], "str": [0, 1, 2, 5, 6, 8, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 51, 52, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 169, 170, 171, 180, 181, 182, 183, 184, 186, 187, 190, 191, 192], "path": [0, 1, 19, 21, 39, 40, 41, 61, 62, 68, 69, 70, 71, 72, 95, 96, 97, 98, 99, 101, 113, 123, 200, 204, 206, 223, 225, 230, 231, 233], "fkcombu": [0, 2, 219, 237], "execut": [0, 68, 69, 70, 71, 72, 95, 96, 97, 98, 100, 101, 192, 200, 209, 219, 223, 230, 231], "If": [0, 1, 3, 19, 31, 39, 45, 47, 49, 52, 54, 57, 65, 99, 100, 105, 107, 108, 109, 111, 112, 125, 182, 186, 187, 190, 191, 203, 207, 209, 223, 225, 226, 227, 230, 231, 232, 233, 235, 237, 238, 239], "i": [0, 1, 2, 3, 4, 5, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 55, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 107, 108, 109, 111, 112, 113, 116, 117, 118, 119, 120, 121, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 169, 170, 171, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 200, 203, 204, 207, 208, 209, 210, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239], "pass": [0, 1, 3, 4, 22, 24, 25, 30, 32, 34, 35, 36, 47, 48, 52, 60, 99, 105, 107, 108, 109, 110, 111, 112, 113, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 182, 188, 189, 193, 200, 207, 208, 210, 213, 219, 223, 225, 230, 231, 234, 236, 239], "attempt": [0, 231], "find": [0, 2, 4, 195, 203, 224, 225, 234, 235], "search": [0, 2, 68, 69, 70, 71, 72, 181, 182, 183, 184, 185, 186, 195, 219, 222, 223, 236, 239], "your": [0, 100, 204, 207, 208, 222, 223, 224, 225, 226, 227, 233, 235, 239], "properti": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186, 195, 219, 237], "user": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 31, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 107, 108, 109, 111, 112, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186, 197, 201, 203, 208, 210, 212, 213, 219, 221, 222, 223, 225, 230, 231, 233, 236, 237], "defin": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 39, 40, 41, 42, 43, 45, 46, 48, 49, 52, 53, 54, 57, 62, 65, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186, 201, 203, 210, 220, 230, 231, 237, 239], "valu": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 62, 63, 64, 65, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 169, 170, 171, 180, 181, 182, 183, 184, 186, 207, 219, 230, 231, 237, 239], "thi": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 27, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 52, 53, 57, 62, 65, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 107, 108, 109, 111, 112, 116, 117, 118, 119, 120, 121, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 196, 197, 198, 200, 208, 210, 213, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 233, 235, 236, 237, 238, 239], "allow": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186, 200, 201, 211, 219, 222, 223, 225, 226, 230, 237, 239], "own": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186, 223, 226, 230, 231, 235], "name": [0, 1, 2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 58, 60, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 124, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186, 190, 191, 208, 219, 224, 227, 230, 236, 237, 239], "scheme": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186], "e": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 39, 40, 41, 42, 43, 45, 46, 48, 49, 52, 53, 57, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 144, 169, 170, 171, 180, 181, 182, 183, 184, 186, 198, 201, 204, 207, 208, 209, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 235, 236, 237, 239], "g": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 116, 117, 118, 119, 120, 121, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 169, 170, 171, 180, 181, 182, 183, 184, 186, 201, 204, 207, 208, 211, 212, 219, 221, 222, 223, 225, 226, 230, 231, 232, 233, 235, 236, 237, 239], "charg": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 62, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 107, 108, 109, 116, 117, 118, 119, 120, 121, 125, 126, 127, 130, 131, 132, 133, 134, 136, 169, 170, 171, 180, 181, 182, 183, 184, 186, 208, 219, 236], "my": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 19, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 195, 198, 200, 203, 207, 208, 219, 222, 223, 230, 234, 239], "type": [0, 2, 3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 190, 191, 194, 199, 207, 212, 214, 217, 219, 222, 223, 230, 231, 233, 238, 239], "exampl": [0, 2, 3, 4, 5, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 99, 126, 127, 128, 130, 131, 132, 133, 134, 136, 181, 182, 183, 184, 186, 194, 195, 196, 198, 200, 203, 206, 207, 208, 209, 210, 213, 214, 217, 219, 220, 222, 223, 225, 228, 229, 231, 233, 235, 236, 239], "base": [0, 2, 3, 4, 42, 43, 47, 50, 116, 117, 118, 119, 120, 121, 124, 169, 170, 171, 180, 181, 182, 183, 184, 186, 195, 203, 209, 219, 225, 226, 230, 231, 234, 236, 237, 239], "precomput": [0, 3, 4], "import": [0, 2, 3, 4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 126, 127, 128, 130, 131, 132, 133, 134, 136, 188, 189, 191, 195, 196, 198, 200, 203, 206, 208, 209, 210, 211, 213, 214, 217, 219, 222, 223, 230, 233, 234, 236, 237, 238, 239], "bss": [0, 2, 3, 4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 126, 127, 128, 130, 131, 132, 133, 134, 136, 195, 196, 198, 200, 203, 206, 208, 209, 210, 211, 213, 214, 217, 222, 223, 230, 233, 234, 236, 237, 238, 239], "sinc": [0, 3, 4, 100, 101, 200, 219, 222, 223, 225, 226, 231, 236, 237, 239], "one": [0, 2, 3, 4, 99, 100, 105, 107, 108, 109, 111, 112, 125, 182, 198, 223, 225, 226, 230, 236, 237], "autogener": [0, 3, 4, 95, 96, 97, 98, 101], "matchatom": [0, 3, 4, 195, 237], "default": [0, 1, 3, 4, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 55, 62, 65, 95, 96, 101, 105, 107, 108, 109, 111, 112, 113, 114, 169, 170, 171, 200, 203, 208, 210, 219, 223, 230, 231, 234, 236, 237, 239], "option": [0, 1, 2, 3, 4, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 45, 47, 49, 57, 65, 68, 69, 70, 71, 72, 95, 96, 101, 102, 105, 107, 108, 109, 111, 112, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 182, 186, 190, 191, 208, 210, 219, 225, 230, 231, 233, 234, 237, 239], "work_dir": [1, 19, 21, 40, 45, 57, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 116, 117, 118, 119, 120, 121, 187, 192, 200, 209, 237], "plot_network": 1, "fals": [1, 2, 3, 19, 21, 23, 26, 27, 39, 40, 45, 57, 62, 63, 65, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 109, 112, 116, 117, 118, 119, 120, 121, 169, 180, 181, 182, 183, 184, 186, 236], "links_fil": 1, "property_map": [1, 12, 14, 15, 16, 17, 18, 19, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186], "n_edges_forc": 1, "kwarg": [1, 19, 42, 45, 57, 75, 76, 94, 102], "gener": [1, 7, 8, 9, 10, 11, 12, 19, 31, 42, 54, 95, 96, 101, 126, 127, 128, 130, 131, 132, 133, 134, 136, 169, 170, 171, 195, 196, 197, 200, 203, 206, 207, 209, 210, 214, 219, 222, 223, 226, 230, 231, 234, 237, 239], "perturb": [1, 3, 19, 20, 41, 43, 62, 65, 107, 108, 109, 182, 186, 195, 200, 219, 228, 231, 237], "network": [1, 219], "lead": [1, 3, 100], "optimis": [1, 221, 233, 237], "mappper": 1, "lomap": [1, 219], "class": [1, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 46, 47, 48, 49, 50, 54, 55, 62, 68, 69, 70, 71, 72, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 110, 111, 112, 113, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 219, 222, 223, 230, 231], "rdkit": [1, 2, 16, 17, 198, 219, 226], "chem": 1, "rdchem": 1, "mol": [1, 25, 39, 68, 69, 70, 71, 72, 105, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 130, 145, 146, 180, 182, 183, 184, 185, 186, 213, 223], "list": [1, 2, 6, 8, 13, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 44, 47, 48, 49, 50, 52, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 125, 169, 170, 171, 181, 182, 183, 184, 186, 198, 206, 207, 208, 209, 210, 213, 221, 222, 223, 225, 230, 231, 234, 239], "both": [1, 5, 65, 100, 113, 220, 223, 228, 231, 236, 237], "object": [1, 3, 14, 15, 16, 17, 18, 19, 31, 52, 53, 62, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 175, 180, 181, 182, 183, 184, 185, 186, 198, 200, 203, 208, 209, 212, 214, 215, 219, 222, 223, 230, 231, 237, 239], "ar": [1, 2, 19, 31, 39, 43, 48, 49, 52, 68, 69, 70, 71, 72, 96, 99, 100, 105, 107, 108, 109, 110, 111, 112, 113, 125, 175, 176, 182, 186, 194, 195, 198, 200, 207, 208, 209, 210, 212, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239], "support": [1, 6, 8, 13, 19, 20, 37, 38, 42, 44, 45, 51, 56, 57, 66, 67, 68, 69, 70, 71, 72, 73, 77, 94, 95, 96, 97, 98, 101, 103, 105, 107, 108, 109, 111, 112, 115, 122, 196, 198, 200, 203, 204, 208, 209, 210, 211, 213, 215, 219, 221, 225, 226, 228, 230, 231, 233, 234, 237, 238], "index": [1, 3, 19, 47, 49, 52, 62, 95, 96, 97, 98, 99, 100, 101, 107, 108, 109, 125, 180, 181, 182, 183, 184, 185, 186, 207, 219, 223, 232, 236, 237, 239], "each": [1, 2, 19, 38, 43, 47, 48, 65, 95, 96, 97, 98, 100, 101, 113, 116, 117, 118, 119, 120, 121, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 175, 180, 181, 182, 183, 184, 186, 200, 207, 222, 223, 225, 226, 231, 235, 237, 239], "work": [1, 19, 21, 40, 45, 57, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 116, 117, 118, 119, 120, 121, 125, 182, 186, 187, 192, 196, 200, 208, 209, 211, 219, 221, 222, 223, 225, 226, 228, 230, 231, 232, 233, 235, 237, 238, 239], "directori": [1, 19, 21, 39, 40, 45, 57, 61, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 116, 117, 118, 119, 120, 121, 187, 192, 194, 200, 206, 209, 219, 223, 225, 230, 233, 237], "process": [1, 19, 21, 31, 40, 45, 57, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 107, 108, 109, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 194, 196, 197, 200, 203, 207, 208, 210, 215, 219, 223, 224, 228, 230, 231, 232, 234, 236, 237, 239], "bool": [1, 2, 3, 12, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 42, 45, 47, 49, 50, 57, 62, 63, 65, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 107, 109, 112, 116, 117, 118, 119, 120, 121, 169, 170, 171, 180, 181, 182, 183, 184, 186, 189], "whether": [1, 2, 3, 5, 12, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 45, 47, 49, 50, 57, 62, 63, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 107, 109, 112, 113, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186, 187, 189], "plot": [1, 64, 65, 207, 219, 228, 230, 233, 239], "when": [1, 2, 3, 19, 21, 42, 47, 49, 50, 62, 65, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 172, 173, 174, 175, 176, 177, 178, 186, 196, 200, 207, 208, 214, 219, 220, 222, 223, 224, 225, 226, 230, 231, 233, 236, 237], "run": [1, 8, 19, 20, 31, 40, 53, 68, 69, 70, 71, 72, 94, 95, 96, 97, 98, 99, 100, 101, 105, 107, 109, 110, 112, 113, 200, 201, 203, 204, 206, 207, 208, 209, 215, 219, 221, 222, 225, 228, 229, 231, 232, 234, 235, 237, 239], "from": [1, 3, 19, 22, 24, 25, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 47, 48, 49, 50, 54, 65, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 113, 123, 125, 129, 182, 186, 195, 196, 198, 200, 201, 203, 207, 208, 209, 210, 214, 215, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 234, 235, 236, 237, 239], "within": [1, 31, 39, 49, 52, 107, 108, 109, 186, 201, 207, 219, 220, 222, 223, 225, 228, 230, 231, 232, 236, 237, 239], "notebook": [1, 53, 194, 219, 225, 228, 230, 233, 237, 239], "png": 1, "imag": [1, 7, 8, 9, 10, 11, 225], "locat": [1, 113, 223], "file": [1, 19, 21, 27, 31, 37, 38, 39, 40, 41, 42, 43, 49, 62, 68, 69, 70, 71, 72, 95, 96, 97, 98, 99, 101, 104, 105, 107, 108, 109, 111, 112, 113, 123, 124, 125, 169, 170, 171, 180, 181, 182, 183, 184, 186, 194, 197, 198, 200, 203, 206, 208, 209, 213, 214, 215, 219, 222, 223, 225, 226, 228, 230, 231, 233, 234, 235, 237, 239], "provid": [1, 3, 194, 195, 200, 201, 203, 204, 217, 219, 222, 223, 226, 230, 231, 235, 237, 239], "link": [1, 19, 21, 31, 95, 96, 97, 98, 101, 214, 225, 230], "seed": [1, 45, 57, 95, 96, 97, 98, 101], "graph": [1, 207], "record": [1, 40, 95, 96, 97, 98, 99, 101, 105, 107, 109, 110, 112, 219], "must": [1, 2, 19, 113, 116, 117, 118, 119, 120, 121, 223, 225, 230, 233], "contain": [1, 2, 19, 21, 31, 39, 43, 49, 60, 62, 65, 95, 96, 97, 98, 100, 101, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 169, 170, 171, 181, 182, 183, 184, 185, 186, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 222, 223, 225, 226, 230, 234, 236, 237, 239], "minimum": [1, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 48, 54, 107, 108, 109, 180, 181, 182, 183, 184, 186, 209, 230], "two": [1, 2, 3, 5, 19, 48, 52, 64, 98, 99, 135, 195, 200, 207, 217, 223, 236, 237, 239], "entri": [1, 225], "ligand": [1, 48, 52, 53, 200, 219], "interest": [1, 2, 19, 49, 52, 53, 186, 219, 220, 239], "liga": [1, 200], "ligb": [1, 200], "third": [1, 39, 179, 186, 233], "column": 1, "can": [1, 3, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 45, 47, 48, 49, 50, 52, 57, 65, 68, 69, 70, 71, 72, 96, 99, 100, 105, 107, 108, 109, 111, 112, 126, 127, 128, 130, 131, 132, 133, 134, 136, 182, 186, 195, 198, 200, 201, 204, 207, 208, 209, 210, 214, 215, 219, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239], "includ": [1, 2, 220, 224, 225, 226, 228, 230, 233], "pre": [1, 233, 239], "comput": [1, 2, 19, 47, 49, 50, 74, 100, 125, 200, 208, 219, 221, 224, 225, 231, 233, 235, 237, 239], "score": [1, 2, 195, 219, 237], "pair": [1, 68, 69, 70, 71, 72, 223], "1": [1, 2, 28, 29, 32, 41, 46, 48, 62, 65, 68, 69, 70, 71, 72, 95, 96, 98, 99, 105, 107, 108, 109, 110, 111, 112, 113, 128, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 180, 181, 182, 183, 184, 186, 213, 214, 220, 222, 223, 225, 226, 234, 236, 237, 239], "mean": [1, 2, 4, 19, 49, 125, 195, 200, 222, 223, 226, 230, 231, 233, 237], "recomput": 1, "forc": [1, 3, 19, 46, 55, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 105, 107, 108, 109, 111, 112, 182, 186, 200, 208, 221, 226, 228, 231, 234, 237], "neg": [1, 186], "absolut": [1, 68, 69, 70, 71, 72, 186, 219, 226, 239], "posit": [1, 39, 52, 96, 113, 129, 186, 210, 219, 220], "treat": 1, "normal": [1, 100], "calcul": [1, 2, 47, 49, 50, 52, 75, 76, 200, 219, 237, 239], "final": [1, 105, 107, 224, 225, 230, 234, 237, 239], "fourth": 1, "string": [1, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 40, 49, 63, 64, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 104, 126, 127, 128, 130, 131, 132, 133, 134, 136, 169, 170, 171, 180, 181, 182, 183, 184, 186, 208, 219, 230, 231], "irrespect": 1, "its": [1, 19, 100, 185, 207, 220, 221, 223, 226, 231, 233, 236], "int": [1, 2, 5, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 45, 46, 47, 48, 49, 50, 52, 54, 55, 57, 62, 75, 76, 95, 96, 97, 98, 99, 100, 101, 105, 107, 108, 109, 110, 111, 112, 113, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186], "an": [1, 2, 3, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 28, 29, 31, 45, 47, 48, 49, 50, 57, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 113, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 180, 181, 182, 183, 186, 198, 200, 204, 208, 210, 211, 213, 214, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 236, 237, 239], "integ": [1, 31, 230], "number": [1, 2, 19, 31, 45, 47, 48, 49, 50, 54, 57, 62, 95, 96, 97, 98, 99, 100, 101, 105, 107, 108, 109, 110, 111, 112, 113, 125, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 210, 219, 222, 223, 225, 226, 228, 230, 232, 233, 237, 239], "edg": [1, 226], "should": [1, 48, 49, 68, 69, 70, 71, 72, 95, 96, 97, 98, 100, 101, 105, 107, 108, 109, 111, 112, 208, 209, 210, 213, 222, 223, 225, 226, 230, 231, 233, 239], "rang": [1, 28, 29, 62, 96, 196, 208, 209, 219, 223, 225, 228, 231, 239], "len": [1, 236], "2": [1, 28, 29, 46, 48, 55, 68, 69, 70, 71, 72, 105, 107, 108, 109, 110, 111, 112, 113, 126, 127, 128, 133, 134, 139, 140, 141, 142, 204, 213, 214, 221, 222, 223, 225, 226, 234, 236, 237, 239], "In": [1, 105, 107, 109, 110, 112, 113, 200, 210, 220, 222, 223, 225, 230, 231, 233, 236, 237, 239], "case": [1, 39, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 186, 221, 223, 225, 230, 231, 236, 239], "where": [1, 19, 47, 48, 49, 50, 100, 198, 207, 208, 210, 213, 219, 222, 223, 225, 226, 233], "suggest": [1, 224], "add": [1, 12, 31, 95, 96, 97, 98, 100, 101, 117, 118, 119, 120, 121, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 207, 219, 223, 224, 227, 231, 233, 236], "top": [1, 42, 198, 203, 206, 209, 213, 214, 222, 223, 225, 230, 233, 234, 237, 239], "n": [1, 95, 96, 97, 98, 101, 105, 107, 109, 110, 112, 113, 125, 162, 222, 223, 233, 239], "pars": [1, 39, 40, 95, 96, 97, 98, 101, 125, 219], "output": [1, 19, 21, 31, 42, 43, 60, 95, 96, 97, 98, 100, 101, 124, 180, 181, 182, 183, 184, 185, 186, 200, 206, 207, 209, 219, 223, 230, 237], "them": [1, 211, 223, 224, 228, 233, 236, 237], "convers": [1, 105, 107, 108, 109, 111, 112, 174, 198, 219, 225, 226], "remov": [1, 100, 186, 219, 220, 233, 236], "bottom": [1, 230], "last": [1, 95, 96, 97, 98, 101, 225], "discourag": 1, "caus": [1, 48, 219, 233], "cycl": [1, 101, 225], "breakag": 1, "disconnect": 1, "cluster": 1, "keyword": [1, 45, 57, 94, 102, 105, 107, 108, 109, 111, 112, 209, 219, 223, 230, 231], "argument": [1, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 45, 47, 48, 49, 50, 57, 60, 65, 94, 95, 96, 97, 98, 101, 102, 105, 107, 110, 113, 126, 127, 128, 130, 131, 132, 133, 134, 136, 200, 206, 207, 208, 209, 210, 213, 219, 223, 230, 231, 237, 239], "through": [1, 212, 219, 225, 231], "These": [1, 208, 212, 225, 226, 230, 231, 233, 237, 238, 239], "take": [1, 2, 3, 4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 46, 47, 48, 49, 50, 105, 107, 195, 207, 220, 223, 225, 226, 231, 233, 237, 239], "preced": [1, 3, 47, 105, 107, 207], "over": [1, 3, 47, 105, 107, 223, 225, 226], "ani": [1, 19, 39, 40, 47, 53, 68, 69, 70, 71, 72, 99, 100, 125, 182, 186, 190, 208, 210, 213, 220, 222, 223, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239], "set": [1, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 46, 47, 48, 49, 50, 52, 54, 55, 61, 65, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 107, 108, 109, 110, 111, 112, 113, 172, 173, 174, 175, 176, 177, 178, 179, 186, 206, 212, 217, 219, 220, 222, 223, 225, 230, 231, 236, 237, 239], "tupl": [1, 2, 19, 48, 68, 69, 70, 71, 72, 126, 127, 128, 130, 131, 132, 133, 134, 136, 219, 239], "itself": [1, 225, 230], "connect": [1, 3, 182, 186, 219], "float": [1, 19, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 46, 47, 48, 54, 55, 65, 68, 69, 70, 71, 72, 95, 96, 97, 98, 101, 105, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 169, 170, 182, 186], "higher": 1, "impli": 1, "along": [1, 2, 5, 42, 46, 48, 225, 230, 231, 239], "like": [1, 3, 100, 204, 219, 221, 223, 226, 230, 233, 239], "more": [1, 2, 65, 100, 105, 107, 108, 109, 111, 112, 200, 214, 221, 222, 223, 224, 225, 226, 230, 234, 239], "accur": 1, "scoring_funct": 2, "rmsd_align": 2, "return_scor": 2, "prematch": 2, "timeout": 2, "5": [2, 28, 29, 35, 48, 100, 204, 213, 214, 222, 223, 226, 237, 239], "0000": [2, 48, 68, 69, 70, 71, 72, 99, 105, 107, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 186, 214, 236, 237], "sec": [2, 164], "complete_rings_onli": 2, "true": [2, 12, 19, 26, 31, 40, 42, 45, 47, 49, 50, 57, 62, 65, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 116, 117, 118, 119, 120, 121, 182, 186, 200, 230, 234, 239], "max_scoring_match": 2, "1000": [2, 47, 49, 107, 109, 110, 113, 206, 209, 230, 237, 239], "maximum": [2, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 48, 54, 68, 69, 70, 71, 72, 95, 96, 97, 98, 101, 107, 108, 109, 111, 195, 219, 230, 237, 239], "common": [2, 195, 210, 217, 219, 220, 226, 228, 229, 231, 237], "substructur": [2, 195, 219, 237], "mc": [2, 195, 219, 237], "request": [2, 183, 185, 186, 222, 223, 224, 225, 226, 227, 237], "than": [2, 19, 65, 68, 69, 70, 71, 72, 113, 219, 222, 223, 231, 239], "sort": [2, 186, 195, 219], "function": [2, 53, 63, 64, 74, 94, 197, 201, 211, 219, 222, 223, 225, 226, 230, 231, 233, 236, 237, 239], "order": [2, 49, 219, 223, 236, 237, 239], "best": [2, 195, 220, 237], "worst": [2, 195], "note": [2, 12, 19, 22, 24, 25, 30, 32, 34, 35, 36, 39, 46, 101, 116, 117, 118, 119, 120, 121, 172, 173, 174, 175, 176, 177, 178, 179, 194, 200, 219, 221, 222, 225, 230, 231, 233, 236, 239], "depend": [2, 176, 219, 221, 225, 234], "mai": [2, 47, 220, 221, 222, 223, 225, 226, 231, 233, 234, 236], "have": [2, 19, 47, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 182, 186, 195, 200, 204, 219, 220, 221, 223, 225, 226, 227, 230, 233, 235, 236, 237, 238, 239], "lowest": 2, "avail": [2, 19, 59, 203, 206, 209, 219, 220, 222, 223, 225, 230, 234], "rmsd": [2, 4, 96, 125, 195, 219, 237], "root": [2, 4, 49, 125, 195, 225, 237], "squar": [2, 4, 10, 22, 49, 125, 127, 139, 140, 141, 142, 195, 237], "distanc": [2, 7, 8, 9, 10, 11, 48, 68, 69, 70, 71, 72, 219], "coordin": [2, 12, 39, 41, 42, 43, 47, 48, 52, 125, 180, 181, 182, 183, 184, 186, 219, 234, 236], "thei": [2, 5, 68, 69, 70, 71, 72, 99, 182, 209, 220, 221, 222, 223, 225, 226, 230, 233, 236, 239], "befor": [2, 39, 68, 69, 70, 71, 72, 100, 182, 186, 223, 224, 225, 226, 230, 233, 234, 236], "abov": [2, 126, 127, 128, 130, 131, 132, 133, 134, 136, 203, 204, 208, 210, 213, 222, 223, 225, 230, 231, 235, 237, 239], "rmsd_flex_align": [2, 219], "packag": [2, 95, 96, 97, 98, 101, 179, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 230, 231, 232, 233, 234, 237], "http": [2, 5, 220, 225, 232, 233], "pdbj": 2, "org": [2, 31, 220, 225, 230, 232, 233], "kcombu": [2, 219], "time": [2, 68, 69, 70, 71, 72, 95, 96, 97, 98, 99, 100, 101, 105, 107, 109, 110, 112, 113, 125, 126, 127, 128, 130, 131, 132, 133, 136, 182, 186, 207, 219, 221, 223, 225, 226, 228, 230, 237, 239], "onli": [2, 19, 96, 100, 101, 107, 108, 109, 182, 186, 197, 198, 200, 204, 219, 222, 223, 225, 226, 230, 231, 233, 236, 237, 239], "complet": [2, 222, 223, 225, 228, 231, 233, 237], "ring": [2, 3], "dure": [2, 3, 39, 40, 125, 186, 219, 222, 225, 231, 236, 239], "relev": 2, "perform": [2, 31, 49, 105, 107, 108, 109, 111, 112, 113, 186, 198, 219, 223, 225, 226, 230, 231, 237, 239], "ignor": [2, 19, 47, 96, 219, 223, 230], "fall": [2, 68, 69, 70, 71, 72], "back": [2, 68, 69, 70, 71, 72, 198, 223, 226, 233, 234], "sire": [2, 18, 123, 124, 125, 180, 181, 182, 183, 184, 185, 186, 198, 212, 214, 215, 219, 222, 225, 233, 239], "consid": [2, 68, 69, 70, 71, 72, 99, 220, 239], "reduc": [2, 39, 182, 183, 186, 196], "you": [2, 19, 39, 100, 125, 186, 198, 200, 204, 208, 214, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 235, 237, 238, 239], "excess": 2, "amount": [2, 100, 182, 186], "specifi": [2, 5, 8, 14, 19, 38, 46, 68, 69, 70, 71, 72, 94, 95, 96, 97, 98, 101, 116, 126, 127, 128, 130, 131, 132, 133, 134, 136, 182, 186, 208, 209, 210, 213, 223, 230, 234, 236, 237, 239], "rank": 2, "correspond": [2, 49, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 237, 239], "displac": [2, 4, 125, 195, 237], "0": [2, 19, 28, 29, 31, 41, 46, 47, 48, 49, 50, 55, 62, 65, 98, 105, 107, 108, 109, 116, 117, 118, 119, 120, 121, 128, 132, 134, 182, 186, 198, 210, 213, 214, 223, 225, 226, 230, 234, 236, 237, 239], "10": [2, 22, 24, 29, 30, 32, 36, 95, 96, 97, 98, 101, 105, 107, 108, 109, 111, 112, 186, 195, 196, 219, 232, 233, 239], "3": [2, 24, 25, 28, 29, 65, 126, 128, 132, 134, 136, 165, 166, 167, 168, 196, 213, 214, 217, 222, 223, 226, 234, 236, 237, 239], "7": [2, 223, 225, 234, 236, 237, 239], "allow_ring_break": 3, "allow_ring_size_chang": 3, "creat": [3, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 63, 64, 95, 96, 97, 98, 99, 100, 101, 102, 114, 126, 127, 128, 130, 131, 132, 133, 134, 136, 169, 170, 171, 182, 185, 187, 195, 200, 203, 208, 209, 210, 212, 213, 214, 217, 219, 220, 222, 223, 224, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239], "singl": [3, 19, 47, 49, 99, 100, 180, 181, 182, 183, 184, 186, 198, 219, 230, 236, 239], "topologi": [3, 39, 41, 42, 43, 52, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 125, 182, 186, 236], "free": [3, 19, 20, 48, 65, 99, 100, 101, 105, 107, 108, 109, 111, 112, 182, 195, 200, 219, 220, 226, 228, 231, 232, 233, 238, 239], "energi": [3, 19, 20, 31, 48, 65, 95, 96, 97, 98, 99, 100, 101, 107, 108, 109, 110, 181, 182, 195, 200, 219, 226, 228, 230, 231, 232, 238, 239], "simul": [3, 19, 20, 21, 39, 45, 47, 48, 49, 50, 53, 54, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 109, 110, 112, 113, 114, 169, 170, 171, 173, 182, 186, 195, 196, 200, 203, 204, 205, 207, 215, 219, 222, 223, 226, 228, 230, 231, 232, 233, 236, 237, 239], "second": [3, 5, 39, 47, 52, 99, 134, 186, 222, 223, 225, 226], "rmsdalign": [3, 195, 237], "result": [3, 116, 117, 118, 119, 120, 121, 135, 181, 182, 183, 184, 185, 186, 191, 195, 220, 222, 223, 225, 226, 239], "open": [3, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 219, 220, 221, 225, 226, 228, 232, 233], "close": 3, "chang": [3, 182, 219, 223, 225, 226], "size": [3, 5, 100, 116, 117, 118, 119, 120, 121, 186, 214, 220], "try": [3, 42, 95, 96, 97, 98, 101, 125, 191, 198, 223, 225, 233], "even": 3, "molecular": [3, 19, 20, 31, 39, 40, 41, 42, 43, 44, 45, 49, 57, 62, 95, 96, 97, 98, 99, 101, 102, 103, 105, 107, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 125, 169, 170, 171, 172, 174, 177, 182, 183, 186, 196, 197, 198, 200, 202, 203, 204, 207, 209, 210, 213, 214, 215, 219, 222, 223, 226, 228, 230, 231, 232, 233, 234, 237, 239], "transform": 3, "unstabl": 3, "follow": [3, 105, 107, 108, 109, 111, 112, 126, 127, 128, 130, 131, 132, 133, 134, 136, 200, 204, 219, 220, 222, 223, 225, 230, 231, 232, 233, 235, 236, 238, 239], "which": [3, 5, 39, 42, 46, 47, 48, 49, 50, 68, 69, 70, 71, 72, 98, 100, 105, 107, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 125, 180, 181, 182, 183, 184, 186, 195, 200, 209, 219, 220, 222, 223, 225, 226, 230, 231, 233, 237, 238, 239], "rigid": 4, "bodi": [4, 220, 225], "translat": [4, 95, 180, 181, 182, 183, 184, 186, 195, 226, 230, 231], "rotat": [4, 39, 186, 219], "fit": [4, 195], "optim": [4, 49, 195, 200], "vector": [4, 7, 8, 9, 10, 11, 39, 116, 117, 118, 119, 120, 121, 129, 180, 181, 182, 183, 184, 186, 195, 196, 219], "oppos": [4, 195], "mere": [4, 195], "differ": [4, 19, 42, 186, 195, 196, 197, 198, 200, 209, 210, 219, 220, 223, 224, 225, 226, 231, 232, 234, 237], "centroid": [4, 195], "style": [5, 223, 224, 232], "orient": [5, 220, 222, 223], "horizont": 5, "pixel": 5, "900": 5, "visualis": [5, 53, 62, 207, 219, 228, 230, 237, 239], "draw": 5, "3d": 5, "depict": 5, "highlight": 5, "green": 5, "label": [5, 63, 64, 207, 223, 225, 233, 239], "other": [5, 105, 107, 135, 175, 186, 208, 219, 220, 225, 231, 233, 235, 237, 238, 239], "first": [5, 39, 47, 99, 125, 181, 186, 207, 213, 223, 225, 226, 233, 236, 237, 239], "see": [5, 68, 69, 70, 71, 72, 95, 96, 97, 98, 101, 200, 220, 222, 223, 225, 226, 228, 231, 233, 235, 237, 239], "3dmol": 5, "csb": 5, "pitt": 5, "edu": 5, "doc": [5, 223, 225], "glviewer": 5, "html": [5, 220, 223], "some": [5, 194, 195, 217, 223, 225, 226, 229, 231, 236, 238], "displai": [5, 19, 21, 31, 38, 62, 95, 96, 97, 98, 101, 237], "vertic": 5, "arrang": 5, "largest": [5, 52], "view": [5, 53, 185, 207], "dimens": [5, 116, 117, 118, 119, 120, 121, 126, 127, 128, 130, 131, 132, 133, 134, 136, 180, 181, 182, 183, 184, 186], "either": [5, 52, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 223, 225, 231, 235, 237], "py3dmol": [5, 219], "box_types_field": 6, "image_dist": [7, 8, 9, 10, 11], "length": [7, 8, 9, 10, 11, 47, 48, 49, 68, 69, 70, 71, 72, 96, 116, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 180, 181, 182, 183, 184, 186, 196, 213, 230, 234, 236, 237], "magnitud": [7, 8, 9, 10, 11, 135, 186, 196, 219], "angl": [7, 8, 9, 10, 11, 50, 95, 96, 97, 107, 108, 109, 116, 117, 118, 119, 120, 121, 127, 128, 130, 131, 132, 133, 134, 135, 136, 186, 196, 219, 234, 236, 237, 239], "yz": [7, 8, 9, 10, 11, 116, 117, 118, 119, 120, 121, 186], "xz": [7, 8, 9, 10, 11, 116, 117, 118, 119, 120, 121, 186], "xy": [7, 8, 9, 10, 11, 116, 117, 118, 119, 120, 121, 186], "box_typ": 8, "boxtyp": 8, "get": [8, 31, 46, 47, 48, 49, 50, 54, 55, 94, 95, 96, 97, 98, 99, 101, 107, 108, 109, 125, 180, 181, 182, 183, 184, 186, 206, 208, 209, 214, 219, 222, 223, 225, 228, 230, 231, 234, 237, 239], "hexagon": 9, "rhombic": [9, 10], "dodecahedron": [9, 10], "truncat": [11, 196, 234, 236], "octahedron": [11, 196], "smiles_str": 12, "add_hydrogen": 12, "generate_coordin": 12, "froma": 12, "format": [12, 13, 14, 15, 16, 17, 18, 37, 38, 40, 42, 43, 105, 107, 108, 109, 111, 112, 125, 169, 170, 171, 182, 186, 198, 219, 225, 228, 230, 234], "automat": [12, 45, 54, 57, 95, 96, 97, 98, 101, 203, 204, 207, 209, 219, 223, 225, 226, 230, 233, 237, 239], "hydrogen": [12, 74, 95, 97, 105, 107, 108, 109, 111, 112, 181, 182, 183, 184, 186, 219, 236, 237], "switch": [12, 219, 223], "addit": [12, 68, 69, 70, 71, 72, 94, 95, 96, 97, 98, 101, 182, 208, 219, 222, 223, 225, 230, 233], "system": [12, 14, 15, 16, 17, 18, 19, 31, 39, 40, 41, 42, 43, 45, 49, 52, 53, 57, 62, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 116, 117, 118, 119, 120, 121, 124, 125, 169, 170, 171, 180, 181, 182, 183, 184, 198, 200, 202, 203, 207, 209, 210, 213, 214, 219, 225, 226, 230, 233, 234, 235, 236, 239], "obj": [14, 15, 16, 17, 18], "input": [14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 62, 95, 96, 97, 98, 101, 186, 194, 200, 203, 206, 208, 209, 210, 213, 219, 223, 230, 231, 233, 235, 236, 237, 239], "converted_obj": [14, 15, 16, 17, 18], "openmm": [16, 17, 198, 219, 226, 228, 237], "protocol": [19, 31, 45, 57, 95, 96, 97, 98, 99, 101, 102, 169, 170, 171, 194, 200, 203, 209, 219, 222, 223, 228, 229, 230, 232, 234, 237, 239], "engin": [19, 31, 39, 45, 57, 102, 116, 117, 118, 119, 120, 121, 186, 196, 197, 200, 204, 209, 219, 226, 228, 230, 231, 234, 236, 237], "setup_onli": [19, 200], "ignore_warn": [19, 96], "show_error": [19, 96], "extra_opt": [19, 95, 96, 101, 169, 170, 171, 219, 231], "extra_lin": [19, 95, 96, 101, 169, 170, 171, 219, 231], "configur": [19, 45, 53, 57, 95, 96, 97, 98, 99, 101, 104, 105, 107, 109, 110, 112, 113, 169, 170, 171, 197, 200, 203, 204, 205, 207, 210, 219, 222, 228, 230, 231, 233, 237, 239], "__init__": [19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 46, 47, 48, 49, 50, 54, 55, 62, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 110, 111, 112, 113, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 222, 223], "constructor": [19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 46, 47, 48, 49, 50, 54, 55, 62, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 110, 111, 112, 113, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 219, 231, 239], "leg": [19, 100, 200, 219, 237], "assum": [19, 49, 52, 53, 181, 190, 191, 195, 200, 225, 238, 239], "alreadi": [19, 195, 225, 226, 233, 235], "been": [19, 47, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 181, 186, 188, 189, 200, 221, 222, 223, 225, 226, 230, 233, 235, 236, 237], "equilibr": [19, 96, 107, 200, 210, 219, 230, 237], "freeenergyminimis": [19, 200, 237], "freeenergyequilibr": [19, 200, 237], "freeenergyproduct": [19, 106, 237], "dynam": [19, 20, 39, 44, 45, 57, 99, 103, 113, 115, 116, 117, 118, 119, 120, 121, 186, 196, 197, 203, 204, 207, 209, 210, 215, 219, 228, 230, 231, 233, 234, 236, 237], "gromac": [19, 39, 42, 68, 69, 70, 71, 72, 116, 117, 118, 119, 120, 121, 182, 204, 219, 226, 228, 231, 233, 236, 237, 239], "somd": [19, 107, 108, 109, 200, 219, 226, 228, 237], "omit": [19, 105, 107, 237], "choos": [19, 45, 57, 203, 209, 221, 222, 223, 225, 237], "appropri": [19, 200, 203, 204, 209, 220, 223, 225, 231, 239], "setup": [19, 200, 219, 223, 228, 233, 236], "hierarchi": [19, 237], "extern": [19, 68, 69, 70, 71, 72, 97, 176, 200, 209, 219, 221, 222, 223, 225, 226, 231], "don": [19, 200, 219, 223, 225, 231, 233, 236], "t": [19, 46, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 105, 107, 108, 109, 111, 112, 182, 186, 197, 198, 200, 212, 219, 221, 222, 223, 225, 230, 231, 233, 235, 236, 237, 238, 239], "intend": [19, 100, 222, 223, 230], "also": [19, 68, 69, 70, 71, 72, 200, 204, 214, 221, 222, 223, 224, 225, 226, 230, 231, 234, 236, 237, 239], "warn": [19, 39, 40, 96], "binari": [19, 96, 123, 124, 180, 181, 182, 183, 184, 186, 204, 219, 223, 233], "specif": [19, 62, 94, 95, 96, 97, 98, 100, 101, 102, 198, 209, 214, 220, 222, 223, 225, 226, 231, 233, 234, 236, 237], "chosen": [19, 42, 45, 57, 99, 114, 116, 117, 118, 119, 120, 121, 230, 231], "show": [19, 31, 39, 40, 53, 96, 220, 222, 223, 230], "error": [19, 31, 63, 95, 96, 97, 98, 100, 101, 191, 207, 219, 223, 230, 233, 238], "messag": [19, 31, 58, 96, 223, 225], "extra": [19, 95, 96, 101, 169, 170, 171, 225], "overrid": [19, 95, 96, 101, 169, 170, 171, 209, 231], "line": [19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 95, 96, 97, 98, 101, 169, 170, 171, 201, 207, 222, 223, 228, 230, 231, 232], "put": [19, 95, 96, 101, 169, 170, 171], "end": [19, 41, 43, 62, 95, 96, 101, 169, 170, 171, 198, 200, 222, 223, 226, 236, 237, 239], "method": [19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 46, 47, 48, 49, 50, 54, 55, 62, 75, 76, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 110, 111, 112, 113, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 200, 209, 219, 222, 223, 230, 231, 239], "static": [19, 129], "analys": [19, 200, 204, 215, 228, 237, 239], "estim": [19, 48, 97, 99, 237, 239], "mbar": 19, "alchemlyb": [19, 219, 226], "exist": [19, 96, 113, 116, 117, 118, 119, 120, 121, 173, 200, 203, 214, 219, 222, 223, 225, 226, 230, 231, 236], "data": [19, 21, 40, 47, 63, 64, 173, 196, 200, 207, 214, 216, 222, 223, 228, 233, 236, 239], "analysi": [19, 21, 65, 173, 196, 219, 226], "ti": 19, "nativ": [19, 198, 219], "pmf": [19, 200], "potenti": [19, 46, 95, 96, 97, 98, 105, 107, 108, 109, 111, 112, 200, 219], "lambda": [19, 41, 62, 100, 107, 108, 109, 180, 181, 182, 183, 184, 186, 200, 237], "standard": [19, 219, 228], "overlap": [19, 65, 200, 219], "np": 19, "matrix": [19, 65, 200, 219], "give": [19, 224], "window": [19, 193, 200, 219, 233, 235, 237], "otherwis": [19, 65, 191, 220], "checkoverlap": 19, "threshold": 19, "03": [19, 65], "check": [19, 53, 99, 186, 214, 219, 225, 231, 234, 235, 236, 239], "fep": [19, 219], "numpi": [19, 65, 223], "off": [19, 219], "diagon": 19, "is_okai": 19, "boolean": [19, 95, 96, 97, 98, 101], "okai": [19, 239], "less": [19, 68, 69, 70, 71, 72], "num_low": 19, "pmf_ref": 19, "state": [19, 41, 43, 62, 100, 200, 228, 237], "free_energi": [19, 99], "associ": [19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 186, 214], "getdata": 19, "file_link": [19, 21, 95, 96, 97, 98, 101], "zip": [19, 21, 95, 96, 97, 98, 101, 230], "requir": [19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 74, 94, 99, 125, 186, 200, 203, 204, 208, 210, 213, 214, 217, 219, 221, 222, 223, 225, 230, 231, 233, 236], "post": [19, 21, 220, 224, 235], "filelink": [19, 21, 31, 95, 96, 97, 98, 101], "jupyt": [19, 21, 31, 95, 96, 97, 98, 101, 201, 207, 222, 223, 228, 230, 232, 233, 237, 239], "archiv": [19, 21, 95, 96, 97, 98, 101], "ipython": [19, 21, 31, 95, 96, 97, 98, 101, 222, 223, 233, 237, 239], "kill": [19, 95, 96, 97, 98, 100, 101], "killal": [19, 100], "all": [19, 31, 39, 42, 49, 62, 95, 96, 97, 98, 99, 100, 101, 105, 107, 108, 109, 111, 112, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 181, 182, 183, 184, 185, 186, 200, 203, 219, 220, 222, 223, 224, 225, 230, 231, 233, 234, 235, 237, 239], "serial": [19, 100], "individu": [19, 100, 220, 223, 225, 226, 236, 237], "wait": [19, 95, 96, 97, 98, 100, 101, 200, 209, 219, 234, 239], "finish": [19, 95, 96, 97, 98, 100, 101, 208, 209, 219, 223, 225, 230, 233, 234, 239], "workdir": [19, 95, 96, 97, 98, 100, 101, 219], "help": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 48, 49, 50, 100, 206, 219, 222, 224, 225, 226, 230, 232, 233, 239], "unit": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 46, 95, 96, 97, 98, 99, 105, 107, 108, 109, 111, 112, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 194, 196, 210, 213, 214, 219, 223, 225, 230, 234, 235, 236, 237, 239], "angstrom": [22, 30, 36, 105, 107, 108, 109, 111, 112, 127, 131, 136, 139, 165, 180, 181, 182, 183, 184, 186, 213, 217, 230, 234], "my_area": 22, "angstrom2": 22, "same": [22, 24, 25, 30, 32, 34, 35, 36, 39, 49, 100, 101, 126, 127, 128, 130, 131, 132, 133, 134, 136, 180, 181, 182, 183, 184, 186, 200, 208, 210, 213, 219, 225, 230, 231, 237, 239], "explicitli": [22, 24, 25, 30, 32, 34, 35, 36, 222, 223], "50": [22, 25, 30, 36, 213], "nanomet": [22, 30, 36, 127, 131, 136, 141, 167, 196, 213, 217, 236, 237], "taken": [22, 24, 25, 30, 32, 34, 35, 36, 100, 233], "100": [22, 34, 46, 55, 105, 112, 136, 217], "nanometer2": 22, "getallowedvalu": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36], "getargtyp": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36], "command": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 68, 69, 70, 71, 72, 95, 96, 97, 98, 101, 190, 191, 193, 201, 208, 219, 222, 223, 225, 228, 230, 231, 232, 233], "arg_typ": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36], "getdefault": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36], "gethelp": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36], "document": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 196, 219, 222, 224, 225, 226, 230, 231, 233, 235, 237, 239], "getmax": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36], "getmin": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36], "getunit": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36], "getvalu": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 46, 55], "ismulti": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36], "ha": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 48, 74, 95, 96, 97, 98, 101, 105, 107, 169, 170, 171, 181, 182, 186, 188, 189, 200, 208, 219, 221, 222, 223, 225, 233, 237, 239], "multipl": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 100, 198, 219, 225, 237], "is_multi": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36], "isopt": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36], "is_opt": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36], "setvalu": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 46, 55], "valid": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 126, 127, 128, 130, 131, 132, 133, 134, 136, 221, 223, 226, 230], "flag": [23, 95, 96, 97, 98, 101, 109, 112, 214, 223], "electron": [24, 128, 144, 220], "my_charg": 24, "electron_charg": [24, 128], "coulomb": [24, 96, 128], "kcal": [25, 105, 107, 108, 109, 111, 112, 130, 145], "per": [25, 116, 117, 118, 119, 120, 121, 130, 145, 146, 186, 213, 225, 226], "my_energi": 25, "kcal_per_mol": [25, 105, 107, 108, 109, 111, 112, 130], "kj": [25, 110, 130, 146], "kj_per_mol": [25, 130], "my_fil": [26, 27], "point": [28, 48, 52, 125, 186, 224, 226, 230, 233], "my_float": 28, "13": [28, 214, 221, 239], "27": [28, 128], "given": [28, 29, 48, 183, 185, 186, 225, 230], "12": [28, 131, 200, 217, 219, 221, 239], "8": [28, 128, 214, 219, 233, 236, 239], "57": [28, 214], "18": [28, 239], "my_int": 29, "4": [29, 48, 95, 96, 109, 130, 182, 186, 220, 222, 223, 226, 232, 236, 237, 239], "my_length": 30, "descript": [31, 38, 225], "interfac": [31, 99, 194, 230], "collect": [31, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 95, 96, 97, 98, 99, 101, 110, 113, 194, 199, 205, 216, 218, 219, 222, 223, 228, 231, 239], "intent": 31, "workflow": [31, 100, 201, 208, 210, 213, 219, 222, 224, 225, 228, 229, 232], "compon": [31, 39, 47, 48, 49, 50, 99, 129, 135, 182, 186, 201, 222, 223, 228, 230, 232, 236], "track": [31, 224], "report": [31, 105, 107, 109, 110, 112, 113, 169, 170, 171, 182, 220], "onc": [31, 204, 225, 233, 236], "written": [31, 43, 219, 230, 231], "plug": 31, "knime": 31, "minimis": [31, 108, 200, 203, 206, 209, 210, 219, 222, 223, 230, 233, 234, 237], "addauthor": [31, 230], "lester": [31, 214, 230, 232, 234], "hedg": [31, 230, 232], "email": [31, 230], "openbiosim": [31, 214, 220, 224, 225, 230, 233, 234], "affili": [31, 230], "setlic": 31, "gplv3": [31, 224, 230], "addinput": [31, 230], "fileset": [31, 230], "step": [31, 95, 96, 97, 98, 105, 107, 108, 109, 110, 111, 112, 113, 169, 170, 171, 182, 186, 206, 209, 210, 219, 225, 230, 231, 234, 236, 237], "100000": 31, "10000": [31, 108, 111, 230], "addoutput": [31, 230], "showcontrol": [31, 230], "io": [31, 194, 198, 203, 208, 209, 212, 213, 214, 219, 230, 234, 236, 239], "readmolecul": [31, 42, 198, 203, 208, 209, 212, 213, 214, 219, 230, 234, 236, 239], "getinput": [31, 95, 96, 97, 98, 101, 230], "md": [31, 194, 219, 228, 230, 234], "setoutput": [31, 230], "savemolecul": [31, 230, 234], "getsystem": [31, 95, 96, 97, 98, 101, 209, 219, 230, 234], "block": [31, 95, 96, 97, 98, 101, 208, 230, 234], "fileformat": [31, 38, 42, 186, 230, 234], "author": [31, 230, 232], "": [31, 42, 46, 62, 68, 69, 70, 71, 72, 180, 181, 182, 183, 184, 186, 214, 220, 224, 225, 231, 232, 233, 236, 237, 239], "address": [31, 220], "adderror": 31, "getauthor": 31, "getlicens": 31, "licens": [31, 224, 230], "setlicens": [31, 230], "widget": 31, "gui": [31, 62, 230], "enter": 31, "control": [31, 100, 105, 107, 108, 109, 111, 112, 219], "panel": 31, "ipywidget": [31, 219, 230], "form": [31, 196], "file_prefix": 31, "satisfi": 31, "prefix": [31, 222, 223, 230], "interatv": 31, "zipfil": 31, "els": [31, 191, 233, 235], "yaml": [31, 230], "lib": [31, 204], "atmospher": [32, 132, 152], "my_pressur": 32, "atm": [32, 109, 110, 112, 113, 128, 132], "atomospher": [32, 132], "bar": [32, 65, 132, 207], "my_str": 33, "dog": 33, "cat": 33, "fish": 33, "300": [34, 105, 107, 109, 110, 112, 113, 210, 239], "kelvin": [34, 133, 210], "my_temperatur": 34, "celsiu": [34, 133], "35": [35, 234, 239], "minut": [35, 95, 96, 97, 98, 101, 134, 233], "my_tim": 35, "hour": [35, 134], "cube": [36, 136, 165, 166, 167, 168], "my_volum": 36, "angstrom3": 36, "nanometer3": 36, "inform": [38, 113, 182, 186, 208, 219, 220, 222, 223, 228, 234, 237, 239], "info": 38, "regard": [38, 214, 220, 223], "pdb": [38, 40, 49, 62, 208, 219, 234, 236], "print": [38, 42, 58, 95, 96, 97, 98, 101, 126, 127, 128, 130, 131, 132, 133, 134, 136, 206, 208, 209, 210, 213, 222, 223, 233, 236, 237, 239], "make_whol": [39, 219], "rotate_box": 39, "reduce_box": 39, "show_warn": [39, 40], "download_dir": 39, "read": [39, 40, 41, 125, 186, 202, 215, 219, 228, 233], "url": [39, 219, 232, 233, 234, 239], "download": [39, 219, 230, 233], "necessari": [39, 208, 220, 225, 231], "extract": [39, 182, 213, 215, 219, 236, 239], "make": [39, 68, 69, 70, 71, 72, 182, 186, 204, 219, 220, 222, 223, 225, 226, 229, 230, 231, 233, 239], "whole": [39, 186, 237], "unwrap": [39, 186], "split": [39, 186, 193], "across": [39, 186, 196, 210, 226, 231], "period": [39, 47, 49, 50, 186, 213, 219, 225, 226], "boundari": [39, 47, 49, 50, 97, 186], "box": [39, 116, 117, 118, 119, 120, 121, 169, 170, 171, 180, 181, 182, 183, 184, 186, 194, 213, 219, 228, 234, 236, 237], "so": [39, 40, 105, 107, 108, 109, 111, 112, 126, 127, 128, 130, 131, 132, 133, 134, 136, 186, 200, 204, 219, 222, 223, 225, 226, 227, 230, 231, 233, 235, 236, 237, 239], "align": [39, 49, 116, 117, 118, 119, 120, 121, 172, 180, 181, 182, 183, 184, 186, 194, 200, 219, 220, 237], "x": [39, 46, 47, 55, 63, 64, 116, 129, 135, 186, 207, 211, 223, 233, 236, 239], "axi": [39, 48, 63, 64, 180, 181, 182, 183, 184, 186, 207, 239], "li": [39, 186, 239], "y": [39, 47, 63, 64, 116, 129, 135, 186, 207, 223, 239], "plane": [39, 186], "z": [39, 47, 64, 116, 129, 135, 186], "certain": [39, 186, 219], "effici": [39, 186], "veloc": [39, 125, 186, 219, 234], "etc": [39, 186, 223, 225, 230, 236], "accordingli": [39, 186], "rais": [39, 40, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 186, 188, 190, 221, 223, 225, 226, 230, 231, 236], "temporari": [39, 187, 209, 220, 233], "load": [39, 42, 68, 69, 70, 71, 72, 191, 198, 203, 207, 208, 209, 213, 214, 219, 230, 234, 236, 239], "amber": [39, 40, 42, 43, 66, 67, 68, 69, 70, 71, 72, 170, 182, 206, 208, 209, 213, 219, 226, 228, 230, 231, 233, 234, 237], "ala": [39, 42, 182, 183, 186, 198, 203, 206, 209, 213, 214, 230, 234, 239], "rst7": [39, 43, 234, 237], "prm7": [39, 43, 234, 237], "kei": [39, 95, 96, 97, 98, 101], "dir": [39, 61], "custom": [39, 68, 69, 70, 71, 72, 199, 206, 216, 219, 230, 231], "gro87": [39, 42, 234], "grotop": [39, 42, 234], "gromacs_path": 39, "id": [40, 222], "pdb4amber": [40, 219], "protein": [40, 52, 53, 67, 105, 107, 108, 109, 111, 112, 200, 219, 236], "bank": [40, 236], "pdbp": 40, "rscb": 40, "websit": [40, 219, 223, 225, 235], "reformat": 40, "handl": [40, 62, 96, 98, 100, 101, 203, 219, 224, 227, 230, 231], "suit": [40, 219, 223], "tool": [40, 196, 198, 200, 202, 204, 205, 206, 207, 208, 213, 214, 215, 226, 228, 237, 239], "deoxi": 40, "human": 40, "haemoglobin": 40, "1a3n": 40, "disk": [40, 233], "re": [40, 200, 219, 223, 230, 236], "compat": [40, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 182, 208, 214, 222, 224, 225, 229, 232, 233, 236], "ambertool": [40, 219, 221, 228, 233], "top0": 41, "coords0": 41, "top1": 41, "coords1": 41, "filebas": [42, 43, 124, 180, 181, 182, 183, 184, 186], "match_wat": [42, 116, 117, 118, 119, 120, 121, 219, 236], "save": [42, 43, 62, 105, 107, 109, 110, 112, 113, 180, 181, 182, 183, 184, 186, 200, 208, 214, 230], "updat": [42, 116, 117, 118, 119, 120, 121, 182, 186, 204, 219, 221, 222, 223, 225, 231, 236], "water": [42, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 105, 107, 108, 109, 111, 112, 116, 117, 118, 119, 120, 121, 122, 169, 170, 171, 182, 186, 208, 213, 219, 228, 230, 232, 234, 237, 238, 239], "expect": [42, 116, 117, 118, 119, 120, 121, 219, 220, 223, 239], "convent": [42, 116, 117, 118, 119, 120, 121, 182, 222, 223, 236], "being": [42, 190, 191, 212, 219, 226, 231, 239], "wa": [42, 99, 219, 225, 230, 238, 239], "were": [42, 186, 219, 225, 226, 231, 237], "expand": [42, 198, 203, 209, 213, 214, 234, 236], "tutorialurl": [42, 198, 203, 209, 213, 214, 234, 236, 239], "crd": [42, 198, 203, 206, 209, 213, 214, 230, 234, 239], "bz2": [42, 198, 203, 209, 213, 214], "test": [42, 219, 221, 224, 225, 226, 233, 235, 238], "except": [42, 49, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 126, 127, 128, 130, 131, 132, 133, 134, 136, 172, 173, 174, 175, 176, 177, 178, 179, 186, 199, 219, 236], "could": [42, 220, 223, 225, 230, 235], "convert": [42, 95, 96, 97, 98, 101, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 180, 181, 182, 183, 184, 186, 194, 219, 230, 239], "un": [42, 219], "wai": [42, 100, 190, 198, 200, 211, 217, 223, 224, 226, 230, 231, 232, 233, 237], "filebase0": 43, "filebase1": 43, "auto": [45, 57, 95, 96, 97, 98, 101, 125, 203, 222, 223], "gpu_support": [45, 57, 239], "auto_start": [45, 57, 95, 96, 97, 98, 101], "found": [45, 57, 186, 204, 219, 223, 230, 239], "gpu": [45, 57, 98, 219, 237], "start": [45, 57, 95, 96, 97, 98, 100, 101, 105, 107, 198, 209, 223, 225, 228, 233, 237, 238], "random": [45, 57, 95, 96, 97, 98, 101, 236], "neeed": [45, 57, 102], "force_const": [46, 48, 55, 105, 107, 108, 109, 111, 112], "expon": [46, 48], "epsilon": [46, 48], "variabl": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 98, 99, 110, 113, 205, 208, 219, 222, 223, 228, 231, 239], "bia": [46, 47, 48, 49, 50, 55, 110, 186, 239], "express": [46, 55, 181, 220], "k": [46, 55, 105, 107, 109, 110, 112, 113, 133, 156], "dimensionless": [46, 54, 55], "constant": [46, 55, 105, 107, 108, 109, 111, 112, 113, 226], "aren": [46, 105, 107, 108, 109, 111, 112, 212, 221, 222, 237], "later": [46, 219, 224], "appli": [46, 113, 209, 220, 225], "rescal": 46, "factor": [46, 48, 110, 182, 186, 239], "getepsilon": 46, "getexpon": 46, "getforceconst": [46, 55, 105, 107, 108, 109, 111, 112], "setepsilon": 46, "setexpon": 46, "setforceconst": [46, 55, 105, 107, 108, 109, 111, 112], "atom0": [47, 181], "atom1": [47, 181], "hill_width": [47, 48, 49, 50, 110], "nm": [47, 48, 49, 127, 136, 141, 150, 167], "weights0": 47, "weights1": 47, "is_com0": 47, "is_com1": 47, "lower_bound": [47, 48, 49, 50], "upper_bound": [47, 48, 49, 50], "grid": [47, 48, 49, 50, 239], "pbc": [47, 49, 50], "group": [47, 186, 225, 236], "measur": [47, 49, 50], "width": [47, 48, 49, 50, 54, 239], "gaussian": [47, 48, 49, 50, 110, 239], "hill": [47, 48, 49, 50, 54, 110, 239], "sampl": [47, 48, 49, 50, 239], "weight": 47, "center": [47, 48, 236], "mass": [47, 48, 95, 126, 127, 128, 130, 131, 132, 133, 134, 136, 182, 186], "via": [47, 185, 219, 220, 222, 224, 225, 226, 231, 233, 234, 236, 239], "bound": [47, 48, 49, 50, 55, 180, 181, 182, 183, 184, 186, 200, 209, 215, 239], "lower": [47, 48, 49, 50, 239], "upper": [47, 48, 49, 50, 239], "speed": [47, 48, 49, 50, 239], "up": [47, 48, 49, 50, 198, 219, 222, 223, 226, 233, 236, 237, 239], "long": [47, 48, 49, 50, 217, 223, 237], "kernel": [47, 48, 49, 50, 204], "becom": [47, 48, 49, 50, 225], "prohibit": [47, 48, 49, 50], "full": [47, 95, 96, 97, 98, 101, 107, 108, 109, 198, 222, 223, 233], "euclidean": 47, "condit": [47, 49, 50], "getatom0": 47, "getatom1": 47, "getcom0": 47, "getcom1": 47, "getcompon": 47, "unset": 47, "getgrid": [47, 48, 49, 50], "gethillwidth": [47, 48, 49, 50], "getlowerbound": [47, 48, 49, 50], "getperiodicboundari": [47, 49, 50], "account": [47, 48, 49, 50, 220, 233], "getupperbound": [47, 48, 49, 50], "getweights0": 47, "getweights1": 47, "ncompon": [47, 48, 49, 50], "setatom0": 47, "setatom1": 47, "setcom0": 47, "is_com": 47, "call": [47, 48, 49, 50, 110, 180, 181, 183, 184, 186, 191, 219, 225, 230, 233, 237, 239], "clear": [47, 48, 49, 50, 62, 95, 96, 97, 98, 101, 110, 223, 230], "setcom1": 47, "setcompon": 47, "setgrid": [47, 48, 49, 50], "sethillwidth": [47, 48, 49, 50], "setlowerbound": [47, 48, 49, 50], "setperiodicboundari": [47, 49, 50], "periodic_boundari": [47, 49, 50], "setupperbound": [47, 48, 49, 50], "setweights0": 47, "setweights1": 47, "atoms0": [48, 52], "atoms1": [48, 52], "0250": 48, "0500": 48, "6000": [48, 237], "buffer": [48, 95, 96, 97, 98, 101], "1500": 48, "steep": 48, "inflect": [48, 52], "5000": [48, 234, 237], "2000": [48, 105, 107, 237], "0000e": [48, 186], "00": [48, 186], "num_bin": [48, 54], "400": 48, "9000": [48, 237], "origin": [48, 52, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 182, 186, 198, 223, 225, 230, 236], "wall": [48, 214], "project": [48, 220, 232, 239], "constrain": [48, 96], "orthogon": 48, "getatoms0": 48, "whose": 48, "getatoms1": 48, "getbuff": 48, "getcorrect": 48, "proj_min": 48, "proj_max": 48, "delta": [48, 237], "0100": 48, "correct": [48, 96, 219, 220], "term": [48, 55, 107, 108, 109, 219, 221, 236], "reduct": [48, 186, 219], "entropi": 48, "restraint": [48, 95, 96, 105, 107, 108, 109, 111, 112, 113, 186, 210, 219], "integr": [48, 95, 96, 97, 98, 99, 105, 107, 109, 110, 112, 113, 169, 170, 171, 182, 186, 219, 225, 239], "volum": [48, 95, 96, 97, 98, 232], "getext": 48, "extent": 48, "proj": 48, "getinflect": 48, "avalu": 48, "getsteep": 48, "getwidth": 48, "setatoms0": 48, "setatoms1": 48, "setbuff": 48, "setinflect": 48, "setsteep": 48, "setwidth": 48, "rmsd_indic": 49, "reference_index": 49, "alignment_typ": 49, "deviat": 49, "against": [49, 207, 219, 221, 223, 225, 226, 233], "residu": [49, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 180, 181, 182, 183, 185, 186, 198, 219, 236], "instead": [49, 98, 100, 188, 191, 208, 210, 212, 213, 222, 223, 225, 231], "we": [49, 52, 68, 69, 70, 71, 72, 96, 100, 195, 196, 198, 200, 204, 211, 215, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239], "closest": 49, "thrown": [49, 172, 173, 174, 175, 176, 177, 178, 179, 223], "mannier": 49, "simpl": [49, 63, 64, 222, 223, 225, 239], "getalignmenttyp": 49, "getinitialvalu": 49, "initi": [49, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 219, 226, 228], "getreferenceindex": 49, "getreferencepdb": 49, "setalignmenttyp": 49, "3500": 50, "radian": [50, 126, 239], "four": [50, 225, 226], "involv": [50, 186, 219, 239], "getatom": [50, 181, 182, 184, 186, 198, 236, 237, 239], "setatom": 50, "colvar": [51, 113, 239], "alpha_carbon_nam": 52, "ca": [52, 239], "funnel": [52, 53, 219], "solvat": [52, 53, 117, 118, 119, 120, 121, 200, 213, 219, 228, 233, 234, 236, 237, 239], "bind": [52, 200, 219, 226, 236], "site": [52, 236], "alhpa": 52, "carbon": [52, 186, 237], "collective_vari": [53, 99, 110, 113, 239], "shape": 53, "sane": 53, "prior": [53, 219, 237], "customis": [53, 229], "visulis": 53, "mimumum": 54, "bin": [54, 233], "getbin": 54, "getmaximum": 54, "getminimum": 54, "setbin": 54, "setmaximum": 54, "setminimum": 54, "slope": 55, "m": [55, 140, 149, 160, 166, 223, 225], "pure": [55, 213, 230], "harmon": 55, "linar": 55, "getslop": 55, "linear": 55, "setslop": 55, "metamd": 57, "arg": [60, 95, 96, 97, 98, 101, 126, 127, 128, 130, 131, 132, 133, 134, 136, 239], "librari": [61, 206, 224, 233], "is_lambda1": [62, 180, 181, 182, 183, 184, 186], "interact": [62, 207, 208, 222, 223, 228, 230, 232, 234, 237, 239], "By": [62, 96, 223, 234, 236, 237], "nview": 62, "num_view": 62, "reload": 62, "particular": [62, 211, 221, 223, 231], "reset": [62, 95, 96, 97, 98, 101], "savepdb": 62, "write": [62, 95, 96, 97, 98, 101, 200, 202, 209, 219, 222, 224, 225, 228, 229, 232, 233, 234, 239], "entir": [62, 95, 96, 97, 98, 101, 186, 219, 231], "xerr": 63, "yerr": 63, "xlabel": [63, 64, 207], "ylabel": [63, 64, 207], "logx": 63, "logi": 63, "matplotlib": [63, 64, 233], "logarithm": 63, "zlabel": 64, "dimension": 64, "contour": [64, 239], "continuous_cbar": 65, "color_bar_cutoff": 65, "2d": 65, "arrai": [65, 107, 108, 109], "continu": [65, 96, 109, 112, 208, 219, 223, 230, 235], "colour": 65, "discret": 65, "assign": [65, 181, 219], "element": [65, 180, 181, 182, 183, 184, 186, 230, 236], "cutoff": [65, 116, 117, 118, 119, 120, 121], "color": 65, "field": [66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 182, 186, 208, 219, 221, 226, 228, 231, 234, 237], "force_field": [66, 67, 73, 77], "toler": [68, 69, 70, 71, 72, 223], "max_dist": [68, 69, 70, 71, 72], "6": [68, 69, 70, 71, 72, 131, 214, 217, 222, 223, 237, 239], "water_model": [68, 69, 70, 71, 72, 208, 236], "pre_mol_command": [68, 69, 70, 71, 72], "post_mol_command": [68, 69, 70, 71, 72], "bond": [68, 69, 70, 71, 72, 95, 96, 97, 107, 108, 109, 182, 185, 186, 219, 237], "ensure_compat": [68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 236], "parameteris": [68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 177, 208, 219, 228, 231, 233, 234, 236, 237], "smile": [68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 180, 181, 182, 183, 184, 186, 208, 219], "disulphid": [68, 69, 70, 71, 72, 219], "sum": [68, 69, 70, 71, 72], "equilibrium": [68, 69, 70, 71, 72], "radii": [68, 69, 70, 71, 72], "apart": [68, 69, 70, 71, 72], "model": [68, 69, 70, 71, 72, 116, 122, 208, 213, 228, 230, 236, 237], "structur": [68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 200, 208, 219, 234, 236], "ion": [68, 69, 70, 71, 72, 105, 107, 108, 109, 111, 112, 116, 117, 118, 119, 120, 121, 208, 213, 219, 236], "solvent": [68, 69, 70, 71, 72, 194, 196, 200, 230, 234, 236, 237], "watermodel": [68, 69, 70, 71, 72, 213, 230], "lone": [68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "oxygen": [68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 181, 182, 183, 184, 186, 236], "crystal": [68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 219, 232, 238], "leap": [68, 69, 70, 71, 72, 208, 219], "script": [68, 69, 70, 71, 72, 98, 200, 219, 223, 230, 231], "sure": [68, 69, 70, 71, 72, 204, 219, 223, 225, 230, 233, 239], "longer": [68, 69, 70, 71, 72, 219, 231], "pdb2gmx": [68, 69, 70, 71, 72], "after": [68, 69, 70, 71, 72, 208, 219, 225, 231, 233, 236], "oper": [68, 69, 70, 71, 72, 219, 223, 233, 235], "ensur": [68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 186, 204, 219, 222, 223, 224, 225, 226, 230, 233, 234, 236], "isn": [68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 182, 197, 198, 219, 222, 223, 230, 231, 235, 237], "ad": [68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 207, 219, 223, 224, 225, 226, 230, 231, 233, 236], "preserv": [68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 125, 182, 219, 222, 225, 230, 236], "kept": [68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "formal": [74, 208, 219], "explicit": [74, 220], "formal_charg": [74, 208], "total": [74, 95, 96, 97, 98, 99, 183, 186], "net_charg": [75, 76, 208], "charge_method": [75, 76], "bcc": [75, 76], "net": [75, 76, 208], "resp": [75, 76], "cm2": [75, 76], "mul": [75, 76, 223], "esp": [75, 76], "ga": [75, 76], "forcefield": [94, 208, 234], "ex": [95, 96, 97, 98, 101], "addarg": [95, 96, 97, 98, 101], "append": [95, 96, 97, 98, 101, 222, 223], "ordereddict": [95, 96, 97, 98, 101], "addtoconfig": [95, 96, 97, 98, 101], "config": [95, 96, 97, 98, 99, 101, 104, 169, 170, 171, 219, 230, 239], "cleararg": [95, 96, 97, 98, 101], "deletearg": [95, 96, 97, 98, 101], "delet": [95, 96, 97, 98, 101], "getangleenergi": [95, 96, 97], "time_seri": [95, 96, 97, 98, 99, 101, 239], "seri": [95, 96, 97, 98, 99, 101, 207, 221, 225, 228], "until": [95, 96, 97, 98, 101, 208], "getargstr": [95, 96, 97, 98, 101], "arg_str": [95, 96, 97, 98, 101], "getargstringlist": [95, 96, 97, 98, 101], "arg_string_list": [95, 96, 97, 98, 101], "getarg": [95, 96, 97, 98, 101], "getbondenergi": [95, 96, 97], "getcentreofmasskineticenergi": 95, "kinet": [95, 96, 97, 98], "centr": 95, "getconfig": [95, 96, 97, 98, 101, 104], "getcurrentangleenergi": [95, 96, 97], "current": [95, 96, 97, 98, 99, 101, 107, 108, 109, 125, 182, 186, 198, 200, 215, 221, 223, 225, 226, 230, 231, 233], "getcurrentbondenergi": [95, 96, 97], "getcurrentcentreofmasskineticenergi": 95, "getcurrentdens": 95, "densiti": 95, "getcurrentdihedralenergi": [95, 96, 97], "dihedr": [95, 96, 97, 219, 237, 239], "proper": [95, 96, 97], "improp": [95, 96, 97, 219], "getcurrentelectrostaticenergi": [95, 97], "electrostat": [95, 97], "getcurrentelectrostaticenergy14": 95, "getcurrenthydrogenbondenergi": 95, "getcurrentkineticenergi": [95, 96, 97, 98], "getcurrentnonbondedenergy14": 95, "non": [95, 105, 107, 108, 109, 111, 112, 219, 230], "getcurrentpotentialenergi": [95, 96, 97, 98], "getcurrentpressur": [95, 96, 97], "pressur": [95, 96, 97, 105, 107, 109, 110, 112, 113], "getcurrentrecord": [95, 96, 97, 98], "stdout": [95, 96, 97, 98, 101, 182], "multidict": [95, 96, 98], "getcurrentrestraintenergi": [95, 96], "getcurrentstep": [95, 96, 97, 98], "getcurrentsystem": [95, 96, 97, 98, 101], "latest": [95, 96, 97, 98, 101, 207, 209, 219, 225, 226, 230, 233, 235], "getcurrenttemperatur": [95, 96, 97, 98], "temperatur": [95, 96, 97, 98, 99, 105, 107, 109, 110, 112, 113, 126, 127, 128, 130, 131, 132, 134, 136, 210, 219, 239], "getcurrenttim": [95, 96, 97, 98, 101], "nanosecond": [95, 96, 97, 98, 101, 132, 134, 239], "getcurrenttotalenergi": [95, 96, 97, 98], "getcurrentvanderwaalsenergi": [95, 97], "van": [95, 97], "der": [95, 97], "vaal": [95, 97], "getcurrentviri": 95, "virial": 95, "getcurrentvolum": [95, 96, 97, 98], "getdens": [95, 219], "getdihedralenergi": [95, 96, 97], "getelectrostaticenergi": [95, 97], "getelectrostaticenergy14": 95, "getfram": [95, 96, 97, 98, 101, 125], "trajectori": [95, 96, 97, 98, 101, 105, 107, 109, 110, 112, 113, 194, 209, 219, 228], "frame": [95, 96, 97, 98, 101, 105, 107, 109, 110, 112, 113, 125, 214, 215, 219], "gethydrogenbondenergi": 95, "getkineticenergi": [95, 96, 97, 98], "getnam": [95, 96, 97, 98, 100, 101], "getnonbondedenergy14": 95, "getoutput": [95, 96, 97, 98, 101], "getpackagenam": [95, 96, 97, 98, 101], "getpotentialenergi": [95, 96, 97, 98], "getpressur": [95, 96, 97, 105, 107, 109, 110, 112, 113], "getrecord": [95, 96, 97, 98], "getrestraintenergi": [95, 96], "getse": [95, 96, 97, 98, 101], "getstderr": [95, 96, 97, 98, 101], "stderr": [95, 96, 97, 98, 101], "stderror": [95, 96, 97, 98, 101], "getstdout": [95, 96, 97, 98, 101], "getstep": [95, 96, 97, 98, 108, 111, 210], "gettemperatur": [95, 96, 97, 98, 109, 110, 112, 113], "gettim": [95, 96, 97, 98, 99, 101, 239], "gettotalenergi": [95, 96, 97, 98], "gettrajectori": [95, 96, 97, 98, 101, 125, 209], "backend": [95, 96, 97, 98, 101, 125, 215, 219, 233], "To": [95, 96, 97, 98, 101, 196, 200, 204, 211, 222, 223, 225, 230, 231, 233, 236, 237, 239], "sequenc": [95, 96, 97, 98, 101, 125], "getvanderwaalsenergi": [95, 97], "getviri": 95, "getvolum": [95, 96, 97, 98], "inputfil": [95, 96, 97, 98, 101], "input_fil": [95, 96, 97, 98, 101], "insertarg": [95, 96, 97, 98, 101], "insert": [95, 96, 97, 98, 101], "iserror": [95, 96, 97, 98, 100, 101], "exit": [95, 96, 97, 98, 101], "is_error": [95, 96, 97, 98, 100, 101], "isqueu": [95, 96, 97, 98, 100, 101], "queu": [95, 96, 97, 98, 100, 101], "is_queu": [95, 96, 97, 98, 100, 101], "isrun": [95, 96, 97, 98, 100, 101, 239], "is_run": [95, 96, 97, 98, 100, 101], "resetarg": [95, 96, 97, 98, 101], "resetconfig": [95, 96, 97, 98, 101], "restart": [95, 96, 97, 98, 100, 101, 105, 107, 109, 110, 112, 113, 169, 170, 171, 219, 234, 239], "new": [95, 96, 97, 98, 101, 182, 219, 222, 223, 224, 225, 226, 230, 231, 235, 236], "proce": [95, 96, 97, 98, 101], "runtim": [95, 96, 97, 98, 100, 101, 105, 107, 109, 110, 112, 113, 214, 239], "setarg": [95, 96, 97, 98, 101], "For": [95, 96, 97, 98, 99, 101, 198, 200, 220, 222, 223, 225, 230, 231, 233, 236, 237, 239], "enabl": [95, 96, 97, 98, 101, 211, 223, 233], "setconfig": [95, 96, 97, 98, 101, 104, 231], "setnam": [95, 96, 97, 98, 100, 101], "setse": [95, 96, 97, 98, 101], "max_tim": [95, 96, 97, 98, 101], "writeconfig": [95, 96, 97, 98, 101], "checkpoint_fil": 96, "gmx": [96, 219, 236], "grompp": [96, 219], "elev": 96, "halt": 96, "program": [96, 194, 208, 222, 223, 237], "checkpoint": 96, "previou": [96, 109, 112, 113, 200, 225, 230], "getconservedenergi": 96, "conserv": [96, 97], "getconstraintrmsd": 96, "getcoulomb14": 96, "getcoulombreciproc": 96, "reciproc": 96, "space": [96, 186, 196, 219, 220], "getcoulombsr": 96, "short": [96, 97, 217, 223, 224, 225, 226], "getcurrentconservedenergi": 96, "getcurrentconstraintrmsd": 96, "getcurrentcoulomb14": 96, "getcurrentcoulombreciproc": 96, "getcurrentcoulombsr": 96, "getcurrentdispersioncorrect": 96, "dispers": 96, "getcurrentimproperenergi": [96, 97], "getcurrentlennardjones14": 96, "lennard": 96, "jone": 96, "getcurrentlennardjonessr": 96, "getcurrentpressuredc": 96, "dc": 96, "getcurrentproperenergi": [96, 97], "getdispersioncorrect": 96, "getimproperenergi": [96, 97], "getlennardjones14": 96, "getlennardjonessr": 96, "getpressuredc": 96, "getproperenergi": [96, 97], "eta": 97, "remain": 97, "getboundaryenergi": 97, "getcurrentboundaryenergi": 97, "getcurrentgpressur": 97, "incorpor": 97, "getcurrentgpressureaverag": 97, "averag": 97, "getcurrentmiscenergi": 97, "getcurrentpressureaverag": 97, "_process": [97, 222, 223], "_multidict": 97, "getcurrenttemperatureaverag": 97, "getcurrenttotal2energi": 97, "better": [97, 223, 233], "ke": 97, "getcurrenttotal3energi": 97, "smaller": [97, 113], "fluctuat": 97, "waal": 97, "getgpressur": 97, "getgpressureaverag": 97, "getmiscenergi": 97, "getpressureaverag": 97, "gettemperatureaverag": 97, "gettotal2energi": 97, "gettotal3energi": 97, "platform": [98, 101, 193, 219, 225], "cpu": [98, 101], "python": [98, 100, 219, 224, 225, 228, 230, 232, 233, 238], "interpret": 98, "cuda": [98, 101], "opencl": [98, 101], "cuda_visible_devic": 98, "environ": [98, 201, 219, 220, 221, 225, 228, 232, 235, 238, 239], "opencl_visible_devic": 98, "createconfig": [99, 169, 170, 171, 231], "metadynam": [99, 113, 194, 219, 228, 231, 232, 238], "steer": [99, 219], "auxiliary_fil": 99, "auxiliari": 99, "getcollectivevari": [99, 110, 113, 239], "cv": 99, "mixtur": 99, "multi": [99, 100, 219, 231], "would": [99, 100, 126, 127, 128, 130, 131, 132, 133, 134, 136, 225, 226, 230, 231, 233, 237, 239], "getfreeenergi": [99, 239], "stride": [99, 239], "kt": [99, 130, 239], "converg": 99, "out": [99, 182, 186, 211, 233, 234, 237, 239], "runner": [100, 219], "manag": [100, 219, 230], "background": [100, 203, 208, 209, 239], "unsuit": [100, 116, 117, 118, 119, 120, 121], "modul": [100, 188, 189, 190, 191, 219, 232], "concurr": [100, 233], "futur": [100, 225, 226, 230], "processpoolexecutor": 100, "redund": [100, 219], "fork": [100, 223, 225], "recommend": [100, 219, 233], "parallel": 100, "At": [100, 198, 200, 204, 209, 225, 230, 233], "present": [100, 182, 186, 198, 200, 204, 219, 230, 231, 236, 237], "alloc": 100, "resourc": [100, 200, 235], "As": [100, 116, 117, 118, 119, 120, 121, 198, 200, 230], "unless": [100, 225], "access": [100, 200, 217, 222, 223, 225, 226, 230, 233], "larg": [100, 116, 117, 118, 119, 120, 121], "natur": [100, 226], "meant": [100, 219], "facilit": [100, 230], "complex": [100, 200, 230, 231, 237], "desir": [100, 198, 223, 231, 236], "fine": [100, 105, 107, 108, 109, 111, 112], "grain": [100, 105, 107, 108, 109, 111, 112], "break": [100, 223, 226], "separ": [100, 196, 220, 226, 231, 237], "node": [100, 194, 201, 208, 210, 213, 219, 222, 223, 228, 229, 232], "independ": 100, "addprocess": 100, "idx_error": 100, "achiev": [100, 223, 231], "nerror": 100, "n_error": 100, "nprocess": 100, "n_process": 100, "nqueu": 100, "n_queu": 100, "nrun": 100, "n_run": 100, "idx_queu": 100, "removeprocess": 100, "restartfail": 100, "job": [100, 200], "run_tim": 100, "idx_run": 100, "startal": 100, "batch_siz": 100, "max_retri": 100, "next": [100, 223, 225, 226, 233, 236, 237, 239], "care": [100, 239], "doesn": [100, 223], "consum": 100, "too": [100, 204, 222], "mani": [100, 225, 227, 236, 239], "core": [100, 125, 225, 233], "how": [100, 223, 224, 225, 230, 232, 233, 237, 239], "batch": 100, "multiprocess": 100, "cpu_count": 100, "retri": 100, "fail": [100, 172, 173, 174, 177, 178, 191, 223, 233], "freeenergi": [101, 194, 219, 231, 237], "debug": [101, 219], "purpos": 101, "mont": 101, "carlo": 101, "getcurrentgradi": 101, "gradient": 101, "getgradi": 101, "store": [104, 105, 107, 108, 109, 110, 111, 112, 113, 180, 181, 182, 183, 184, 186, 239], "timestep": [105, 107, 109, 110, 112, 113], "f": [105, 107, 109, 110, 112, 113, 134, 155, 158, 234, 239], "temperature_start": [105, 107, 210], "temperature_end": [105, 107, 210], "thermostat_time_const": [105, 107, 109, 112, 113], "p": [105, 107, 109, 112, 113, 163, 233], "report_interv": [105, 107, 109, 110, 112, 113, 169, 170, 171], "restart_interv": [105, 107, 109, 110, 112, 113, 169, 170, 171], "500": 105, "\u00e5": [105, 107, 108, 109, 111, 112], "fix": [105, 107, 186, 219, 223, 224, 225, 226, 235], "nvt": [105, 107, 109, 110, 112, 113], "ensembl": [105, 107, 109, 110, 112, 113], "thermostat": [105, 107, 109, 112, 113], "coupl": [105, 107, 109, 112, 113], "frequenc": [105, 107, 109, 110, 112, 113, 182, 186, 225], "statist": [105, 107, 109, 110, 112, 113], "backbon": [105, 107, 108, 109, 111, 112, 186, 210, 219], "done": [105, 107, 108, 109, 111, 112, 225, 231], "templat": [105, 107, 108, 109, 111, 112], "unreli": [105, 107, 108, 109, 111, 112], "heavi": [105, 107, 108, 109, 111, 112, 182, 186], "part": [105, 107, 108, 109, 111, 112, 193, 225, 229, 230, 236, 237], "altern": [105, 107, 108, 109, 111, 112, 214, 223, 231, 233], "generalunit": [105, 107, 108, 109, 111, 112, 219], "getendtemperatur": [105, 107], "getreportinterv": [105, 107, 109, 110, 112, 113], "interv": [105, 107, 109, 110, 112, 113, 169, 170, 171], "getrestartinterv": [105, 107, 109, 110, 112, 113], "confiugr": [105, 107, 109, 110, 112, 113], "getrestraint": [105, 107, 108, 109, 111, 112, 113], "getruntim": [105, 107, 109, 110, 112, 113], "getstarttemperatur": [105, 107], "getthermostattimeconst": [105, 107, 109, 112, 113], "gettimestep": [105, 107, 109, 110, 112, 113], "isconstanttemp": [105, 107], "is_const_temp": [105, 107], "classmethod": [105, 107, 108, 109, 111, 112, 126, 127, 128, 130, 131, 132, 133, 134, 136], "setendtemperatur": [105, 107], "setpressur": [105, 107, 109, 110, 112, 113], "setreportinterv": [105, 107, 109, 110, 112, 113], "setrestartinterv": [105, 107, 109, 110, 112, 113], "setrestraint": [105, 107, 108, 109, 111, 112, 113], "setruntim": [105, 107, 109, 110, 112, 113], "setstarttemperatur": [105, 107], "setthermostattimeconst": [105, 107, 109, 112, 113], "settimestep": [105, 107, 109, 110, 112, 113], "alia": 106, "lam": [107, 108, 109], "lam_val": [107, 108, 109], "min_lam": [107, 108, 109], "max_lam": [107, 108, 109], "num_lam": [107, 108, 109, 200], "11": [107, 108, 109, 225, 237, 239], "200": [107, 109], "perturbation_typ": [107, 108, 109], "discharge_soft": [107, 108, 109], "discharg": [107, 108, 109], "soft": [107, 108, 109], "vanish_soft": [107, 108, 109], "vanish": [107, 108, 109], "lj": [107, 108, 109], "flip": [107, 108, 109], "hard": [107, 108, 109, 221, 226, 233], "well": [107, 108, 109, 110, 200, 223, 230, 231, 239], "grow_soft": [107, 108, 109], "grow": [107, 108, 109], "charge_soft": [107, 108, 109], "perturubation_typ": [107, 108, 109], "getlambda": [107, 108, 109], "getlambdaindex": [107, 108, 109], "teh": [107, 108, 109], "getlambdavalu": [107, 108, 109], "getperturbationtyp": [107, 108, 109], "setlambdavalu": [107, 108, 109], "setperturbationtyp": [107, 108, 109], "setstep": [108, 111], "product": [109, 135, 200, 219, 233, 237], "isrestart": [109, 112, 169, 170, 171], "is_restart": [109, 112, 169, 170, 171], "setrestart": [109, 112], "settemperatur": [109, 110, 112, 113], "hill_height": 110, "hill_frequ": 110, "bias_factor": 110, "collectivevari": [110, 113, 204, 239], "height": [110, 239], "deposit": 110, "temper": 110, "getbiasfactor": 110, "gethillfrequ": 110, "gethillheight": 110, "setbiasfactor": 110, "setcollectivevari": [110, 113], "sethillfrequ": 110, "sethillheight": 110, "schedul": [113, 237], "vers": 113, "colvar_fil": 113, "stage": [113, 219, 225, 231], "act": [113, 201, 220, 230], "larger": [113, 182, 186, 225], "side": [113, 237], "consist": [113, 186, 219, 222, 226], "getcolvarfil": 113, "getschedul": 113, "adjust": 113, "getvers": 113, "setcolvarfil": 113, "setschedul": 113, "setvers": 113, "90": [116, 117, 118, 119, 120, 121, 186, 219], "degre": [116, 117, 118, 119, 120, 121, 126, 186], "shell": [116, 117, 118, 119, 120, 121, 213], "ion_conc": [116, 117, 118, 119, 120, 121, 213], "is_neutr": [116, 117, 118, 119, 120, 121], "is_align": [116, 117, 118, 119, 120, 121], "thick": [116, 117, 118, 119, 120, 121], "around": [116, 117, 118, 119, 120, 121, 185, 212, 237], "solut": [116, 117, 118, 119, 120, 121, 237], "least": [116, 117, 118, 119, 120, 121, 213], "twice": [116, 117, 118, 119, 120, 121], "often": [116, 117, 118, 119, 120, 121, 223, 226, 231, 236], "small": [116, 117, 118, 119, 120, 121, 223, 231, 235], "concentr": [116, 117, 118, 119, 120, 121, 213], "litr": [116, 117, 118, 119, 120, 121, 213], "neutralis": [116, 117, 118, 119, 120, 121, 234, 236], "princip": [116, 117, 118, 119, 120, 121], "ax": [116, 117, 118, 119, 120, 121], "spc": [118, 213], "wrap": [123, 124, 180, 181, 182, 183, 184, 186, 214, 219, 222], "sire_object": [124, 180, 181, 182, 183, 184, 186], "manipul": [125, 219], "biomolecular": [125, 219, 228, 231, 232], "copi": [125, 180, 181, 182, 183, 184, 185, 186, 200, 222, 223, 226], "wish": [125, 208, 222, 223, 225, 231], "might": [125, 223, 225, 230, 231, 236, 239], "lost": [125, 223, 233], "mdtraj": [125, 215, 222, 223], "mdanalysi": [125, 215], "happi": [125, 223, 224, 225, 235], "stamp": 125, "univers": 125, "nframe": 125, "represent": [126, 127, 128, 130, 131, 132, 133, 134, 136, 180, 181, 182, 183, 184, 186, 198, 220, 226, 230], "repres": [126, 127, 128, 130, 131, 132, 133, 134, 136, 196, 198, 220, 237, 239], "14": [126, 217, 221, 239], "r": 126, "extremelei": [126, 127, 128, 130, 131, 132, 133, 134, 136], "flexibl": [126, 127, 128, 130, 131, 132, 133, 134, 136, 200, 219, 230], "314e": 126, "power": [126, 127, 128, 130, 131, 132, 133, 134, 136, 239], "quantiti": [126, 127, 128, 130, 131, 132, 133, 134, 136], "30": 127, "angstroms2": 127, "meters2": 127, "meter": [127, 131, 136, 140, 166], "nanometers2": 127, "picometers2": 127, "picomet": [127, 131, 136, 142, 168], "78e1": 128, "fromvector": 129, "unitless": 129, "tovector": 129, "78": 130, "1038": 130, "kilo": 130, "calori": 130, "joul": 130, "038e3": 130, "cal": 130, "148": 131, "48e2": 131, "centimet": 131, "millimet": 131, "38": [132, 214, 219], "31e1": 132, "298": 133, "98e2": 133, "fahrenheit": 133, "17": [134, 214, 239], "femtosecond": 134, "73e1": 134, "dai": 134, "millisecond": [134, 217], "picosecond": 134, "three": 135, "anoth": [135, 186, 230, 231, 233], "cross": [135, 193, 225, 226], "dot": 135, "scalar": 135, "normalis": 135, "pm": [136, 142, 151, 168], "angstroms3": 136, "cubic": [136, 237], "meters3": 136, "nanometers3": 136, "picometers3": 136, "c": [143, 154, 186, 214, 219, 222, 223, 225, 233, 237, 239], "min": 161, "version": [169, 170, 193, 204, 214, 219, 220, 221, 225, 226, 230, 233, 234, 235, 239], "is_pmemd": 169, "pmemd": [169, 219], "hasbox": [169, 170, 171], "has_box": [169, 170, 171], "haswat": [169, 170, 171], "has_wat": [169, 170, 171], "reportinterv": [169, 170, 171], "restartinterv": [169, 170, 171], "add_not": [172, 173, 174, 175, 176, 177, 178, 179], "with_traceback": [172, 173, 174, 175, 176, 177, 178, 179], "tb": [172, 173, 174, 175, 176, 177, 178, 179], "self": [172, 173, 174, 175, 176, 177, 178, 179, 222, 223], "__traceback__": [172, 173, 174, 175, 176, 177, 178, 179], "incompat": [175, 233], "softwar": [176, 203, 209, 219, 226, 232], "miss": [176, 208, 219, 236], "stream": [178, 180, 181, 182, 183, 184, 186, 194, 219], "parti": [179, 233], "peturb": [180, 181, 182, 184], "getaxisalignedboundingbox": [180, 181, 182, 183, 184, 186], "enclos": [180, 181, 182, 183, 184, 186], "box_min": [180, 181, 182, 183, 184, 186], "box_max": [180, 181, 182, 183, 184, 186], "moleculenumb": [180, 181, 184], "belong": [180, 181, 184, 239], "tomolecul": [180, 181, 184], "mm": 181, "natom": [181, 182, 184, 186, 236], "num_atom": [181, 182, 184, 186], "queri": [181, 182, 183, 184, 186, 230], "23": [181, 182, 183, 184, 186], "atomidx": [181, 182, 183, 184, 186, 223], "renumb": [182, 219], "getresidu": [182, 186, 198, 236], "isamberwat": 182, "is_amber_wat": 182, "isgromacswat": 182, "is_gromacs_wat": 182, "isperturb": 182, "is_perturb": 182, "iswat": 182, "is_wat": 182, "makecompatiblewith": 182, "overwrit": 182, "rename_atom": 182, "verbos": [182, 223], "while": [182, 208, 210, 211, 222, 223, 226, 230], "suppli": [182, 190, 191], "duplic": 182, "renam": [182, 219, 230], "statu": [182, 220, 224], "merg": [182, 183, 186, 195, 200, 211, 219, 223, 225, 226, 237], "nchain": [182, 186], "chain": [182, 185, 186, 198, 219, 230, 236], "num_chain": [182, 186], "nresidu": [182, 186], "num_residu": [182, 186], "uniqu": [182, 219, 236], "identif": 182, "mol_num": 182, "repartitionhydrogenmass": [182, 186], "use_coordin": [182, 186], "redistrubut": [182, 186], "without": [182, 186, 220, 230, 233, 238], "encount": [182, 186, 221], "instabl": [182, 186], "relat": [182, 186, 219, 225], "high": [182, 186, 231], "motion": [182, 186], "repart": [182, 186], "scale": [182, 186], "repartit": [182, 186], "ye": [182, 186, 225], "exclus": [182, 186], "minim": [182, 183, 186], "resnam": [182, 183, 186, 236, 239], "tosystem": [182, 183, 200, 236, 237, 239], "immut": 183, "moleculegroup": 183, "selectormol": 183, "molecu": 183, "getmolecul": [183, 186, 208, 234, 236, 237], "nmolecul": [183, 186], "num_molecul": [183, 186], "select_result": 185, "thin": [185, 212, 219], "wrapper": [185, 212, 219, 228, 230, 237], "selectresult": 185, "search_result": 185, "getresult": 185, "nresult": [185, 239], "num_result": 185, "segment": 185, "_mol": 186, "addmolecul": 186, "getaminoacid": 186, "amino": 186, "acid": [186, 219], "getbox": 186, "box_siz": 186, "getindex": [186, 239], "item": [186, 222, 223, 225, 237], "getnucleotid": 186, "nucleotid": 186, "getperturbablemolecul": 186, "empti": 186, "getrestraintatom": 186, "mol_index": 186, "is_absolut": 186, "allow_zero_match": 186, "rel": [186, 200, 219, 223, 226, 231, 237, 239], "need": [186, 196, 200, 204, 219, 222, 223, 225, 226, 230, 231, 233, 236, 237, 239], "determin": [186, 220, 222, 223], "basi": 186, "won": [186, 200, 223, 236, 237, 239], "getwatermolecul": [186, 236], "issam": [186, 219], "excluded_properti": 186, "skip_wat": 186, "exclud": [186, 219], "compar": [186, 219, 223, 225], "subset": 186, "skip": [186, 233], "is_sam": 186, "makewhol": 186, "naminoacid": 186, "num_aa": 186, "nnucleotid": 186, "num_nuc": 186, "nperturbablemolecul": 186, "num_perturb": 186, "nwatermolecul": 186, "num_wat": 186, "reduceboxvector": 186, "round": [186, 198], "lattic": [186, 196, 219], "bias": 186, "toward": [186, 220, 222], "left": 186, "tilt": 186, "wherea": [186, 237], "right": [186, 193, 220, 239], "direct": [186, 226], "avoid": [186, 219, 222, 223, 226, 233], "oscil": 186, "instanti": [186, 209, 212, 222, 223], "precis": [186, 219], "removemolecul": 186, "removewatermolecul": 186, "rotateboxvector": 186, "triclin": [186, 196, 219, 228], "about": [186, 220, 223, 234], "prevent": [186, 222, 223], "unecessari": 186, "text": [186, 225, 234], "limit": [186, 230, 231, 233, 235], "insensit": 186, "atomnam": [186, 239], "molidx": 186, "setbox": 186, "updatemolecul": 186, "replac": [186, 233], "util": [187, 218], "context": [187, 192, 198], "is_temp_dir": 187, "assert": [188, 219, 223], "inde": [188, 189, 222, 223], "modulenotfounderror": [188, 190], "stub": [188, 189, 190, 191], "thu": [189, 214], "install_command": [190, 191], "modulestub": 190, "instal": [190, 191, 204, 219, 221, 223, 230, 231, 232, 234, 235, 238, 239], "conda": [190, 191, 219, 221, 225, 235], "_modulestub": [190, 191], "catch": [191, 219], "correctli": [191, 219, 225, 230], "shlex": 193, "do": [193, 200, 208, 220, 222, 223, 224, 225, 226, 231, 233, 235, 236, 237, 239], "thing": [193, 208, 219, 223, 226, 237, 238], "linux": [193, 214, 225, 233, 235], "maco": [193, 219, 225, 233, 235], "applic": 194, "divid": 194, "demo": [194, 226, 230], "github": [194, 214, 219, 221, 223, 224, 225, 226, 227, 230, 233, 235], "repositori": [194, 214, 222, 225, 226, 230], "biosimspac": [194, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239], "gatewai": [194, 222, 223, 230], "sandpit": [194, 214, 219, 225, 226], "_config": [194, 219], "_except": [194, 231], "_sirewrapp": [194, 214, 219], "_util": 194, "accord": [195, 226, 233], "here": [195, 200, 204, 223, 225, 226, 229, 230, 231, 233, 236, 237, 238], "mol0": 195, "mol1": 195, "particularli": [196, 219], "approach": [196, 222, 223, 225, 233], "appendix": 196, "chapter": 196, "sens": 196, "sensibl": 196, "tsjerk": 196, "wassenaar": 196, "truncatedoctahedron": [196, 234, 236], "sub": [197, 200, 219, 223, 230, 237], "intern": [197, 212, 218, 219, 225], "expos": [197, 219, 222, 223, 231], "directli": [197, 200, 208, 212, 214, 215, 222, 223, 225, 231, 233, 239], "due": [198, 219, 225, 230], "trip": 198, "yet": [198, 200, 223, 225], "possibl": [198, 200, 207, 219, 222, 223, 226, 230, 231, 236, 237, 238, 239], "smallest": [198, 239], "alwai": [198, 219, 225, 226], "variou": [198, 226, 229, 231, 237], "sire_system": 198, "rdkit_mol": 198, "sire_mol": 198, "sire_r": 198, "rdmol": 198, "rdkit_r": 198, "sire_atom": 198, "bss_mol": 198, "alchem": [200, 219, 226, 237], "pleas": [200, 221, 222, 223, 224, 225, 226, 227, 232, 233, 235, 237, 238, 239], "typic": [200, 212, 225, 230, 231, 239], "decoupl": [200, 219], "hydrat": [200, 219, 228, 232, 238], "merged_sol": 200, "complex_sol": 200, "equlibr": 200, "protocol_bound": 200, "20": [200, 214, 221, 233, 236, 239], "protocol_fre": 200, "fep_bound": 200, "liga_ligb": 200, "fep_fre": 200, "sequenti": [200, 225, 226], "hpc": 200, "pmf_bound": 200, "overlap_bound": 200, "pmf_free": 200, "overlap_fre": 200, "free_nrg_bind": 200, "similarli": [200, 224], "vacuum": [200, 219, 237, 239], "fep_vacuum": 200, "pmf_vacuum": 200, "overlap_vacuum": 200, "free_nrg_solv": 200, "usual": 200, "prefer": [200, 225], "intens": 200, "overhead": 200, "remot": [200, 223, 233], "server": [200, 219, 223, 233], "indivu": 200, "curat": 200, "submiss": [200, 222], "just": [200, 223, 225, 237, 239], "No": [200, 219], "anyth": [200, 235], "It": [200, 201, 207, 221, 223, 225, 230, 231, 235, 237, 239], "detail": [200, 220, 222, 223, 225, 235], "bridg": [201, 230], "outsid": [201, 230], "world": [201, 230], "robust": [201, 222, 223, 232], "portabl": [201, 222, 223, 232], "varieti": 201, "most": [203, 209, 233], "driver": [203, 219], "host": [203, 209, 219], "hardwar": [203, 209, 232, 233], "plume": [204, 219, 231, 239], "visibl": [204, 233], "ld_library_path": 204, "export": [204, 219, 228, 230], "plumed_kernel": 204, "usr": 204, "local": [204, 223, 233], "libplumedkernel": 204, "patch": [204, 226, 231, 239], "instruct": [204, 225, 233, 238], "setnodedirectori": [206, 230], "xerror": 207, "yerror": 207, "real": [207, 230], "still": [207, 235, 236], "attach": 207, "gaff": [208, 219, 234, 237], "benzen": 208, "initialis": [208, 230], "slow": [208, 223], "now": [208, 219, 222, 223, 225, 233, 236, 237, 239], "immedi": 208, "intermedi": [208, 219, 226, 237], "readi": [208, 225, 226], "interoper": [208, 210, 211, 213, 219, 226, 228, 230, 231, 232], "incorrect": [208, 219], "formalcharg": 208, "c1": 208, "cc": [208, 237], "4v2y_a": 208, "ff14sb": [208, 234, 236], "tip3p": [208, 213, 234, 236, 237], "leap_command": 208, "peptid": 208, "addpath": 208, "phosphate_param": 208, "leaprc": 208, "phosaa10": 208, "deriv": 209, "noth": 209, "lifetim": 209, "combin": [210, 219, 225, 236], "createprotocol": 210, "heat": 210, "restrain": 210, "experiment": [211, 219], "alongsid": 211, "develop": [211, 219, 222, 224, 227, 232, 233], "build": [211, 219, 223, 225, 226, 230], "u": [211, 221, 222, 225, 235, 237, 239], "quickli": [211, 222, 223, 225, 226], "roll": 211, "featur": [211, 219, 224, 225, 226, 230, 232], "main": [211, 223, 225, 226], "code": [211, 219, 223, 224, 225, 226, 230, 232, 233, 234, 235, 237], "indirectli": [212, 231], "spce": 213, "system0": 214, "system1": 214, "s3": 214, "metadata": 214, "backward": [214, 222, 225], "know": [214, 221, 235], "issu": [214, 219, 220, 221, 224, 225, 226, 235], "occur": 214, "getmetadata": 214, "bss_object": 214, "_system": 214, "bss_version": 214, "2023": [214, 225, 226], "bss_revisionid": 214, "9d46295": 214, "sire_vers": 214, "dev": [214, 225, 226, 233], "sire_revisionid": 214, "90eef20": 214, "extens": [214, 234], "underli": [214, 222], "getsiremetadata": 214, "siresystem": 214, "creation": [214, 219], "date": 214, "jun": 214, "29": [214, 219], "09": 214, "21": [214, 219, 223, 239], "porridg": 214, "unix": 214, "releas": [214, 224, 232, 233, 235], "9": [214, 219, 233, 236, 239], "arch1": 214, "smp": 214, "preempt_dynam": 214, "wed": 214, "46": 214, "machin": 214, "x86_64": 214, "compil": 214, "gnu": 214, "wordsiz": 214, "64": [214, 219, 233], "bit": 214, "byteord": 214, "littl": 214, "endian": 214, "qt": 214, "15": [214, 236, 239], "std": 214, "dsire_has_cpp_17": 214, "dsire_has_cpp_14": 214, "dsire_has_cpp_1i": 214, "dsire_has_cpp_11": 214, "wno": 214, "attribut": 214, "pipe": 214, "dsire_always_inlin": 214, "inlin": 214, "strict": 214, "alias": 214, "dsire_visibility_avail": 214, "fvisibl": 214, "hidden": [214, 222, 223], "fopenmp": 214, "simd": 214, "mavx": 214, "dsire_use_avx": 214, "o3": 214, "ffast": 214, "math": 214, "fomit": 214, "pointer": 214, "rdynam": 214, "wl": 214, "undefin": 214, "lpthread": 214, "git": [214, 223, 225, 233], "com": [214, 225, 233], "devel": [214, 222, 223, 224, 225, 226], "pack": 214, "317": 214, "173": [214, 219], "kb": 214, "unpack": 214, "3872": 214, "countri": 214, "kingdom": 214, "languag": [214, 219, 220, 222, 223, 228, 229], "english": 214, "physic": [217, 220, 237], "conveni": 217, "hand": [217, 226], "wind": 217, "simplifi": [217, 219], "multipli": 217, "commun": [219, 220, 232, 235], "compani": 219, "foster": [219, 220], "academ": 219, "industri": [219, 225], "collabor": [219, 226], "our": [219, 221, 222, 223, 224, 225, 226, 228, 230, 233, 235, 236, 237, 239], "organis": 219, "detect": 219, "nucleic": 219, "fjclark": [219, 227], "189": 219, "abf": 219, "178": 219, "specialis": 219, "190": 219, "192": 219, "doubl": [219, 235], "count": 219, "197": 219, "__ne__": 219, "201": 219, "minor": 219, "api": [219, 222, 223, 232, 235, 237, 239], "203": 219, "bug": [219, 224, 225, 226, 235], "boresch": 219, "204": 219, "210": 219, "workaround": 219, "reconstruct": 219, "intrascal": 219, "readperturbablesystem": 219, "try_import": 219, "statement": [219, 223], "global": 219, "217": 219, "219": 219, "igb": 219, "annamherz": [219, 227], "220": 219, "mask": 219, "222": 219, "selectorbond": 219, "224": 219, "inject": 219, "226": 219, "152": 219, "154": 219, "unifi": 219, "155": 219, "157": 219, "share": [219, 233, 235], "160": 219, "164": 219, "169": 219, "170": 219, "manual": [219, 225], "rather": [219, 222, 223], "175": 219, "179": 219, "181": 219, "cartesian": 219, "125": 219, "sever": [219, 225, 226, 231, 233], "caught": 219, "tutori": [219, 224, 225, 226, 228, 233, 234, 235, 237, 239], "128": 219, "132": 219, "135": 219, "mb2055": 219, "138": 219, "totalstep": 219, "statedatareport": 219, "146": 219, "151": 219, "reinstat": 219, "36": 219, "py": [219, 222, 223, 225, 230, 233], "72": 219, "75": 219, "parm": 219, "amberprmtopfil": 219, "77": 219, "79": 219, "83": 219, "cach": 219, "uid": 219, "actual": [219, 239], "edit": [219, 220, 223, 225, 233], "89": 219, "preparefep": 219, "recent": [219, 221, 222, 223, 226, 233], "overflow": 219, "95": 219, "99": 219, "104": 219, "105": 219, "improv": [219, 222, 223, 224], "107": 219, "parser": [219, 230], "108": 219, "grammar": 219, "109": 219, "110": 219, "111": 219, "113": 219, "115": 219, "selector": 219, "section": [219, 230], "recip": [219, 225], "117": 219, "119": 219, "120": 219, "121": 219, "complianc": 219, "pytest": [219, 223, 224], "51": 219, "56": 219, "59": 219, "dat": 219, "ci": [219, 223, 225], "34": 219, "again": [219, 225], "mixin": 219, "inherit": [219, 231], "41": 219, "43": [219, 232], "invers": 219, "friction": 219, "coeffici": 219, "49": 219, "pypdb": 219, "charact": 219, "increas": [219, 239], "cut": 219, "reaction": 219, "downcast": 219, "19": [219, 239], "zero": 219, "strip": [219, 233], "watchdog": 219, "determinist": 219, "generatenetwork": 219, "wider": 219, "xiki": [219, 227], "tempula": [219, 227], "msuruzhon": 219, "throughout": [219, 222], "drop": [219, 233], "year": [219, 225, 226, 232], "q3": 219, "q4": 219, "co": [219, 237], "incid": [219, 220], "anticip": 219, "forg": [219, 221, 225, 233], "aim": [219, 222, 223, 225, 226], "refactor": 219, "introduc": 219, "pydocstringformatt": 219, "glob": [219, 230], "basic": 219, "adapt": [219, 220, 230], "deprec": 219, "autoformat": [219, 222], "codebas": 219, "black": [219, 222], "januari": [219, 226], "made": [219, 225, 226], "namd": [219, 228, 233], "implement": [219, 222, 223, 226, 231], "trjconv": 219, "kexul": [219, 227], "fast": [219, 233], "layout": 219, "gaff2": [219, 234], "lomap2": 219, "vendor": 219, "confus": 219, "failur": [219, 233], "gsl": 219, "singular": 219, "decomposit": 219, "routin": 219, "clean": [219, 222, 223, 233], "openforcefield": [219, 234], "dlukauski": [219, 227], "adelelip": 219, "jenkescheen": [219, 227], "affect": 219, "writer": 219, "numer": 219, "pickl": 219, "chryswood": [219, 227], "pipelin": 219, "thank": 219, "action": [219, 220, 223, 225], "compliant": [219, 222, 223], "upload": [219, 225], "anaconda": [219, 225, 226, 238], "cloud": 219, "logo": 219, "theme": 219, "ppxasjsm": [219, 227], "ptosco": [219, 227], "fileupload": 219, "elimin": 219, "mirror": 219, "wasn": 219, "thread": [219, 225], "domain": 219, "built": [219, 221, 222, 223, 225, 233, 237], "resili": 219, "downtim": 219, "xtc": 219, "typo": [219, 223, 224], "sphinx": [219, 223], "journal": [219, 232], "paper": [219, 232], "torsion": [219, 239], "infer": 219, "maxkuhn": 219, "dockerfil": 219, "thirdparti": 219, "azur": 219, "deploi": 219, "netcdf": 219, "yai": 219, "bundl": [219, 233], "sander": 219, "public": [219, 220], "welcom": [220, 222, 224], "contributor": [220, 224, 232], "maintain": [220, 225], "particip": 220, "harass": 220, "experi": [220, 233, 235], "everyon": [220, 225, 235], "regardless": 220, "ag": 220, "disabl": [220, 233], "ethnic": 220, "sex": 220, "characterist": 220, "gender": 220, "ident": [220, 225, 237], "level": [220, 231, 237], "educ": 220, "socio": 220, "econom": 220, "nation": 220, "person": [220, 225], "appear": [220, 225, 226], "race": 220, "religion": 220, "sexual": 220, "behavior": 220, "contribut": [220, 227], "inclus": 220, "Being": 220, "respect": [220, 222, 223, 235], "viewpoint": 220, "gracefulli": 220, "accept": [220, 224, 225, 226, 231], "construct": [220, 230, 231, 239], "critic": 220, "focus": 220, "what": [220, 223, 226, 234, 237], "empathi": 220, "member": [220, 222, 223, 231], "unaccept": 220, "imageri": 220, "unwelcom": 220, "attent": 220, "advanc": 220, "troll": 220, "insult": 220, "derogatori": 220, "comment": 220, "polit": 220, "attack": 220, "privat": [220, 222, 223, 231], "publish": [220, 232], "permiss": [220, 224, 233], "reason": [220, 223], "inappropri": 220, "profession": 220, "clarifi": 220, "fair": 220, "instanc": [220, 222, 223, 233], "reject": 220, "commit": [220, 225], "wiki": 220, "ban": 220, "temporarili": [220, 236], "perman": 220, "deem": 220, "threaten": 220, "offens": 220, "harm": 220, "offici": [220, 225, 226], "mail": 220, "social": 220, "media": 220, "appoint": 220, "onlin": 220, "offlin": 220, "event": [220, 225], "further": [220, 222, 223, 226, 237, 239], "abus": 220, "contact": 220, "team": [220, 225], "complaint": 220, "review": [220, 222, 225], "investig": 220, "circumst": 220, "oblig": 220, "confidenti": 220, "polici": 220, "who": [220, 222, 223, 226], "good": [220, 225], "faith": 220, "face": 220, "repercuss": 220, "leadership": 220, "coven": 220, "www": 220, "answer": 220, "question": 220, "faq": 220, "below": [221, 222, 223, 227], "let": [221, 233, 235, 236, 237, 239], "problem": [221, 225, 233, 235, 238], "page": [221, 224, 232, 233, 235], "becaus": [221, 225, 233, 236], "ambertools22": 221, "ambertools21": 221, "ambertools20": 221, "ambertools19": 221, "ambertools18": 221, "cmap": 221, "ff19sb": 221, "2021": 221, "2020": 221, "2019": [221, 232], "2018": 221, "realli": [222, 223, 235], "appreci": 222, "pull": [222, 223, 224, 225, 227], "branch": [222, 224, 225, 226], "keep": [222, 223, 224, 226], "ask": [222, 225, 226, 232, 236, 238], "offend": 222, "modifi": [222, 223, 225, 231], "meet": 222, "unnecessari": [222, 223], "hold": [222, 223], "veri": [222, 223], "framework": [222, 228, 232, 233], "design": [222, 223], "mimic": 222, "partli": 222, "choic": [222, 223, 230], "primarili": [222, 223], "novic": [222, 223], "unfamiliar": [222, 223], "want": [222, 223, 225, 226, 233, 235, 236, 237, 239], "easi": [222, 223], "henc": [222, 223, 226, 236], "shield": [222, 223], "unintend": [222, 223], "consequ": [222, 223], "With": [222, 223, 232], "mind": [222, 223, 224, 235], "camelcas": [222, 223], "snake_cas": [222, 223], "undergon": 222, "modernis": 222, "fulli": [222, 223, 225, 226, 230, 235], "pep8": 222, "indent": 222, "move": [222, 223, 226], "plan": [222, 226, 233], "submit": [222, 224, 225, 227], "diff": [222, 225], "hide": [222, 223], "select": [222, 223], "underscor": [222, 223], "insid": [222, 223, 237], "_mdtraj": [222, 223], "__all__": [222, 223], "safe": [222, 223], "extran": [222, 223], "hit": [222, 223], "tab": [222, 223], "abl": [222, 223, 225, 233, 239], "greatli": [222, 223, 225], "clariti": [222, 223], "cours": [222, 223], "getter": [222, 223], "retriev": [222, 223], "mutabl": [222, 223], "unintention": [222, 223], "setter": [222, 223], "myclass": [222, 223], "_list": [222, 223], "def": [222, 223], "getlist": [222, 223], "untouch": [222, 223], "exstens": 223, "mix": 223, "mode": [223, 230], "legaci": 223, "port": [223, 224, 226, 233], "checkout": [223, 225], "b": [223, 225], "activ": [223, 225, 233, 238], "pythonpath": 223, "home": [223, 230, 233, 234], "doe": [223, 230], "place": [223, 231, 235], "togeth": [223, 225, 230, 235, 236, 237], "test_fil": 223, "file_test": 223, "test_func": 223, "func_test": 223, "test_": 223, "simpli": [223, 230, 233, 237, 239], "test_namd": 223, "test_minimis": 223, "v": [223, 233], "invok": 223, "contextu": 223, "approx": 223, "1e": 223, "driven": 223, "decor": 223, "mark": 223, "Not": 223, "test_new_featur": 223, "unimpl": 223, "test_mul": 223, "manner": 223, "58": 223, "37": 223, "test_sub": 223, "known": 223, "suppos": 223, "had": 223, "indexerror": 223, "test_indexerror": 223, "test_slow_funct": 223, "mypkg": 223, "docstr": 223, "whenev": 223, "push": [223, 225], "pip": 223, "sphinx_issu": 223, "sphinx_rtd_them": 223, "Then": [223, 233], "browser": 223, "new_featur": 223, "test_featur": 223, "rememb": [223, 227, 235], "frequent": 223, "unnecessarili": 223, "trigger": [223, 225], "hook": 223, "blacklist": 223, "ciignor": 223, "analog": 223, "gitignor": 223, "untrack": 223, "cp": 223, "git_hook": 223, "msg": 223, "shouldn": 223, "repo": [223, 224], "qualiti": 224, "guid": [224, 233], "blog": 224, "propos": 224, "fund": 224, "donat": 224, "discuss": [224, 235], "idea": 224, "conduct": [224, 225, 232, 235], "under": 224, "mit": 224, "bsd": 224, "apach": 224, "employ": 224, "employe": 224, "forev": 224, "recognis": [224, 227], "major": [224, 226, 230], "roadmap": [224, 232], "timet": 224, "wishlist": 224, "target": 225, "feature_": 225, "continuo": 225, "conflict": 225, "THAT": 225, "authoris": 225, "THE": 225, "accompani": 225, "encourag": [225, 233], "successfulli": [225, 237, 239], "outcom": 225, "cd": [225, 233], "offic": 225, "Or": 225, "freez": [225, 226], "peopl": [225, 227], "explor": [225, 233, 239], "plai": 225, "redirect": [225, 233], "straightforward": 225, "haven": 225, "hasn": [225, 235], "easier": [225, 229], "engag": 225, "rectifi": 225, "fix_": 225, "notifi": 225, "categoris": 225, "approv": 225, "backport": 225, "restor": 225, "cherri": 225, "pick": 225, "commitsha": 225, "urgenc": 225, "evolv": 225, "join": [225, 235], "demostr": 225, "touch": 225, "difficult": 225, "workshop": 225, "learn": [225, 226, 233, 237], "calendar": [225, 226], "regular": [225, 226, 230, 237], "cadenc": [225, 226], "everi": [225, 226], "quarter": [225, 226], "There": [225, 226, 231, 237, 239], "go": [225, 233, 237, 239], "channel": [225, 233], "synchronis": 225, "pr": 225, "partner": 225, "task": [225, 231], "resolv": [225, 236], "truth": 225, "revers": 225, "fashion": 225, "everyth": [225, 233, 235, 237, 238], "exact": [225, 237], "tree": 225, "histori": 225, "tag": [225, 236], "On": 225, "changelog": 225, "rst": [225, 234], "titl": [225, 232], "2022": 225, "similar": [225, 231, 235], "describ": [225, 231, 235, 239], "txt": [225, 230], "uncom": 225, "increment": 225, "ve": [225, 233], "dispatch": 225, "arm64": [225, 233], "aarch64": 225, "m1": 225, "update_recip": 225, "mambabuild": 225, "bld": 225, "token": 225, "password": 225, "draft": 225, "earlier": 225, "docker": [225, 233], "bonu": 225, "super": 225, "piec": [225, 235], "announc": 225, "autom": 225, "hope": [225, 229, 239], "much": [225, 235], "ref": 226, "area": 226, "earli": 226, "expermint": 226, "come": [226, 231], "comparison": 226, "exscientia": 226, "layer": 226, "interconvers": 226, "unavoid": 226, "lossi": 226, "bugfix": 226, "fix_issu": 226, "why": 226, "soon": 226, "suffici": 226, "urgent": 226, "NOT": 226, "march": 226, "june": 226, "septemb": 226, "decemb": 226, "five": 226, "month": 226, "preceed": 226, "week": 226, "ey": 226, "perhap": 226, "feature_x": 226, "feel": 226, "offer": 226, "clone": [226, 233], "bleed": 226, "But": 226, "earliest": 226, "lohedg": 227, "jmichel80": 227, "adelehardi": 227, "msuruzon": 227, "charmm": 228, "orthorhomb": 228, "stop": [228, 232, 233], "monitor": [228, 230, 232], "progress": [228, 230], "thermodynam": 228, "understand": 229, "forward": [229, 233], "restrict": 230, "snippet": 230, "1000000": 230, "graphic": 230, "happen": [230, 231], "seamlessli": 230, "p2j": 230, "dual": 230, "argpars": 230, "figur": 230, "captur": 230, "cwl": 230, "someth": 230, "cwltool": 230, "cover": 230, "outputbind": 230, "enforc": 230, "mismatch": 230, "greatest": 230, "25": 230, "file_format": 230, "dropdown": 230, "menu": 230, "modif": [230, 231], "abstract": 231, "instat": 231, "helper": 231, "tweak": 231, "procotol": 231, "tie": 231, "enegin": 231, "occasion": 231, "_generate_config": 231, "incompatibleerror": 231, "_generate_arg": 231, "orchestr": 231, "overal": 231, "themselv": 231, "thought": 231, "low": 231, "isol": 231, "distribut": [232, 233], "scientif": 232, "articl": 232, "hedges2019": 232, "21105": 232, "joss": 232, "01831": 232, "1831": 232, "antonia": 232, "mei": 232, "charl": 232, "laughton": 232, "francesco": 232, "gervasio": 232, "adrian": 232, "mulholland": 232, "christoph": 232, "wood": 232, "julien": 232, "michel": 232, "jupyterhub": 233, "log": 233, "lab": 233, "termin": 233, "prompt": 233, "look": [233, 239], "quickstart": 233, "overview": 233, "gb": 233, "memori": 233, "processor": 233, "storag": 233, "inact": 233, "session": 233, "servic": 233, "easiest": 233, "mamba": 233, "h": [233, 237, 239], "navig": 233, "highli": 233, "quit": 233, "outdat": 233, "risk": 233, "tell": 233, "rout": 233, "podman": 233, "intel": 233, "x86": 233, "8888": 233, "hub": 233, "folder": [233, 237], "ll": [233, 237, 239], "bss_skip_depend": 233, "dep": 233, "runtimeerror": 233, "matplotlibrc": 233, "tkagg": 233, "down": 233, "clash": 233, "usag": 233, "amberhom": 233, "openff": 233, "toolkit": 233, "visit": [233, 237], "bioismspac": [234, 239], "bunch": [234, 239], "mol2": 234, "gro": [234, 237], "dcd": 234, "psf": 234, "sdf": 234, "formatinfo": 234, "ascii": 234, "upward": 234, "toluen": 234, "cc1ccccc1": 234, "ff03": 234, "ff99": 234, "ff99sb": 234, "ff99sbildn": 234, "openff_unconstrain": 234, "rc2": 234, "alpha": 234, "rc": 234, "rc1": 234, "octahedr": [234, 236], "minimised_system": 234, "anyon": 235, "upvot": 235, "anywher": 235, "hopefulli": 235, "newest": 235, "mention": 235, "confirm": 235, "reproduc": 235, "patient": 235, "Be": 235, "rai": 236, "crystallographi": 236, "tyrosin": 236, "kinas": 236, "firstli": 236, "tyk2_xtal": 236, "oxgyen": 236, "o": [236, 239], "4652": 236, "5180": 236, "0520": 236, "6070": 236, "4653": 236, "2040": 236, "5540": 236, "7520": 236, "wat": 236, "tyk2": 236, "xtal_wat": 236, "And": 236, "tleap": 236, "identifi": 236, "h1": [236, 237], "5608": 236, "h2": [236, 237], "7580": 236, "8746": 236, "procedur": 236, "genion": 236, "counter": 236, "5091e": 236, "07": 236, "na": 236, "sodium": 236, "solvated_no_match": 236, "necessarili": 236, "howev": [236, 237], "reli": 236, "ethan": 237, "methanol": 237, "emploi": 237, "unphys": 237, "exploit": 237, "pathwai": 237, "g_": 237, "mathrm": 237, "sol": 237, "vac": 237, "hyd": 237, "generalis": 237, "highest": 237, "idx0": 237, "idx1": 237, "h3": 237, "oh": 237, "ho": 237, "consol": [237, 239], "viewmap": 237, "eampl": 237, "methan": 237, "flexalign": 237, "pose": 237, "simplic": 237, "plu": 237, "dummi": 237, "virtual": 237, "excel": 237, "free_somd": 237, "freenrg_somd": 237, "vac_somd": 237, "prepar": 237, "examin": [237, 239], "l": 237, "lambda_0": 237, "3000": 237, "4000": 237, "7000": 237, "lambda_1": 237, "800": 237, "cfg": 237, "err": 237, "pert": 237, "free_gmx": 237, "freenrg_gmx": 237, "vac_gmx": 237, "mdp": 237, "tpr": 237, "shown": 237, "easili": 237, "showcas": 238, "miniconda": 238, "metadyam": 239, "phi": 239, "psi": 239, "alanin": 239, "dipeptid": 239, "studi": 239, "searchresult": 239, "d": 239, "hh31": 239, "ch3": 239, "hh32": 239, "hh33": 239, "cb": 239, "hb1": 239, "hb2": 239, "hb3": 239, "16": 239, "phi_idx": 239, "psi_idx": 239, "shift": 239, "thankfulli": 239, "getplumedconfig": 239, "NO": 239, "entiti": 239, "wholemolecul": 239, "entity0": 239, "22": 239, "t1": 239, "t2": 239, "metad": 239, "sigma": 239, "pace": 239, "temp": 239, "evolut": 239, "construtor": 239, "free_nrg": 239, "plotcontour": 239, "free_nrg_phi": 239, "landscap": 239, "snapshot": 239, "basin": 239, "sampleconfigur": 239, "snaphot": 239, "randomli": 239, "lie": 239, "middl": 239, "roughli": 239, "geq": 239, "leq1": 239, "leq0": 239, "8042": 239, "2273": 239, "8847": 239, "4034": 239, "8235": 239, "1592": 239, "7356": 239, "2072": 239, "3030": 239, "4957": 239, "6453": 239, "5592": 239, "1190": 239, "8228": 239, "8684": 239, "9700": 239, "9376": 239, "8589": 239, "8618": 239, "2619": 239, "1161": 239, "0558": 239, "2556": 239, "3660": 239, "4522": 239, "4241": 239, "6214": 239, "4681": 239, "2177": 239, "0263": 239, "3990": 239, "2203": 239, "9836": 239, "0206": 239, "0810": 239, "0643": 239, "2382": 239, "3638": 239, "2085": 239, "4942": 239, "enjoi": 239}, "objects": {"BioSimSpace": [[195, 0, 0, "-", "Align"], [196, 0, 0, "-", "Box"], [198, 0, 0, "-", "Convert"], [200, 0, 0, "-", "FreeEnergy"], [201, 0, 0, "-", "Gateway"], [202, 0, 0, "-", "IO"], [203, 0, 0, "-", "MD"], [204, 0, 0, "-", "Metadynamics"], [206, 0, 0, "-", "Node"], [207, 0, 0, "-", "Notebook"], [208, 0, 0, "-", "Parameters"], [209, 0, 0, "-", "Process"], [210, 0, 0, "-", "Protocol"], [213, 0, 0, "-", "Solvent"], [214, 0, 0, "-", "Stream"], [215, 0, 0, "-", "Trajectory"], [216, 0, 0, "-", "Types"], [217, 0, 0, "-", "Units"], [197, 0, 0, "-", "_Config"], [199, 0, 0, "-", "_Exceptions"], [212, 0, 0, "-", "_SireWrappers"], [218, 0, 0, "-", "_Utils"]], "BioSimSpace.Align": [[0, 1, 1, "", "flexAlign"], [1, 1, 1, "", "generateNetwork"], [2, 1, 1, "", "matchAtoms"], [3, 1, 1, "", "merge"], [4, 1, 1, "", "rmsdAlign"], [5, 1, 1, "", "viewMapping"]], "BioSimSpace.Box": [[6, 1, 1, "", "boxTypes"], [7, 1, 1, "", "cubic"], [8, 1, 1, "", "generateBoxParameters"], [9, 1, 1, "", "rhombicDodecahedronHexagon"], [10, 1, 1, "", "rhombicDodecahedronSquare"], [11, 1, 1, "", "truncatedOctahedron"]], "BioSimSpace.Convert": [[12, 1, 1, "", "smiles"], [13, 1, 1, "", "supportedFormats"], [14, 1, 1, "", "to"], [15, 1, 1, "", "toBioSimSpace"], [16, 1, 1, "", "toOpenMM"], [17, 1, 1, "", "toRDKit"], [18, 1, 1, "", "toSire"]], "BioSimSpace.FreeEnergy": [[19, 2, 1, "", "Relative"], [20, 1, 1, "", "engines"], [21, 1, 1, "", "getData"]], "BioSimSpace.FreeEnergy.Relative": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "analyse"], [19, 3, 1, "", "checkOverlap"], [19, 3, 1, "", "difference"], [19, 3, 1, "", "getData"], [19, 3, 1, "", "kill"], [19, 3, 1, "", "killAll"], [19, 3, 1, "", "run"], [19, 3, 1, "", "wait"], [19, 3, 1, "", "workDir"]], "BioSimSpace.Gateway": [[22, 2, 1, "", "Area"], [23, 2, 1, "", "Boolean"], [24, 2, 1, "", "Charge"], [25, 2, 1, "", "Energy"], [26, 2, 1, "", "File"], [27, 2, 1, "", "FileSet"], [28, 2, 1, "", "Float"], [29, 2, 1, "", "Integer"], [30, 2, 1, "", "Length"], [31, 2, 1, "", "Node"], [32, 2, 1, "", "Pressure"], [33, 2, 1, "", "String"], [34, 2, 1, "", "Temperature"], [35, 2, 1, "", "Time"], [36, 2, 1, "", "Volume"]], "BioSimSpace.Gateway.Area": [[22, 3, 1, "", "__init__"], [22, 3, 1, "", "getAllowedValues"], [22, 3, 1, "", "getArgType"], [22, 3, 1, "", "getDefault"], [22, 3, 1, "", "getHelp"], [22, 3, 1, "", "getMax"], [22, 3, 1, "", "getMin"], [22, 3, 1, "", "getUnit"], [22, 3, 1, "", "getValue"], [22, 3, 1, "", "isMulti"], [22, 3, 1, "", "isOptional"], [22, 3, 1, "", "setValue"]], "BioSimSpace.Gateway.Boolean": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "getAllowedValues"], [23, 3, 1, "", "getArgType"], [23, 3, 1, "", "getDefault"], [23, 3, 1, "", "getHelp"], [23, 3, 1, "", "getMax"], [23, 3, 1, "", "getMin"], [23, 3, 1, "", "getUnit"], [23, 3, 1, "", "getValue"], [23, 3, 1, "", "isMulti"], [23, 3, 1, "", "isOptional"], [23, 3, 1, "", "setValue"]], "BioSimSpace.Gateway.Charge": [[24, 3, 1, "", "__init__"], [24, 3, 1, "", "getAllowedValues"], [24, 3, 1, "", "getArgType"], [24, 3, 1, "", "getDefault"], [24, 3, 1, "", "getHelp"], [24, 3, 1, "", "getMax"], [24, 3, 1, "", "getMin"], [24, 3, 1, "", "getUnit"], [24, 3, 1, "", "getValue"], [24, 3, 1, "", "isMulti"], [24, 3, 1, "", "isOptional"], [24, 3, 1, "", "setValue"]], "BioSimSpace.Gateway.Energy": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "getAllowedValues"], [25, 3, 1, "", "getArgType"], [25, 3, 1, "", "getDefault"], [25, 3, 1, "", "getHelp"], [25, 3, 1, "", "getMax"], [25, 3, 1, "", "getMin"], [25, 3, 1, "", "getUnit"], [25, 3, 1, "", "getValue"], [25, 3, 1, "", "isMulti"], [25, 3, 1, "", "isOptional"], [25, 3, 1, "", "setValue"]], "BioSimSpace.Gateway.File": [[26, 3, 1, "", "__init__"], [26, 3, 1, "", "getAllowedValues"], [26, 3, 1, "", "getArgType"], [26, 3, 1, "", "getDefault"], [26, 3, 1, "", "getHelp"], [26, 3, 1, "", "getMax"], [26, 3, 1, "", "getMin"], [26, 3, 1, "", "getUnit"], [26, 3, 1, "", "getValue"], [26, 3, 1, "", "isMulti"], [26, 3, 1, "", "isOptional"], [26, 3, 1, "", "setValue"]], "BioSimSpace.Gateway.FileSet": [[27, 3, 1, "", "__init__"], [27, 3, 1, "", "getAllowedValues"], [27, 3, 1, "", "getArgType"], [27, 3, 1, "", "getDefault"], [27, 3, 1, "", "getHelp"], [27, 3, 1, "", "getMax"], [27, 3, 1, "", "getMin"], [27, 3, 1, "", "getUnit"], [27, 3, 1, "", "getValue"], [27, 3, 1, "", "isMulti"], [27, 3, 1, "", "isOptional"], [27, 3, 1, "", "setValue"]], "BioSimSpace.Gateway.Float": [[28, 3, 1, "", "__init__"], [28, 3, 1, "", "getAllowedValues"], [28, 3, 1, "", "getArgType"], [28, 3, 1, "", "getDefault"], [28, 3, 1, "", "getHelp"], [28, 3, 1, "", "getMax"], [28, 3, 1, "", "getMin"], [28, 3, 1, "", "getUnit"], [28, 3, 1, "", "getValue"], [28, 3, 1, "", "isMulti"], [28, 3, 1, "", "isOptional"], [28, 3, 1, "", "setValue"]], "BioSimSpace.Gateway.Integer": [[29, 3, 1, "", "__init__"], [29, 3, 1, "", "getAllowedValues"], [29, 3, 1, "", "getArgType"], [29, 3, 1, "", "getDefault"], [29, 3, 1, "", "getHelp"], [29, 3, 1, "", "getMax"], [29, 3, 1, "", "getMin"], [29, 3, 1, "", "getUnit"], [29, 3, 1, "", "getValue"], [29, 3, 1, "", "isMulti"], [29, 3, 1, "", "isOptional"], [29, 3, 1, "", "setValue"]], "BioSimSpace.Gateway.Length": [[30, 3, 1, "", "__init__"], [30, 3, 1, "", "getAllowedValues"], [30, 3, 1, "", "getArgType"], [30, 3, 1, "", "getDefault"], [30, 3, 1, "", "getHelp"], [30, 3, 1, "", "getMax"], [30, 3, 1, "", "getMin"], [30, 3, 1, "", "getUnit"], [30, 3, 1, "", "getValue"], [30, 3, 1, "", "isMulti"], [30, 3, 1, "", "isOptional"], [30, 3, 1, "", "setValue"]], "BioSimSpace.Gateway.Node": [[31, 3, 1, "", "__init__"], [31, 3, 1, "", "addAuthor"], [31, 3, 1, "", "addError"], [31, 3, 1, "", "addInput"], [31, 3, 1, "", "addOutput"], [31, 3, 1, "", "getAuthors"], [31, 3, 1, "", "getInput"], [31, 3, 1, "", "getInputs"], [31, 3, 1, "", "getLicense"], [31, 3, 1, "", "setLicense"], [31, 3, 1, "", "setOutput"], [31, 3, 1, "", "showControls"], [31, 3, 1, "", "validate"]], "BioSimSpace.Gateway.Pressure": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "getAllowedValues"], [32, 3, 1, "", "getArgType"], [32, 3, 1, "", "getDefault"], [32, 3, 1, "", "getHelp"], [32, 3, 1, "", "getMax"], [32, 3, 1, "", "getMin"], [32, 3, 1, "", "getUnit"], [32, 3, 1, "", "getValue"], [32, 3, 1, "", "isMulti"], [32, 3, 1, "", "isOptional"], [32, 3, 1, "", "setValue"]], "BioSimSpace.Gateway.String": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "getAllowedValues"], [33, 3, 1, "", "getArgType"], [33, 3, 1, "", "getDefault"], [33, 3, 1, "", "getHelp"], [33, 3, 1, "", "getMax"], [33, 3, 1, "", "getMin"], [33, 3, 1, "", "getUnit"], [33, 3, 1, "", "getValue"], [33, 3, 1, "", "isMulti"], [33, 3, 1, "", "isOptional"], [33, 3, 1, "", "setValue"]], "BioSimSpace.Gateway.Temperature": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "getAllowedValues"], [34, 3, 1, "", "getArgType"], [34, 3, 1, "", "getDefault"], [34, 3, 1, "", "getHelp"], [34, 3, 1, "", "getMax"], [34, 3, 1, "", "getMin"], [34, 3, 1, "", "getUnit"], [34, 3, 1, "", "getValue"], [34, 3, 1, "", "isMulti"], [34, 3, 1, "", "isOptional"], [34, 3, 1, "", "setValue"]], "BioSimSpace.Gateway.Time": [[35, 3, 1, "", "__init__"], [35, 3, 1, "", "getAllowedValues"], [35, 3, 1, "", "getArgType"], [35, 3, 1, "", "getDefault"], [35, 3, 1, "", "getHelp"], [35, 3, 1, "", "getMax"], [35, 3, 1, "", "getMin"], [35, 3, 1, "", "getUnit"], [35, 3, 1, "", "getValue"], [35, 3, 1, "", "isMulti"], [35, 3, 1, "", "isOptional"], [35, 3, 1, "", "setValue"]], "BioSimSpace.Gateway.Volume": [[36, 3, 1, "", "__init__"], [36, 3, 1, "", "getAllowedValues"], [36, 3, 1, "", "getArgType"], [36, 3, 1, "", "getDefault"], [36, 3, 1, "", "getHelp"], [36, 3, 1, "", "getMax"], [36, 3, 1, "", "getMin"], [36, 3, 1, "", "getUnit"], [36, 3, 1, "", "getValue"], [36, 3, 1, "", "isMulti"], [36, 3, 1, "", "isOptional"], [36, 3, 1, "", "setValue"]], "BioSimSpace.IO": [[37, 1, 1, "", "fileFormats"], [38, 1, 1, "", "formatInfo"], [39, 1, 1, "", "readMolecules"], [40, 1, 1, "", "readPDB"], [41, 1, 1, "", "readPerturbableSystem"], [42, 1, 1, "", "saveMolecules"], [43, 1, 1, "", "savePerturbableSystem"]], "BioSimSpace.MD": [[44, 1, 1, "", "engines"], [45, 1, 1, "", "run"]], "BioSimSpace.Metadynamics": [[46, 2, 1, "", "Bound"], [205, 0, 0, "-", "CollectiveVariable"], [54, 2, 1, "", "Grid"], [55, 2, 1, "", "Restraint"], [56, 1, 1, "", "engines"], [57, 1, 1, "", "run"]], "BioSimSpace.Metadynamics.Bound": [[46, 3, 1, "", "__init__"], [46, 3, 1, "", "getEpsilon"], [46, 3, 1, "", "getExponent"], [46, 3, 1, "", "getForceConstant"], [46, 3, 1, "", "getValue"], [46, 3, 1, "", "setEpsilon"], [46, 3, 1, "", "setExponent"], [46, 3, 1, "", "setForceConstant"], [46, 3, 1, "", "setValue"]], "BioSimSpace.Metadynamics.CollectiveVariable": [[47, 2, 1, "", "Distance"], [48, 2, 1, "", "Funnel"], [49, 2, 1, "", "RMSD"], [50, 2, 1, "", "Torsion"], [51, 1, 1, "", "list"], [52, 1, 1, "", "makeFunnel"], [53, 1, 1, "", "viewFunnel"]], "BioSimSpace.Metadynamics.CollectiveVariable.Distance": [[47, 3, 1, "", "__init__"], [47, 3, 1, "", "getAtom0"], [47, 3, 1, "", "getAtom1"], [47, 3, 1, "", "getCoM0"], [47, 3, 1, "", "getCoM1"], [47, 3, 1, "", "getComponent"], [47, 3, 1, "", "getGrid"], [47, 3, 1, "", "getHillWidth"], [47, 3, 1, "", "getLowerBound"], [47, 3, 1, "", "getPeriodicBoundaries"], [47, 3, 1, "", "getUpperBound"], [47, 3, 1, "", "getWeights0"], [47, 3, 1, "", "getWeights1"], [47, 3, 1, "", "nComponents"], [47, 3, 1, "", "setAtom0"], [47, 3, 1, "", "setAtom1"], [47, 3, 1, "", "setCoM0"], [47, 3, 1, "", "setCoM1"], [47, 3, 1, "", "setComponent"], [47, 3, 1, "", "setGrid"], [47, 3, 1, "", "setHillWidth"], [47, 3, 1, "", "setLowerBound"], [47, 3, 1, "", "setPeriodicBoundaries"], [47, 3, 1, "", "setUpperBound"], [47, 3, 1, "", "setWeights0"], [47, 3, 1, "", "setWeights1"]], "BioSimSpace.Metadynamics.CollectiveVariable.Funnel": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "getAtoms0"], [48, 3, 1, "", "getAtoms1"], [48, 3, 1, "", "getBuffer"], [48, 3, 1, "", "getCorrection"], [48, 3, 1, "", "getExtent"], [48, 3, 1, "", "getGrid"], [48, 3, 1, "", "getHillWidth"], [48, 3, 1, "", "getInflection"], [48, 3, 1, "", "getLowerBound"], [48, 3, 1, "", "getSteepness"], [48, 3, 1, "", "getUpperBound"], [48, 3, 1, "", "getWidth"], [48, 3, 1, "", "nComponents"], [48, 3, 1, "", "setAtoms0"], [48, 3, 1, "", "setAtoms1"], [48, 3, 1, "", "setBuffer"], [48, 3, 1, "", "setGrid"], [48, 3, 1, "", "setHillWidth"], [48, 3, 1, "", "setInflection"], [48, 3, 1, "", "setLowerBound"], [48, 3, 1, "", "setSteepness"], [48, 3, 1, "", "setUpperBound"], [48, 3, 1, "", "setWidth"]], "BioSimSpace.Metadynamics.CollectiveVariable.RMSD": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "getAlignmentType"], [49, 3, 1, "", "getGrid"], [49, 3, 1, "", "getHillWidth"], [49, 3, 1, "", "getInitialValue"], [49, 3, 1, "", "getLowerBound"], [49, 3, 1, "", "getPeriodicBoundaries"], [49, 3, 1, "", "getReferenceIndex"], [49, 3, 1, "", "getReferencePDB"], [49, 3, 1, "", "getUpperBound"], [49, 3, 1, "", "nComponents"], [49, 3, 1, "", "setAlignmentType"], [49, 3, 1, "", "setGrid"], [49, 3, 1, "", "setHillWidth"], [49, 3, 1, "", "setLowerBound"], [49, 3, 1, "", "setPeriodicBoundaries"], [49, 3, 1, "", "setUpperBound"]], "BioSimSpace.Metadynamics.CollectiveVariable.Torsion": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "getAtoms"], [50, 3, 1, "", "getGrid"], [50, 3, 1, "", "getHillWidth"], [50, 3, 1, "", "getLowerBound"], [50, 3, 1, "", "getPeriodicBoundaries"], [50, 3, 1, "", "getUpperBound"], [50, 3, 1, "", "nComponents"], [50, 3, 1, "", "setAtoms"], [50, 3, 1, "", "setGrid"], [50, 3, 1, "", "setHillWidth"], [50, 3, 1, "", "setLowerBound"], [50, 3, 1, "", "setPeriodicBoundaries"], [50, 3, 1, "", "setUpperBound"]], "BioSimSpace.Metadynamics.Grid": [[54, 3, 1, "", "__init__"], [54, 3, 1, "", "getBins"], [54, 3, 1, "", "getMaximum"], [54, 3, 1, "", "getMinimum"], [54, 3, 1, "", "setBins"], [54, 3, 1, "", "setMaximum"], [54, 3, 1, "", "setMinimum"]], "BioSimSpace.Metadynamics.Restraint": [[55, 3, 1, "", "__init__"], [55, 3, 1, "", "getForceConstant"], [55, 3, 1, "", "getSlope"], [55, 3, 1, "", "getValue"], [55, 3, 1, "", "setForceConstant"], [55, 3, 1, "", "setSlope"], [55, 3, 1, "", "setValue"]], "BioSimSpace.Node": [[58, 1, 1, "", "help"], [59, 1, 1, "", "list"], [60, 1, 1, "", "run"], [61, 1, 1, "", "setNodeDirectory"]], "BioSimSpace.Notebook": [[62, 2, 1, "", "View"], [63, 1, 1, "", "plot"], [64, 1, 1, "", "plotContour"], [65, 1, 1, "", "plotOverlapMatrix"]], "BioSimSpace.Notebook.View": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "molecule"], [62, 3, 1, "", "molecules"], [62, 3, 1, "", "nViews"], [62, 3, 1, "", "reload"], [62, 3, 1, "", "reset"], [62, 3, 1, "", "savePDB"], [62, 3, 1, "", "system"]], "BioSimSpace.Parameters": [[66, 1, 1, "", "amberForceFields"], [67, 1, 1, "", "amberProteinForceFields"], [68, 1, 1, "", "ff03"], [69, 1, 1, "", "ff14SB"], [70, 1, 1, "", "ff99"], [71, 1, 1, "", "ff99SB"], [72, 1, 1, "", "ff99SBildn"], [73, 1, 1, "", "forceFields"], [74, 1, 1, "", "formalCharge"], [75, 1, 1, "", "gaff"], [76, 1, 1, "", "gaff2"], [77, 1, 1, "", "openForceFields"], [78, 1, 1, "", "openff_unconstrained_1_0_0"], [79, 1, 1, "", "openff_unconstrained_1_0_0_RC1"], [80, 1, 1, "", "openff_unconstrained_1_0_0_RC2"], [81, 1, 1, "", "openff_unconstrained_1_0_1"], [82, 1, 1, "", "openff_unconstrained_1_1_0"], [83, 1, 1, "", "openff_unconstrained_1_1_1"], [84, 1, 1, "", "openff_unconstrained_1_2_0"], [85, 1, 1, "", "openff_unconstrained_1_2_1"], [86, 1, 1, "", "openff_unconstrained_1_3_0"], [87, 1, 1, "", "openff_unconstrained_1_3_1"], [88, 1, 1, "", "openff_unconstrained_1_3_1_alpha_1"], [89, 1, 1, "", "openff_unconstrained_2_0_0"], [90, 1, 1, "", "openff_unconstrained_2_0_0_rc_1"], [91, 1, 1, "", "openff_unconstrained_2_0_0_rc_2"], [92, 1, 1, "", "openff_unconstrained_2_1_0"], [93, 1, 1, "", "openff_unconstrained_2_1_0_rc_1"], [94, 1, 1, "", "parameterise"]], "BioSimSpace.Process": [[95, 2, 1, "", "Amber"], [96, 2, 1, "", "Gromacs"], [97, 2, 1, "", "Namd"], [98, 2, 1, "", "OpenMM"], [99, 2, 1, "", "Plumed"], [100, 2, 1, "", "ProcessRunner"], [101, 2, 1, "", "Somd"], [102, 1, 1, "", "createProcess"], [103, 1, 1, "", "engines"]], "BioSimSpace.Process.Amber": [[95, 3, 1, "", "__init__"], [95, 3, 1, "", "addArgs"], [95, 3, 1, "", "addToConfig"], [95, 3, 1, "", "clearArgs"], [95, 3, 1, "", "command"], [95, 3, 1, "", "deleteArg"], [95, 3, 1, "", "exe"], [95, 3, 1, "", "getAngleEnergy"], [95, 3, 1, "", "getArgString"], [95, 3, 1, "", "getArgStringList"], [95, 3, 1, "", "getArgs"], [95, 3, 1, "", "getBondEnergy"], [95, 3, 1, "", "getCentreOfMassKineticEnergy"], [95, 3, 1, "", "getConfig"], [95, 3, 1, "", "getCurrentAngleEnergy"], [95, 3, 1, "", "getCurrentBondEnergy"], [95, 3, 1, "", "getCurrentCentreOfMassKineticEnergy"], [95, 3, 1, "", "getCurrentDensity"], [95, 3, 1, "", "getCurrentDihedralEnergy"], [95, 3, 1, "", "getCurrentElectrostaticEnergy"], [95, 3, 1, "", "getCurrentElectrostaticEnergy14"], [95, 3, 1, "", "getCurrentHydrogenBondEnergy"], [95, 3, 1, "", "getCurrentKineticEnergy"], [95, 3, 1, "", "getCurrentNonBondedEnergy14"], [95, 3, 1, "", "getCurrentPotentialEnergy"], [95, 3, 1, "", "getCurrentPressure"], [95, 3, 1, "", "getCurrentRecord"], [95, 3, 1, "", "getCurrentRecords"], [95, 3, 1, "", "getCurrentRestraintEnergy"], [95, 3, 1, "", "getCurrentStep"], [95, 3, 1, "", "getCurrentSystem"], [95, 3, 1, "", "getCurrentTemperature"], [95, 3, 1, "", "getCurrentTime"], [95, 3, 1, "", "getCurrentTotalEnergy"], [95, 3, 1, "", "getCurrentVanDerWaalsEnergy"], [95, 3, 1, "", "getCurrentVirial"], [95, 3, 1, "", "getCurrentVolume"], [95, 3, 1, "", "getDensity"], [95, 3, 1, "", "getDihedralEnergy"], [95, 3, 1, "", "getElectrostaticEnergy"], [95, 3, 1, "", "getElectrostaticEnergy14"], [95, 3, 1, "", "getFrame"], [95, 3, 1, "", "getHydrogenBondEnergy"], [95, 3, 1, "", "getInput"], [95, 3, 1, "", "getKineticEnergy"], [95, 3, 1, "", "getName"], [95, 3, 1, "", "getNonBondedEnergy14"], [95, 3, 1, "", "getOutput"], [95, 3, 1, "", "getPackageName"], [95, 3, 1, "", "getPotentialEnergy"], [95, 3, 1, "", "getPressure"], [95, 3, 1, "", "getRecord"], [95, 3, 1, "", "getRecords"], [95, 3, 1, "", "getRestraintEnergy"], [95, 3, 1, "", "getSeed"], [95, 3, 1, "", "getStderr"], [95, 3, 1, "", "getStdout"], [95, 3, 1, "", "getStep"], [95, 3, 1, "", "getSystem"], [95, 3, 1, "", "getTemperature"], [95, 3, 1, "", "getTime"], [95, 3, 1, "", "getTotalEnergy"], [95, 3, 1, "", "getTrajectory"], [95, 3, 1, "", "getVanDerWaalsEnergy"], [95, 3, 1, "", "getVirial"], [95, 3, 1, "", "getVolume"], [95, 3, 1, "", "inputFiles"], [95, 3, 1, "", "insertArg"], [95, 3, 1, "", "isError"], [95, 3, 1, "", "isQueued"], [95, 3, 1, "", "isRunning"], [95, 3, 1, "", "kill"], [95, 3, 1, "", "resetArgs"], [95, 3, 1, "", "resetConfig"], [95, 3, 1, "", "run"], [95, 3, 1, "", "runTime"], [95, 3, 1, "", "setArg"], [95, 3, 1, "", "setArgs"], [95, 3, 1, "", "setConfig"], [95, 3, 1, "", "setName"], [95, 3, 1, "", "setSeed"], [95, 3, 1, "", "start"], [95, 3, 1, "", "stderr"], [95, 3, 1, "", "stdout"], [95, 3, 1, "", "wait"], [95, 3, 1, "", "workDir"], [95, 3, 1, "", "writeConfig"]], "BioSimSpace.Process.Gromacs": [[96, 3, 1, "", "__init__"], [96, 3, 1, "", "addArgs"], [96, 3, 1, "", "addToConfig"], [96, 3, 1, "", "clearArgs"], [96, 3, 1, "", "command"], [96, 3, 1, "", "deleteArg"], [96, 3, 1, "", "exe"], [96, 3, 1, "", "getAngleEnergy"], [96, 3, 1, "", "getArgString"], [96, 3, 1, "", "getArgStringList"], [96, 3, 1, "", "getArgs"], [96, 3, 1, "", "getBondEnergy"], [96, 3, 1, "", "getConfig"], [96, 3, 1, "", "getConservedEnergy"], [96, 3, 1, "", "getConstraintRMSD"], [96, 3, 1, "", "getCoulomb14"], [96, 3, 1, "", "getCoulombReciprocal"], [96, 3, 1, "", "getCoulombSR"], [96, 3, 1, "", "getCurrentAngleEnergy"], [96, 3, 1, "", "getCurrentBondEnergy"], [96, 3, 1, "", "getCurrentConservedEnergy"], [96, 3, 1, "", "getCurrentConstraintRMSD"], [96, 3, 1, "", "getCurrentCoulomb14"], [96, 3, 1, "", "getCurrentCoulombReciprocal"], [96, 3, 1, "", "getCurrentCoulombSR"], [96, 3, 1, "", "getCurrentDihedralEnergy"], [96, 3, 1, "", "getCurrentDispersionCorrection"], [96, 3, 1, "", "getCurrentImproperEnergy"], [96, 3, 1, "", "getCurrentKineticEnergy"], [96, 3, 1, "", "getCurrentLennardJones14"], [96, 3, 1, "", "getCurrentLennardJonesSR"], [96, 3, 1, "", "getCurrentPotentialEnergy"], [96, 3, 1, "", "getCurrentPressure"], [96, 3, 1, "", "getCurrentPressureDC"], [96, 3, 1, "", "getCurrentProperEnergy"], [96, 3, 1, "", "getCurrentRecord"], [96, 3, 1, "", "getCurrentRecords"], [96, 3, 1, "", "getCurrentRestraintEnergy"], [96, 3, 1, "", "getCurrentStep"], [96, 3, 1, "", "getCurrentSystem"], [96, 3, 1, "", "getCurrentTemperature"], [96, 3, 1, "", "getCurrentTime"], [96, 3, 1, "", "getCurrentTotalEnergy"], [96, 3, 1, "", "getCurrentVolume"], [96, 3, 1, "", "getDihedralEnergy"], [96, 3, 1, "", "getDispersionCorrection"], [96, 3, 1, "", "getFrame"], [96, 3, 1, "", "getImproperEnergy"], [96, 3, 1, "", "getInput"], [96, 3, 1, "", "getKineticEnergy"], [96, 3, 1, "", "getLennardJones14"], [96, 3, 1, "", "getLennardJonesSR"], [96, 3, 1, "", "getName"], [96, 3, 1, "", "getOutput"], [96, 3, 1, "", "getPackageName"], [96, 3, 1, "", "getPotentialEnergy"], [96, 3, 1, "", "getPressure"], [96, 3, 1, "", "getPressureDC"], [96, 3, 1, "", "getProperEnergy"], [96, 3, 1, "", "getRecord"], [96, 3, 1, "", "getRecords"], [96, 3, 1, "", "getRestraintEnergy"], [96, 3, 1, "", "getSeed"], [96, 3, 1, "", "getStderr"], [96, 3, 1, "", "getStdout"], [96, 3, 1, "", "getStep"], [96, 3, 1, "", "getSystem"], [96, 3, 1, "", "getTemperature"], [96, 3, 1, "", "getTime"], [96, 3, 1, "", "getTotalEnergy"], [96, 3, 1, "", "getTrajectory"], [96, 3, 1, "", "getVolume"], [96, 3, 1, "", "inputFiles"], [96, 3, 1, "", "insertArg"], [96, 3, 1, "", "isError"], [96, 3, 1, "", "isQueued"], [96, 3, 1, "", "isRunning"], [96, 3, 1, "", "kill"], [96, 3, 1, "", "resetArgs"], [96, 3, 1, "", "resetConfig"], [96, 3, 1, "", "run"], [96, 3, 1, "", "runTime"], [96, 3, 1, "", "setArg"], [96, 3, 1, "", "setArgs"], [96, 3, 1, "", "setConfig"], [96, 3, 1, "", "setName"], [96, 3, 1, "", "setSeed"], [96, 3, 1, "", "start"], [96, 3, 1, "", "stderr"], [96, 3, 1, "", "stdout"], [96, 3, 1, "", "wait"], [96, 3, 1, "", "workDir"], [96, 3, 1, "", "writeConfig"]], "BioSimSpace.Process.Namd": [[97, 3, 1, "", "__init__"], [97, 3, 1, "", "addArgs"], [97, 3, 1, "", "addToConfig"], [97, 3, 1, "", "clearArgs"], [97, 3, 1, "", "command"], [97, 3, 1, "", "deleteArg"], [97, 3, 1, "", "eta"], [97, 3, 1, "", "exe"], [97, 3, 1, "", "getAngleEnergy"], [97, 3, 1, "", "getArgString"], [97, 3, 1, "", "getArgStringList"], [97, 3, 1, "", "getArgs"], [97, 3, 1, "", "getBondEnergy"], [97, 3, 1, "", "getBoundaryEnergy"], [97, 3, 1, "", "getConfig"], [97, 3, 1, "", "getCurrentAngleEnergy"], [97, 3, 1, "", "getCurrentBondEnergy"], [97, 3, 1, "", "getCurrentBoundaryEnergy"], [97, 3, 1, "", "getCurrentDihedralEnergy"], [97, 3, 1, "", "getCurrentElectrostaticEnergy"], [97, 3, 1, "", "getCurrentGPressure"], [97, 3, 1, "", "getCurrentGPressureAverage"], [97, 3, 1, "", "getCurrentImproperEnergy"], [97, 3, 1, "", "getCurrentKineticEnergy"], [97, 3, 1, "", "getCurrentMiscEnergy"], [97, 3, 1, "", "getCurrentPotentialEnergy"], [97, 3, 1, "", "getCurrentPressure"], [97, 3, 1, "", "getCurrentPressureAverage"], [97, 3, 1, "", "getCurrentProperEnergy"], [97, 3, 1, "", "getCurrentRecord"], [97, 3, 1, "", "getCurrentRecords"], [97, 3, 1, "", "getCurrentStep"], [97, 3, 1, "", "getCurrentSystem"], [97, 3, 1, "", "getCurrentTemperature"], [97, 3, 1, "", "getCurrentTemperatureAverage"], [97, 3, 1, "", "getCurrentTime"], [97, 3, 1, "", "getCurrentTotal2Energy"], [97, 3, 1, "", "getCurrentTotal3Energy"], [97, 3, 1, "", "getCurrentTotalEnergy"], [97, 3, 1, "", "getCurrentVanDerWaalsEnergy"], [97, 3, 1, "", "getCurrentVolume"], [97, 3, 1, "", "getDihedralEnergy"], [97, 3, 1, "", "getElectrostaticEnergy"], [97, 3, 1, "", "getFrame"], [97, 3, 1, "", "getGPressure"], [97, 3, 1, "", "getGPressureAverage"], [97, 3, 1, "", "getImproperEnergy"], [97, 3, 1, "", "getInput"], [97, 3, 1, "", "getKineticEnergy"], [97, 3, 1, "", "getMiscEnergy"], [97, 3, 1, "", "getName"], [97, 3, 1, "", "getOutput"], [97, 3, 1, "", "getPackageName"], [97, 3, 1, "", "getPotentialEnergy"], [97, 3, 1, "", "getPressure"], [97, 3, 1, "", "getPressureAverage"], [97, 3, 1, "", "getProperEnergy"], [97, 3, 1, "", "getRecord"], [97, 3, 1, "", "getRecords"], [97, 3, 1, "", "getSeed"], [97, 3, 1, "", "getStderr"], [97, 3, 1, "", "getStdout"], [97, 3, 1, "", "getStep"], [97, 3, 1, "", "getSystem"], [97, 3, 1, "", "getTemperature"], [97, 3, 1, "", "getTemperatureAverage"], [97, 3, 1, "", "getTime"], [97, 3, 1, "", "getTotal2Energy"], [97, 3, 1, "", "getTotal3Energy"], [97, 3, 1, "", "getTotalEnergy"], [97, 3, 1, "", "getTrajectory"], [97, 3, 1, "", "getVanDerWaalsEnergy"], [97, 3, 1, "", "getVolume"], [97, 3, 1, "", "inputFiles"], [97, 3, 1, "", "insertArg"], [97, 3, 1, "", "isError"], [97, 3, 1, "", "isQueued"], [97, 3, 1, "", "isRunning"], [97, 3, 1, "", "kill"], [97, 3, 1, "", "resetArgs"], [97, 3, 1, "", "resetConfig"], [97, 3, 1, "", "run"], [97, 3, 1, "", "runTime"], [97, 3, 1, "", "setArg"], [97, 3, 1, "", "setArgs"], [97, 3, 1, "", "setConfig"], [97, 3, 1, "", "setName"], [97, 3, 1, "", "setSeed"], [97, 3, 1, "", "start"], [97, 3, 1, "", "stderr"], [97, 3, 1, "", "stdout"], [97, 3, 1, "", "wait"], [97, 3, 1, "", "workDir"], [97, 3, 1, "", "writeConfig"]], "BioSimSpace.Process.OpenMM": [[98, 3, 1, "", "__init__"], [98, 3, 1, "", "addArgs"], [98, 3, 1, "", "addToConfig"], [98, 3, 1, "", "clearArgs"], [98, 3, 1, "", "command"], [98, 3, 1, "", "deleteArg"], [98, 3, 1, "", "exe"], [98, 3, 1, "", "getArgString"], [98, 3, 1, "", "getArgStringList"], [98, 3, 1, "", "getArgs"], [98, 3, 1, "", "getConfig"], [98, 3, 1, "", "getCurrentKineticEnergy"], [98, 3, 1, "", "getCurrentPotentialEnergy"], [98, 3, 1, "", "getCurrentRecord"], [98, 3, 1, "", "getCurrentRecords"], [98, 3, 1, "", "getCurrentStep"], [98, 3, 1, "", "getCurrentSystem"], [98, 3, 1, "", "getCurrentTemperature"], [98, 3, 1, "", "getCurrentTime"], [98, 3, 1, "", "getCurrentTotalEnergy"], [98, 3, 1, "", "getCurrentVolume"], [98, 3, 1, "", "getFrame"], [98, 3, 1, "", "getInput"], [98, 3, 1, "", "getKineticEnergy"], [98, 3, 1, "", "getName"], [98, 3, 1, "", "getOutput"], [98, 3, 1, "", "getPackageName"], [98, 3, 1, "", "getPotentialEnergy"], [98, 3, 1, "", "getRecord"], [98, 3, 1, "", "getRecords"], [98, 3, 1, "", "getSeed"], [98, 3, 1, "", "getStderr"], [98, 3, 1, "", "getStdout"], [98, 3, 1, "", "getStep"], [98, 3, 1, "", "getSystem"], [98, 3, 1, "", "getTemperature"], [98, 3, 1, "", "getTime"], [98, 3, 1, "", "getTotalEnergy"], [98, 3, 1, "", "getTrajectory"], [98, 3, 1, "", "getVolume"], [98, 3, 1, "", "inputFiles"], [98, 3, 1, "", "insertArg"], [98, 3, 1, "", "isError"], [98, 3, 1, "", "isQueued"], [98, 3, 1, "", "isRunning"], [98, 3, 1, "", "kill"], [98, 3, 1, "", "resetArgs"], [98, 3, 1, "", "resetConfig"], [98, 3, 1, "", "run"], [98, 3, 1, "", "runTime"], [98, 3, 1, "", "setArg"], [98, 3, 1, "", "setArgs"], [98, 3, 1, "", "setConfig"], [98, 3, 1, "", "setName"], [98, 3, 1, "", "setSeed"], [98, 3, 1, "", "start"], [98, 3, 1, "", "stderr"], [98, 3, 1, "", "stdout"], [98, 3, 1, "", "wait"], [98, 3, 1, "", "workDir"], [98, 3, 1, "", "writeConfig"]], "BioSimSpace.Process.Plumed": [[99, 3, 1, "", "__init__"], [99, 3, 1, "", "createConfig"], [99, 3, 1, "", "getCollectiveVariable"], [99, 3, 1, "", "getFreeEnergy"], [99, 3, 1, "", "getTime"]], "BioSimSpace.Process.ProcessRunner": [[100, 3, 1, "", "__init__"], [100, 3, 1, "", "addProcess"], [100, 3, 1, "", "errored"], [100, 3, 1, "", "getName"], [100, 3, 1, "", "isError"], [100, 3, 1, "", "isQueued"], [100, 3, 1, "", "isRunning"], [100, 3, 1, "", "kill"], [100, 3, 1, "", "killAll"], [100, 3, 1, "", "nError"], [100, 3, 1, "", "nProcesses"], [100, 3, 1, "", "nQueued"], [100, 3, 1, "", "nRunning"], [100, 3, 1, "", "processes"], [100, 3, 1, "", "queued"], [100, 3, 1, "", "removeProcess"], [100, 3, 1, "", "restartFailed"], [100, 3, 1, "", "runTime"], [100, 3, 1, "", "running"], [100, 3, 1, "", "setName"], [100, 3, 1, "", "start"], [100, 3, 1, "", "startAll"], [100, 3, 1, "", "wait"], [100, 3, 1, "", "workDir"]], "BioSimSpace.Process.Somd": [[101, 3, 1, "", "__init__"], [101, 3, 1, "", "addArgs"], [101, 3, 1, "", "addToConfig"], [101, 3, 1, "", "clearArgs"], [101, 3, 1, "", "command"], [101, 3, 1, "", "deleteArg"], [101, 3, 1, "", "exe"], [101, 3, 1, "", "getArgString"], [101, 3, 1, "", "getArgStringList"], [101, 3, 1, "", "getArgs"], [101, 3, 1, "", "getConfig"], [101, 3, 1, "", "getCurrentGradient"], [101, 3, 1, "", "getCurrentSystem"], [101, 3, 1, "", "getCurrentTime"], [101, 3, 1, "", "getFrame"], [101, 3, 1, "", "getGradient"], [101, 3, 1, "", "getInput"], [101, 3, 1, "", "getName"], [101, 3, 1, "", "getOutput"], [101, 3, 1, "", "getPackageName"], [101, 3, 1, "", "getSeed"], [101, 3, 1, "", "getStderr"], [101, 3, 1, "", "getStdout"], [101, 3, 1, "", "getSystem"], [101, 3, 1, "", "getTime"], [101, 3, 1, "", "getTrajectory"], [101, 3, 1, "", "inputFiles"], [101, 3, 1, "", "insertArg"], [101, 3, 1, "", "isError"], [101, 3, 1, "", "isQueued"], [101, 3, 1, "", "isRunning"], [101, 3, 1, "", "kill"], [101, 3, 1, "", "resetArgs"], [101, 3, 1, "", "resetConfig"], [101, 3, 1, "", "run"], [101, 3, 1, "", "runTime"], [101, 3, 1, "", "setArg"], [101, 3, 1, "", "setArgs"], [101, 3, 1, "", "setConfig"], [101, 3, 1, "", "setName"], [101, 3, 1, "", "setSeed"], [101, 3, 1, "", "start"], [101, 3, 1, "", "stderr"], [101, 3, 1, "", "stdout"], [101, 3, 1, "", "wait"], [101, 3, 1, "", "workDir"], [101, 3, 1, "", "writeConfig"]], "BioSimSpace.Protocol": [[104, 2, 1, "", "Custom"], [105, 2, 1, "", "Equilibration"], [106, 4, 1, "", "FreeEnergy"], [107, 2, 1, "", "FreeEnergyEquilibration"], [108, 2, 1, "", "FreeEnergyMinimisation"], [109, 2, 1, "", "FreeEnergyProduction"], [110, 2, 1, "", "Metadynamics"], [111, 2, 1, "", "Minimisation"], [112, 2, 1, "", "Production"], [113, 2, 1, "", "Steering"], [114, 1, 1, "", "createProtocol"], [115, 1, 1, "", "protocols"]], "BioSimSpace.Protocol.Custom": [[104, 3, 1, "", "__init__"], [104, 3, 1, "", "getConfig"], [104, 3, 1, "", "setConfig"]], "BioSimSpace.Protocol.Equilibration": [[105, 3, 1, "", "__init__"], [105, 3, 1, "", "getEndTemperature"], [105, 3, 1, "", "getForceConstant"], [105, 3, 1, "", "getPressure"], [105, 3, 1, "", "getReportInterval"], [105, 3, 1, "", "getRestartInterval"], [105, 3, 1, "", "getRestraint"], [105, 3, 1, "", "getRunTime"], [105, 3, 1, "", "getStartTemperature"], [105, 3, 1, "", "getThermostatTimeConstant"], [105, 3, 1, "", "getTimeStep"], [105, 3, 1, "", "isConstantTemp"], [105, 3, 1, "", "restraints"], [105, 3, 1, "", "setEndTemperature"], [105, 3, 1, "", "setForceConstant"], [105, 3, 1, "", "setPressure"], [105, 3, 1, "", "setReportInterval"], [105, 3, 1, "", "setRestartInterval"], [105, 3, 1, "", "setRestraint"], [105, 3, 1, "", "setRunTime"], [105, 3, 1, "", "setStartTemperature"], [105, 3, 1, "", "setThermostatTimeConstant"], [105, 3, 1, "", "setTimeStep"]], "BioSimSpace.Protocol.FreeEnergyEquilibration": [[107, 3, 1, "", "__init__"], [107, 3, 1, "", "getEndTemperature"], [107, 3, 1, "", "getForceConstant"], [107, 3, 1, "", "getLambda"], [107, 3, 1, "", "getLambdaIndex"], [107, 3, 1, "", "getLambdaValues"], [107, 3, 1, "", "getPerturbationType"], [107, 3, 1, "", "getPressure"], [107, 3, 1, "", "getReportInterval"], [107, 3, 1, "", "getRestartInterval"], [107, 3, 1, "", "getRestraint"], [107, 3, 1, "", "getRunTime"], [107, 3, 1, "", "getStartTemperature"], [107, 3, 1, "", "getThermostatTimeConstant"], [107, 3, 1, "", "getTimeStep"], [107, 3, 1, "", "isConstantTemp"], [107, 3, 1, "", "restraints"], [107, 3, 1, "", "setEndTemperature"], [107, 3, 1, "", "setForceConstant"], [107, 3, 1, "", "setLambdaValues"], [107, 3, 1, "", "setPerturbationType"], [107, 3, 1, "", "setPressure"], [107, 3, 1, "", "setReportInterval"], [107, 3, 1, "", "setRestartInterval"], [107, 3, 1, "", "setRestraint"], [107, 3, 1, "", "setRunTime"], [107, 3, 1, "", "setStartTemperature"], [107, 3, 1, "", "setThermostatTimeConstant"], [107, 3, 1, "", "setTimeStep"]], "BioSimSpace.Protocol.FreeEnergyMinimisation": [[108, 3, 1, "", "__init__"], [108, 3, 1, "", "getForceConstant"], [108, 3, 1, "", "getLambda"], [108, 3, 1, "", "getLambdaIndex"], [108, 3, 1, "", "getLambdaValues"], [108, 3, 1, "", "getPerturbationType"], [108, 3, 1, "", "getRestraint"], [108, 3, 1, "", "getSteps"], [108, 3, 1, "", "restraints"], [108, 3, 1, "", "setForceConstant"], [108, 3, 1, "", "setLambdaValues"], [108, 3, 1, "", "setPerturbationType"], [108, 3, 1, "", "setRestraint"], [108, 3, 1, "", "setSteps"]], "BioSimSpace.Protocol.FreeEnergyProduction": [[109, 3, 1, "", "__init__"], [109, 3, 1, "", "getForceConstant"], [109, 3, 1, "", "getLambda"], [109, 3, 1, "", "getLambdaIndex"], [109, 3, 1, "", "getLambdaValues"], [109, 3, 1, "", "getPerturbationType"], [109, 3, 1, "", "getPressure"], [109, 3, 1, "", "getReportInterval"], [109, 3, 1, "", "getRestartInterval"], [109, 3, 1, "", "getRestraint"], [109, 3, 1, "", "getRunTime"], [109, 3, 1, "", "getTemperature"], [109, 3, 1, "", "getThermostatTimeConstant"], [109, 3, 1, "", "getTimeStep"], [109, 3, 1, "", "isRestart"], [109, 3, 1, "", "restraints"], [109, 3, 1, "", "setForceConstant"], [109, 3, 1, "", "setLambdaValues"], [109, 3, 1, "", "setPerturbationType"], [109, 3, 1, "", "setPressure"], [109, 3, 1, "", "setReportInterval"], [109, 3, 1, "", "setRestart"], [109, 3, 1, "", "setRestartInterval"], [109, 3, 1, "", "setRestraint"], [109, 3, 1, "", "setRunTime"], [109, 3, 1, "", "setTemperature"], [109, 3, 1, "", "setThermostatTimeConstant"], [109, 3, 1, "", "setTimeStep"]], "BioSimSpace.Protocol.Metadynamics": [[110, 3, 1, "", "__init__"], [110, 3, 1, "", "getBiasFactor"], [110, 3, 1, "", "getCollectiveVariable"], [110, 3, 1, "", "getHillFrequency"], [110, 3, 1, "", "getHillHeight"], [110, 3, 1, "", "getPressure"], [110, 3, 1, "", "getReportInterval"], [110, 3, 1, "", "getRestartInterval"], [110, 3, 1, "", "getRunTime"], [110, 3, 1, "", "getTemperature"], [110, 3, 1, "", "getTimeStep"], [110, 3, 1, "", "setBiasFactor"], [110, 3, 1, "", "setCollectiveVariable"], [110, 3, 1, "", "setHillFrequency"], [110, 3, 1, "", "setHillHeight"], [110, 3, 1, "", "setPressure"], [110, 3, 1, "", "setReportInterval"], [110, 3, 1, "", "setRestartInterval"], [110, 3, 1, "", "setRunTime"], [110, 3, 1, "", "setTemperature"], [110, 3, 1, "", "setTimeStep"]], "BioSimSpace.Protocol.Minimisation": [[111, 3, 1, "", "__init__"], [111, 3, 1, "", "getForceConstant"], [111, 3, 1, "", "getRestraint"], [111, 3, 1, "", "getSteps"], [111, 3, 1, "", "restraints"], [111, 3, 1, "", "setForceConstant"], [111, 3, 1, "", "setRestraint"], [111, 3, 1, "", "setSteps"]], "BioSimSpace.Protocol.Production": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "getForceConstant"], [112, 3, 1, "", "getPressure"], [112, 3, 1, "", "getReportInterval"], [112, 3, 1, "", "getRestartInterval"], [112, 3, 1, "", "getRestraint"], [112, 3, 1, "", "getRunTime"], [112, 3, 1, "", "getTemperature"], [112, 3, 1, "", "getThermostatTimeConstant"], [112, 3, 1, "", "getTimeStep"], [112, 3, 1, "", "isRestart"], [112, 3, 1, "", "restraints"], [112, 3, 1, "", "setForceConstant"], [112, 3, 1, "", "setPressure"], [112, 3, 1, "", "setReportInterval"], [112, 3, 1, "", "setRestart"], [112, 3, 1, "", "setRestartInterval"], [112, 3, 1, "", "setRestraint"], [112, 3, 1, "", "setRunTime"], [112, 3, 1, "", "setTemperature"], [112, 3, 1, "", "setThermostatTimeConstant"], [112, 3, 1, "", "setTimeStep"]], "BioSimSpace.Protocol.Steering": [[113, 3, 1, "", "__init__"], [113, 3, 1, "", "getCollectiveVariable"], [113, 3, 1, "", "getColvarFile"], [113, 3, 1, "", "getPressure"], [113, 3, 1, "", "getReportInterval"], [113, 3, 1, "", "getRestartInterval"], [113, 3, 1, "", "getRestraints"], [113, 3, 1, "", "getRunTime"], [113, 3, 1, "", "getSchedule"], [113, 3, 1, "", "getTemperature"], [113, 3, 1, "", "getThermostatTimeConstant"], [113, 3, 1, "", "getTimeStep"], [113, 3, 1, "", "getVerse"], [113, 3, 1, "", "setCollectiveVariable"], [113, 3, 1, "", "setColvarFile"], [113, 3, 1, "", "setPressure"], [113, 3, 1, "", "setReportInterval"], [113, 3, 1, "", "setRestartInterval"], [113, 3, 1, "", "setRestraints"], [113, 3, 1, "", "setRunTime"], [113, 3, 1, "", "setSchedule"], [113, 3, 1, "", "setTemperature"], [113, 3, 1, "", "setThermostatTimeConstant"], [113, 3, 1, "", "setTimeStep"], [113, 3, 1, "", "setVerse"]], "BioSimSpace.Solvent": [[116, 1, 1, "", "solvate"], [117, 1, 1, "", "spc"], [118, 1, 1, "", "spce"], [119, 1, 1, "", "tip3p"], [120, 1, 1, "", "tip4p"], [121, 1, 1, "", "tip5p"], [122, 1, 1, "", "waterModels"]], "BioSimSpace.Stream": [[123, 1, 1, "", "load"], [124, 1, 1, "", "save"]], "BioSimSpace.Trajectory": [[125, 2, 1, "", "Trajectory"]], "BioSimSpace.Trajectory.Trajectory": [[125, 3, 1, "", "__init__"], [125, 3, 1, "", "getFrames"], [125, 3, 1, "", "getTrajectory"], [125, 3, 1, "", "nFrames"], [125, 3, 1, "", "rmsd"]], "BioSimSpace.Types": [[126, 2, 1, "", "Angle"], [127, 2, 1, "", "Area"], [128, 2, 1, "", "Charge"], [129, 2, 1, "", "Coordinate"], [130, 2, 1, "", "Energy"], [131, 2, 1, "", "Length"], [132, 2, 1, "", "Pressure"], [133, 2, 1, "", "Temperature"], [134, 2, 1, "", "Time"], [135, 2, 1, "", "Vector"], [136, 2, 1, "", "Volume"]], "BioSimSpace.Types.Angle": [[126, 3, 1, "", "__init__"], [126, 3, 1, "", "angle"], [126, 3, 1, "", "charge"], [126, 3, 1, "", "degrees"], [126, 3, 1, "", "dimensions"], [126, 3, 1, "", "length"], [126, 3, 1, "", "mass"], [126, 3, 1, "", "quantity"], [126, 3, 1, "", "radians"], [126, 3, 1, "", "temperature"], [126, 3, 1, "", "time"], [126, 3, 1, "", "to"], [126, 3, 1, "", "unit"], [126, 3, 1, "", "value"]], "BioSimSpace.Types.Area": [[127, 3, 1, "", "__init__"], [127, 3, 1, "", "angle"], [127, 3, 1, "", "angstroms2"], [127, 3, 1, "", "charge"], [127, 3, 1, "", "dimensions"], [127, 3, 1, "", "length"], [127, 3, 1, "", "mass"], [127, 3, 1, "", "meters2"], [127, 3, 1, "", "nanometers2"], [127, 3, 1, "", "picometers2"], [127, 3, 1, "", "quantity"], [127, 3, 1, "", "temperature"], [127, 3, 1, "", "time"], [127, 3, 1, "", "to"], [127, 3, 1, "", "unit"], [127, 3, 1, "", "value"]], "BioSimSpace.Types.Charge": [[128, 3, 1, "", "__init__"], [128, 3, 1, "", "angle"], [128, 3, 1, "", "charge"], [128, 3, 1, "", "coulomb"], [128, 3, 1, "", "dimensions"], [128, 3, 1, "", "electron_charge"], [128, 3, 1, "", "length"], [128, 3, 1, "", "mass"], [128, 3, 1, "", "quantity"], [128, 3, 1, "", "temperature"], [128, 3, 1, "", "time"], [128, 3, 1, "", "to"], [128, 3, 1, "", "unit"], [128, 3, 1, "", "value"]], "BioSimSpace.Types.Coordinate": [[129, 3, 1, "", "__init__"], [129, 3, 1, "", "fromVector"], [129, 3, 1, "", "toVector"], [129, 3, 1, "", "x"], [129, 3, 1, "", "y"], [129, 3, 1, "", "z"]], "BioSimSpace.Types.Energy": [[130, 3, 1, "", "__init__"], [130, 3, 1, "", "angle"], [130, 3, 1, "", "charge"], [130, 3, 1, "", "dimensions"], [130, 3, 1, "", "kcal_per_mol"], [130, 3, 1, "", "kj_per_mol"], [130, 3, 1, "", "kt"], [130, 3, 1, "", "length"], [130, 3, 1, "", "mass"], [130, 3, 1, "", "quantity"], [130, 3, 1, "", "temperature"], [130, 3, 1, "", "time"], [130, 3, 1, "", "to"], [130, 3, 1, "", "unit"], [130, 3, 1, "", "value"]], "BioSimSpace.Types.Length": [[131, 3, 1, "", "__init__"], [131, 3, 1, "", "angle"], [131, 3, 1, "", "angstroms"], [131, 3, 1, "", "centimeters"], [131, 3, 1, "", "charge"], [131, 3, 1, "", "dimensions"], [131, 3, 1, "", "length"], [131, 3, 1, "", "mass"], [131, 3, 1, "", "meters"], [131, 3, 1, "", "millimeters"], [131, 3, 1, "", "nanometers"], [131, 3, 1, "", "picometers"], [131, 3, 1, "", "quantity"], [131, 3, 1, "", "temperature"], [131, 3, 1, "", "time"], [131, 3, 1, "", "to"], [131, 3, 1, "", "unit"], [131, 3, 1, "", "value"]], "BioSimSpace.Types.Pressure": [[132, 3, 1, "", "__init__"], [132, 3, 1, "", "angle"], [132, 3, 1, "", "atm"], [132, 3, 1, "", "bar"], [132, 3, 1, "", "charge"], [132, 3, 1, "", "dimensions"], [132, 3, 1, "", "length"], [132, 3, 1, "", "mass"], [132, 3, 1, "", "quantity"], [132, 3, 1, "", "temperature"], [132, 3, 1, "", "time"], [132, 3, 1, "", "to"], [132, 3, 1, "", "unit"], [132, 3, 1, "", "value"]], "BioSimSpace.Types.Temperature": [[133, 3, 1, "", "__init__"], [133, 3, 1, "", "angle"], [133, 3, 1, "", "celsius"], [133, 3, 1, "", "charge"], [133, 3, 1, "", "dimensions"], [133, 3, 1, "", "fahrenheit"], [133, 3, 1, "", "kelvin"], [133, 3, 1, "", "length"], [133, 3, 1, "", "mass"], [133, 3, 1, "", "quantity"], [133, 3, 1, "", "temperature"], [133, 3, 1, "", "time"], [133, 3, 1, "", "to"], [133, 3, 1, "", "unit"], [133, 3, 1, "", "value"]], "BioSimSpace.Types.Time": [[134, 3, 1, "", "__init__"], [134, 3, 1, "", "angle"], [134, 3, 1, "", "charge"], [134, 3, 1, "", "days"], [134, 3, 1, "", "dimensions"], [134, 3, 1, "", "femtoseconds"], [134, 3, 1, "", "hours"], [134, 3, 1, "", "length"], [134, 3, 1, "", "mass"], [134, 3, 1, "", "milliseconds"], [134, 3, 1, "", "minutes"], [134, 3, 1, "", "nanoseconds"], [134, 3, 1, "", "picoseconds"], [134, 3, 1, "", "quantity"], [134, 3, 1, "", "seconds"], [134, 3, 1, "", "temperature"], [134, 3, 1, "", "time"], [134, 3, 1, "", "to"], [134, 3, 1, "", "unit"], [134, 3, 1, "", "value"]], "BioSimSpace.Types.Vector": [[135, 3, 1, "", "__init__"], [135, 3, 1, "", "angle"], [135, 3, 1, "", "cross"], [135, 3, 1, "", "dot"], [135, 3, 1, "", "magnitude"], [135, 3, 1, "", "normalise"], [135, 3, 1, "", "x"], [135, 3, 1, "", "y"], [135, 3, 1, "", "z"]], "BioSimSpace.Types.Volume": [[136, 3, 1, "", "__init__"], [136, 3, 1, "", "angle"], [136, 3, 1, "", "angstroms3"], [136, 3, 1, "", "charge"], [136, 3, 1, "", "dimensions"], [136, 3, 1, "", "length"], [136, 3, 1, "", "mass"], [136, 3, 1, "", "meters3"], [136, 3, 1, "", "nanometers3"], [136, 3, 1, "", "picometers3"], [136, 3, 1, "", "quantity"], [136, 3, 1, "", "temperature"], [136, 3, 1, "", "time"], [136, 3, 1, "", "to"], [136, 3, 1, "", "unit"], [136, 3, 1, "", "value"]], "BioSimSpace.Units.Angle": [[137, 5, 1, "", "degree"], [138, 5, 1, "", "radian"]], "BioSimSpace.Units.Area": [[139, 5, 1, "", "angstrom2"], [140, 5, 1, "", "meter2"], [141, 5, 1, "", "nanometer2"], [142, 5, 1, "", "picometer2"]], "BioSimSpace.Units.Charge": [[143, 5, 1, "", "coulomb"], [144, 5, 1, "", "electron_charge"]], "BioSimSpace.Units.Energy": [[145, 5, 1, "", "kcal_per_mol"], [146, 5, 1, "", "kj_per_mol"], [147, 5, 1, "", "kt"]], "BioSimSpace.Units.Length": [[148, 5, 1, "", "angstrom"], [149, 5, 1, "", "meter"], [150, 5, 1, "", "nanometer"], [151, 5, 1, "", "picometer"]], "BioSimSpace.Units.Pressure": [[152, 5, 1, "", "atm"], [153, 5, 1, "", "bar"]], "BioSimSpace.Units.Temperature": [[154, 5, 1, "", "celsius"], [155, 5, 1, "", "fahrenheit"], [156, 5, 1, "", "kelvin"]], "BioSimSpace.Units.Time": [[157, 5, 1, "", "day"], [158, 5, 1, "", "femtosecond"], [159, 5, 1, "", "hour"], [160, 5, 1, "", "millisecond"], [161, 5, 1, "", "minute"], [162, 5, 1, "", "nanosecond"], [163, 5, 1, "", "picosecond"], [164, 5, 1, "", "second"]], "BioSimSpace.Units.Volume": [[165, 5, 1, "", "angstrom3"], [166, 5, 1, "", "meter3"], [167, 5, 1, "", "nanometer3"], [168, 5, 1, "", "picometer3"]], "BioSimSpace._Config": [[169, 2, 1, "", "Amber"], [170, 2, 1, "", "Gromacs"], [171, 2, 1, "", "Somd"]], "BioSimSpace._Config.Amber": [[169, 3, 1, "", "__init__"], [169, 3, 1, "", "createConfig"], [169, 3, 1, "", "hasBox"], [169, 3, 1, "", "hasWater"], [169, 3, 1, "", "isRestart"], [169, 3, 1, "", "reportInterval"], [169, 3, 1, "", "restartInterval"], [169, 3, 1, "", "steps"]], "BioSimSpace._Config.Gromacs": [[170, 3, 1, "", "__init__"], [170, 3, 1, "", "createConfig"], [170, 3, 1, "", "hasBox"], [170, 3, 1, "", "hasWater"], [170, 3, 1, "", "isRestart"], [170, 3, 1, "", "reportInterval"], [170, 3, 1, "", "restartInterval"], [170, 3, 1, "", "steps"]], "BioSimSpace._Config.Somd": [[171, 3, 1, "", "__init__"], [171, 3, 1, "", "createConfig"], [171, 3, 1, "", "hasBox"], [171, 3, 1, "", "hasWater"], [171, 3, 1, "", "isRestart"], [171, 3, 1, "", "reportInterval"], [171, 3, 1, "", "restartInterval"], [171, 3, 1, "", "steps"]], "BioSimSpace._Exceptions": [[172, 6, 1, "", "AlignmentError"], [173, 6, 1, "", "AnalysisError"], [174, 6, 1, "", "ConversionError"], [175, 6, 1, "", "IncompatibleError"], [176, 6, 1, "", "MissingSoftwareError"], [177, 6, 1, "", "ParameterisationError"], [178, 6, 1, "", "StreamError"], [179, 6, 1, "", "ThirdPartyError"]], "BioSimSpace._Exceptions.AlignmentError": [[172, 3, 1, "", "add_note"], [172, 3, 1, "", "with_traceback"]], "BioSimSpace._Exceptions.AnalysisError": [[173, 3, 1, "", "add_note"], [173, 3, 1, "", "with_traceback"]], "BioSimSpace._Exceptions.ConversionError": [[174, 3, 1, "", "add_note"], [174, 3, 1, "", "with_traceback"]], "BioSimSpace._Exceptions.IncompatibleError": [[175, 3, 1, "", "add_note"], [175, 3, 1, "", "with_traceback"]], "BioSimSpace._Exceptions.MissingSoftwareError": [[176, 3, 1, "", "add_note"], [176, 3, 1, "", "with_traceback"]], "BioSimSpace._Exceptions.ParameterisationError": [[177, 3, 1, "", "add_note"], [177, 3, 1, "", "with_traceback"]], "BioSimSpace._Exceptions.StreamError": [[178, 3, 1, "", "add_note"], [178, 3, 1, "", "with_traceback"]], "BioSimSpace._Exceptions.ThirdPartyError": [[179, 3, 1, "", "add_note"], [179, 3, 1, "", "with_traceback"]], "BioSimSpace._SireWrappers": [[180, 2, 1, "", "Atom"], [181, 2, 1, "", "Bond"], [182, 2, 1, "", "Molecule"], [183, 2, 1, "", "Molecules"], [184, 2, 1, "", "Residue"], [185, 2, 1, "", "SearchResult"], [186, 2, 1, "", "System"]], "BioSimSpace._SireWrappers.Atom": [[180, 3, 1, "", "__init__"], [180, 3, 1, "", "charge"], [180, 3, 1, "", "coordinates"], [180, 3, 1, "", "copy"], [180, 3, 1, "", "element"], [180, 3, 1, "", "getAxisAlignedBoundingBox"], [180, 3, 1, "", "index"], [180, 3, 1, "", "moleculeNumber"], [180, 3, 1, "", "name"], [180, 3, 1, "", "save"], [180, 3, 1, "", "smiles"], [180, 3, 1, "", "toMolecule"], [180, 3, 1, "", "translate"]], "BioSimSpace._SireWrappers.Bond": [[181, 3, 1, "", "__init__"], [181, 3, 1, "", "atom0"], [181, 3, 1, "", "atom1"], [181, 3, 1, "", "charge"], [181, 3, 1, "", "coordinates"], [181, 3, 1, "", "copy"], [181, 3, 1, "", "energy"], [181, 3, 1, "", "getAtoms"], [181, 3, 1, "", "getAxisAlignedBoundingBox"], [181, 3, 1, "", "length"], [181, 3, 1, "", "moleculeNumber"], [181, 3, 1, "", "nAtoms"], [181, 3, 1, "", "name"], [181, 3, 1, "", "save"], [181, 3, 1, "", "search"], [181, 3, 1, "", "smiles"], [181, 3, 1, "", "toMolecule"], [181, 3, 1, "", "translate"]], "BioSimSpace._SireWrappers.Molecule": [[182, 3, 1, "", "__init__"], [182, 3, 1, "", "charge"], [182, 3, 1, "", "coordinates"], [182, 3, 1, "", "copy"], [182, 3, 1, "", "extract"], [182, 3, 1, "", "getAtoms"], [182, 3, 1, "", "getAxisAlignedBoundingBox"], [182, 3, 1, "", "getResidues"], [182, 3, 1, "", "isAmberWater"], [182, 3, 1, "", "isGromacsWater"], [182, 3, 1, "", "isPerturbable"], [182, 3, 1, "", "isWater"], [182, 3, 1, "", "makeCompatibleWith"], [182, 3, 1, "", "molecule0"], [182, 3, 1, "", "molecule1"], [182, 3, 1, "", "nAtoms"], [182, 3, 1, "", "nChains"], [182, 3, 1, "", "nResidues"], [182, 3, 1, "", "number"], [182, 3, 1, "", "repartitionHydrogenMass"], [182, 3, 1, "", "save"], [182, 3, 1, "", "search"], [182, 3, 1, "", "smiles"], [182, 3, 1, "", "toSystem"], [182, 3, 1, "", "translate"]], "BioSimSpace._SireWrappers.Molecules": [[183, 3, 1, "", "__init__"], [183, 3, 1, "", "charge"], [183, 3, 1, "", "copy"], [183, 3, 1, "", "getAxisAlignedBoundingBox"], [183, 3, 1, "", "getMolecule"], [183, 3, 1, "", "nMolecules"], [183, 3, 1, "", "save"], [183, 3, 1, "", "search"], [183, 3, 1, "", "smiles"], [183, 3, 1, "", "toSystem"], [183, 3, 1, "", "translate"]], "BioSimSpace._SireWrappers.Residue": [[184, 3, 1, "", "__init__"], [184, 3, 1, "", "charge"], [184, 3, 1, "", "coordinates"], [184, 3, 1, "", "copy"], [184, 3, 1, "", "getAtoms"], [184, 3, 1, "", "getAxisAlignedBoundingBox"], [184, 3, 1, "", "index"], [184, 3, 1, "", "moleculeNumber"], [184, 3, 1, "", "nAtoms"], [184, 3, 1, "", "name"], [184, 3, 1, "", "save"], [184, 3, 1, "", "search"], [184, 3, 1, "", "smiles"], [184, 3, 1, "", "toMolecule"], [184, 3, 1, "", "translate"]], "BioSimSpace._SireWrappers.SearchResult": [[185, 3, 1, "", "__init__"], [185, 3, 1, "", "atoms"], [185, 3, 1, "", "bonds"], [185, 3, 1, "", "chains"], [185, 3, 1, "", "copy"], [185, 3, 1, "", "getResult"], [185, 3, 1, "", "molecules"], [185, 3, 1, "", "nResults"], [185, 3, 1, "", "residues"], [185, 3, 1, "", "segments"]], "BioSimSpace._SireWrappers.System": [[186, 3, 1, "", "__init__"], [186, 3, 1, "", "addMolecules"], [186, 3, 1, "", "charge"], [186, 3, 1, "", "copy"], [186, 3, 1, "", "fileFormat"], [186, 3, 1, "", "getAminoAcids"], [186, 3, 1, "", "getAtom"], [186, 3, 1, "", "getAtoms"], [186, 3, 1, "", "getAxisAlignedBoundingBox"], [186, 3, 1, "", "getBox"], [186, 3, 1, "", "getIndex"], [186, 3, 1, "", "getMolecule"], [186, 3, 1, "", "getMolecules"], [186, 3, 1, "", "getNucleotides"], [186, 3, 1, "", "getPerturbableMolecules"], [186, 3, 1, "", "getResidue"], [186, 3, 1, "", "getResidues"], [186, 3, 1, "", "getRestraintAtoms"], [186, 3, 1, "", "getWaterMolecules"], [186, 3, 1, "", "isSame"], [186, 3, 1, "", "makeWhole"], [186, 3, 1, "", "nAminoAcids"], [186, 3, 1, "", "nAtoms"], [186, 3, 1, "", "nChains"], [186, 3, 1, "", "nMolecules"], [186, 3, 1, "", "nNucleotides"], [186, 3, 1, "", "nPerturbableMolecules"], [186, 3, 1, "", "nResidues"], [186, 3, 1, "", "nWaterMolecules"], [186, 3, 1, "", "reduceBoxVectors"], [186, 3, 1, "", "removeMolecules"], [186, 3, 1, "", "removeWaterMolecules"], [186, 3, 1, "", "repartitionHydrogenMass"], [186, 3, 1, "", "rotateBoxVectors"], [186, 3, 1, "", "save"], [186, 3, 1, "", "search"], [186, 3, 1, "", "setBox"], [186, 3, 1, "", "smiles"], [186, 3, 1, "", "translate"], [186, 3, 1, "", "updateMolecule"], [186, 3, 1, "", "updateMolecules"]], "BioSimSpace._Utils": [[187, 2, 1, "", "WorkDir"], [188, 1, 1, "", "_assert_imported"], [189, 1, 1, "", "_have_imported"], [190, 1, 1, "", "_module_stub"], [191, 1, 1, "", "_try_import"], [192, 1, 1, "", "cd"], [193, 1, 1, "", "command_split"]], "BioSimSpace._Utils.WorkDir": [[187, 3, 1, "", "__init__"], [187, 3, 1, "", "is_temp_dir"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:data", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "data", "Python data"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"biosimspac": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 232, 233], "align": [0, 1, 2, 3, 4, 5, 195], "flexalign": 0, "generatenetwork": 1, "matchatom": 2, "merg": 3, "rmsdalign": 4, "viewmap": 5, "box": [6, 7, 8, 9, 10, 11, 196], "boxtyp": 6, "cubic": 7, "generateboxparamet": 8, "rhombicdodecahedronhexagon": 9, "rhombicdodecahedronsquar": 10, "truncatedoctahedron": 11, "convert": [12, 13, 14, 15, 16, 17, 18, 198], "smile": 12, "supportedformat": 13, "tobiosimspac": 15, "toopenmm": 16, "tordkit": 17, "tosir": 18, "freeenergi": [19, 20, 21, 106, 200], "rel": 19, "engin": [20, 44, 56, 103], "getdata": 21, "gatewai": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 201], "area": [22, 127, 139, 140, 141, 142, 217], "boolean": 23, "charg": [24, 128, 143, 144, 217], "energi": [25, 130, 145, 146, 147, 217, 237], "file": 26, "fileset": 27, "float": [28, 223], "integ": 29, "length": [30, 131, 148, 149, 150, 151, 217], "node": [31, 58, 59, 60, 61, 206, 230], "pressur": [32, 132, 152, 153, 217], "string": 33, "temperatur": [34, 133, 154, 155, 156, 217], "time": [35, 134, 157, 158, 159, 160, 161, 162, 163, 164, 217], "volum": [36, 136, 165, 166, 167, 168, 217], "io": [37, 38, 39, 40, 41, 42, 43, 202], "fileformat": 37, "formatinfo": 38, "readmolecul": 39, "readpdb": 40, "readperturbablesystem": 41, "savemolecul": 42, "saveperturbablesystem": 43, "md": [44, 45, 203, 209], "run": [45, 57, 60, 223, 230, 233], "metadynam": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 110, 204, 205, 239], "bound": 46, "collectivevari": [47, 48, 49, 50, 51, 52, 53, 205], "distanc": 47, "funnel": 48, "rmsd": 49, "torsion": 50, "list": [51, 59], "makefunnel": 52, "viewfunnel": 53, "grid": 54, "restraint": 55, "help": [58, 235], "setnodedirectori": 61, "notebook": [62, 63, 64, 65, 207], "view": 62, "plot": 63, "plotcontour": 64, "plotoverlapmatrix": 65, "paramet": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 208], "amberforcefield": 66, "amberproteinforcefield": 67, "ff03": 68, "ff14sb": 69, "ff99": 70, "ff99sb": 71, "ff99sbildn": 72, "forcefield": 73, "formalcharg": 74, "gaff": 75, "gaff2": 76, "openforcefield": 77, "openff_unconstrained_1_0_0": 78, "openff_unconstrained_1_0_0_rc1": 79, "openff_unconstrained_1_0_0_rc2": 80, "openff_unconstrained_1_0_1": 81, "openff_unconstrained_1_1_0": 82, "openff_unconstrained_1_1_1": 83, "openff_unconstrained_1_2_0": 84, "openff_unconstrained_1_2_1": 85, "openff_unconstrained_1_3_0": 86, "openff_unconstrained_1_3_1": 87, "openff_unconstrained_1_3_1_alpha_1": 88, "openff_unconstrained_2_0_0": 89, "openff_unconstrained_2_0_0_rc_1": 90, "openff_unconstrained_2_0_0_rc_2": 91, "openff_unconstrained_2_1_0": 92, "openff_unconstrained_2_1_0_rc_1": 93, "parameteris": 94, "process": [95, 96, 97, 98, 99, 100, 101, 102, 103, 209, 225], "amber": [95, 169, 221], "gromac": [96, 170, 221], "namd": [97, 221], "openmm": 98, "plume": 99, "processrunn": 100, "somd": [101, 171], "createprocess": 102, "protocol": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 210, 231], "custom": [104, 223], "equilibr": 105, "freeenergyequilibr": 107, "freeenergyminimis": 108, "freeenergyproduct": 109, "minimis": 111, "product": 112, "steer": 113, "createprotocol": 114, "solvent": [116, 117, 118, 119, 120, 121, 122, 213], "solvat": 116, "spc": 117, "spce": 118, "tip3p": 119, "tip4p": 120, "tip5p": 121, "watermodel": 122, "stream": [123, 124, 214], "load": 123, "save": 124, "trajectori": [125, 215], "type": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 201, 216], "angl": [126, 137, 138, 217], "coordin": 129, "vector": 135, "unit": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 217], "degre": 137, "radian": 138, "angstrom2": 139, "meter2": 140, "nanometer2": 141, "picometer2": 142, "coulomb": 143, "electron_charg": 144, "kcal_per_mol": 145, "kj_per_mol": 146, "kt": 147, "angstrom": 148, "meter": 149, "nanomet": 150, "picomet": 151, "atm": 152, "bar": 153, "celsiu": 154, "fahrenheit": 155, "kelvin": 156, "dai": 157, "femtosecond": 158, "hour": 159, "millisecond": 160, "minut": 161, "nanosecond": 162, "picosecond": 163, "second": 164, "angstrom3": 165, "meter3": 166, "nanometer3": 167, "picometer3": 168, "_config": [169, 170, 171, 197], "_except": [172, 173, 174, 175, 176, 177, 178, 179, 199], "alignmenterror": 172, "analysiserror": 173, "conversionerror": 174, "incompatibleerror": 175, "missingsoftwareerror": 176, "parameterisationerror": 177, "streamerror": 178, "thirdpartyerror": 179, "_sirewrapp": [180, 181, 182, 183, 184, 185, 186, 212], "atom": 180, "bond": 181, "molecul": [182, 183], "residu": 184, "searchresult": 185, "system": 186, "_util": [187, 188, 189, 190, 191, 192, 193, 218], "workdir": 187, "_assert_import": 188, "_have_import": 189, "_module_stub": 190, "_try_import": 191, "cd": 192, "command_split": 193, "api": 194, "document": [194, 223, 232], "function": [195, 196, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 218], "class": [197, 199, 200, 201, 204, 205, 207, 209, 210, 212, 215, 216, 218], "requir": 201, "packag": 204, "driver": 209, "multi": 209, "simul": 209, "tool": 209, "sandpit": 211, "context": 218, "manag": 218, "changelog": [219, 232], "openbiosim": [219, 232], "devel": 219, "2023": 219, "4": [219, 233], "1": [219, 233], "dec": 219, "14": 219, "0": 219, "oct": 219, "13": 219, "3": [219, 233], "aug": 219, "jun": 219, "30": 219, "2": [219, 233], "mai": 219, "15": 219, "apr": 219, "27": 219, "mar": 219, "feb": 219, "24": 219, "07": 219, "03": 219, "michellab": 219, "2022": 219, "sep": 219, "28": 219, "pre": 219, "releas": [219, 225, 226], "jan": 219, "26": 219, "2020": 219, "juli": 219, "2019": 219, "nov": 219, "22": 219, "11": 219, "02": 219, "2018": 219, "01": 219, "code": [220, 222], "conduct": 220, "our": 220, "pledg": 220, "standard": 220, "respons": 220, "scope": 220, "enforc": 220, "attribut": [220, 223], "compat": [221, 230], "style": 222, "python": [222, 223], "name": [222, 223], "modul": [222, 223], "encapsul": [222, 223], "develop": [223, 225, 226], "": 223, "guid": [223, 229, 232, 234], "sire": 223, "workflow": [223, 230], "featur": [223, 228], "branch": 223, "test": 223, "write": [223, 230, 231], "basic": 223, "point": [223, 225], "comparison": 223, "skip": 223, "parametr": 223, "except": 223, "commit": 223, "contribut": [224, 232], "creat": 225, "major": 225, "roadmap": 226, "timet": 226, "how": [226, 235], "track": 226, "wishlist": 226, "suggest": 226, "contributor": 227, "detail": [229, 232], "common": [230, 233], "languag": 230, "forward": 230, "exampl": 230, "customis": 231, "citat": 232, "doi": 232, "cite": 232, "quick": [232, 234], "start": [232, 234], "tutori": [232, 238], "support": 232, "indic": 232, "tabl": 232, "instal": 233, "No": 233, "web": 233, "browser": 233, "easi": 233, "conda": 233, "environ": 233, "either": 233, "new": 233, "copi": 233, "mambaforg": 233, "Or": 233, "us": 233, "an": 233, "exist": 233, "anaconda": 233, "miniconda": 233, "And": 233, "also": 233, "contain": 233, "harder": 233, "compil": 233, "from": 233, "sourc": 233, "5": 233, "issu": 233, "6": 233, "extern": 233, "depend": 233, "ask": 235, "crystal": 236, "water": 236, "hydrat": 237, "free": 237}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"BioSimSpace.Align.merge": [[3, "biosimspace-align-merge"]], "BioSimSpace.Convert.supportedFormats": [[13, "biosimspace-convert-supportedformats"]], "BioSimSpace.Box.cubic": [[7, "biosimspace-box-cubic"]], "BioSimSpace.Align.rmsdAlign": [[4, "biosimspace-align-rmsdalign"]], "BioSimSpace.Align.matchAtoms": [[2, "biosimspace-align-matchatoms"]], "BioSimSpace.Box.boxTypes": [[6, "biosimspace-box-boxtypes"]], "BioSimSpace.Box.truncatedOctahedron": [[11, "biosimspace-box-truncatedoctahedron"]], "BioSimSpace.Convert.smiles": [[12, "biosimspace-convert-smiles"]], "BioSimSpace.Align.flexAlign": [[0, "biosimspace-align-flexalign"]], "BioSimSpace.Box.rhombicDodecahedronHexagon": [[9, "biosimspace-box-rhombicdodecahedronhexagon"]], "BioSimSpace.Align.viewMapping": [[5, "biosimspace-align-viewmapping"]], "BioSimSpace.Convert.toOpenMM": [[16, "biosimspace-convert-toopenmm"]], "BioSimSpace.Box.rhombicDodecahedronSquare": [[10, "biosimspace-box-rhombicdodecahedronsquare"]], "BioSimSpace.Convert.toBioSimSpace": [[15, "biosimspace-convert-tobiosimspace"]], "BioSimSpace.Box.generateBoxParameters": [[8, "biosimspace-box-generateboxparameters"]], "BioSimSpace.Align.generateNetwork": [[1, "biosimspace-align-generatenetwork"]], "BioSimSpace.Convert.to": [[14, "biosimspace-convert-to"]], "BioSimSpace.Parameters.gaff": [[75, "biosimspace-parameters-gaff"]], "BioSimSpace.Parameters.gaff2": [[76, "biosimspace-parameters-gaff2"]], "BioSimSpace.Parameters.openff_unconstrained_1_0_1": [[81, "biosimspace-parameters-openff-unconstrained-1-0-1"]], "BioSimSpace.Parameters.ff99": [[70, "biosimspace-parameters-ff99"]], "BioSimSpace.Parameters.openff_unconstrained_1_0_0_RC1": [[79, "biosimspace-parameters-openff-unconstrained-1-0-0-rc1"]], "BioSimSpace.Parameters.ff14SB": [[69, "biosimspace-parameters-ff14sb"]], "BioSimSpace.Parameters.ff99SBildn": [[72, "biosimspace-parameters-ff99sbildn"]], "BioSimSpace.Parameters.openff_unconstrained_1_2_0": [[84, "biosimspace-parameters-openff-unconstrained-1-2-0"]], "BioSimSpace.Parameters.formalCharge": [[74, "biosimspace-parameters-formalcharge"]], "BioSimSpace.Parameters.ff99SB": [[71, "biosimspace-parameters-ff99sb"]], "BioSimSpace.Parameters.openff_unconstrained_1_1_0": [[82, "biosimspace-parameters-openff-unconstrained-1-1-0"]], "BioSimSpace.Parameters.openff_unconstrained_1_1_1": [[83, "biosimspace-parameters-openff-unconstrained-1-1-1"]], "BioSimSpace.Parameters.openff_unconstrained_1_0_0": [[78, "biosimspace-parameters-openff-unconstrained-1-0-0"]], "BioSimSpace.Parameters.openff_unconstrained_1_0_0_RC2": [[80, "biosimspace-parameters-openff-unconstrained-1-0-0-rc2"]], "BioSimSpace.Parameters.ff03": [[68, "biosimspace-parameters-ff03"]], "BioSimSpace.Parameters.forceFields": [[73, "biosimspace-parameters-forcefields"]], "BioSimSpace.Parameters.openForceFields": [[77, "biosimspace-parameters-openforcefields"]], "Metadynamics": [[239, "metadynamics"]], "Tutorials": [[238, "tutorials"], [232, "tutorials"]], "BioSimSpace.Metadynamics.CollectiveVariable.makeFunnel": [[52, "biosimspace-metadynamics-collectivevariable-makefunnel"]], "BioSimSpace.Node.run": [[60, "biosimspace-node-run"]], "BioSimSpace.Metadynamics.run": [[57, "biosimspace-metadynamics-run"]], "BioSimSpace.Notebook.plot": [[63, "biosimspace-notebook-plot"]], "BioSimSpace.Node.setNodeDirectory": [[61, "biosimspace-node-setnodedirectory"]], "BioSimSpace.Metadynamics.Restraint": [[55, "biosimspace-metadynamics-restraint"]], "BioSimSpace.Notebook.View": [[62, "biosimspace-notebook-view"]], "BioSimSpace.Metadynamics.CollectiveVariable.viewFunnel": [[53, "biosimspace-metadynamics-collectivevariable-viewfunnel"]], "BioSimSpace.Parameters.amberProteinForceFields": [[67, "biosimspace-parameters-amberproteinforcefields"]], "BioSimSpace.Parameters.amberForceFields": [[66, "biosimspace-parameters-amberforcefields"]], "BioSimSpace.Metadynamics.CollectiveVariable.list": [[51, "biosimspace-metadynamics-collectivevariable-list"]], "BioSimSpace.Metadynamics.Grid": [[54, "biosimspace-metadynamics-grid"]], "BioSimSpace.Metadynamics.engines": [[56, "biosimspace-metadynamics-engines"]], "BioSimSpace.Node.list": [[59, "biosimspace-node-list"]], "BioSimSpace.Notebook.plotOverlapMatrix": [[65, "biosimspace-notebook-plotoverlapmatrix"]], "BioSimSpace.Notebook.plotContour": [[64, "biosimspace-notebook-plotcontour"]], "BioSimSpace.Node.help": [[58, "biosimspace-node-help"]], "Installation": [[233, "installation"]], "1. No-installation - Run in a web browser": [[233, "no-installation-run-in-a-web-browser"]], "2. Easy installation - Run in a conda environment": [[233, "easy-installation-run-in-a-conda-environment"]], "Either\u2026 Install a new copy of mambaforge": [[233, "either-install-a-new-copy-of-mambaforge"]], "Or\u2026 Use an existing anaconda/miniconda install": [[233, "or-use-an-existing-anaconda-miniconda-install"]], "And then\u2026 Install BioSimSpace into a new environment": [[233, "and-then-install-biosimspace-into-a-new-environment"]], "3. Also easy installation - Run in a container": [[233, "also-easy-installation-run-in-a-container"]], "4. Harder installation - Compile from source": [[233, "harder-installation-compile-from-source"]], "5. Common issues": [[233, "common-issues"]], "6. External dependencies": [[233, "external-dependencies"]], "Nodes": [[230, "nodes"]], "Writing nodes": [[230, "writing-nodes"]], "Running nodes": [[230, "running-nodes"]], "Common Workflow Language": [[230, "common-workflow-language"]], "Forwards compatibility": [[230, "forwards-compatibility"]], "Examples": [[230, "examples"]], "Detailed Guides": [[229, "detailed-guides"], [232, "detailed-guides"]], "Developer\u2019s guide": [[223, "developer-s-guide"]], "Python": [[223, "python"], [222, "python"]], "Naming": [[223, "naming"], [222, "naming"]], "Modules": [[223, "modules"], [222, "modules"]], "Encapsulation": [[223, "encapsulation"], [222, "encapsulation"]], "Sire": [[223, "sire"]], "Workflow": [[223, "workflow"]], "Feature branches": [[223, "feature-branches"]], "Testing": [[223, "testing"]], "Running tests": [[223, "running-tests"]], "Writing tests": [[223, "writing-tests"]], "Basics": [[223, "basics"]], "Floating point comparisons": [[223, "floating-point-comparisons"]], "Skipping tests": [[223, "skipping-tests"]], "Parametrizing tests": [[223, "parametrizing-tests"]], "Testing exceptions": [[223, "testing-exceptions"]], "Custom attributes": [[223, "custom-attributes"]], "Documentation": [[223, "documentation"], [232, "documentation"]], "Committing": [[223, "committing"]], "Coding Style": [[222, "coding-style"]], "Features": [[228, "features"]], "Protocols": [[231, "protocols"]], "Customising protocols": [[231, "customising-protocols"]], "Writing protocols": [[231, "writing-protocols"]], "Development process": [[225, "development-process"]], "Creating releases": [[225, "creating-releases"]], "Major releases": [[225, "major-releases"]], "Point releases": [[225, "point-releases"]], "Development releases": [[225, "development-releases"]], "Crystal water": [[236, "crystal-water"]], "Hydration free energy": [[237, "hydration-free-energy"]], "Roadmap": [[226, "roadmap"]], "Release Timetable": [[226, "release-timetable"]], "How to track development": [[226, "how-to-track-development"]], "Wishlists / suggestions": [[226, "wishlists-suggestions"]], "Quick Start Guide": [[234, "quick-start-guide"]], "Compatibility": [[221, "compatibility"]], "AMBER": [[221, "amber"]], "GROMACS": [[221, "gromacs"]], "NAMD": [[221, "namd"]], "Contributors": [[227, "contributors"]], "How to ask for help": [[235, "how-to-ask-for-help"]], "Contributing": [[224, "contributing"], [232, "contributing"]], "OpenBioSim | BioSimSpace": [[232, "openbiosim-biosimspace"]], "Citation DOI for Citing BioSimSpace": [[232, "citation-doi-for-citing-biosimspace"]], "Quick Start": [[232, "quick-start"]], "Support": [[232, "support"]], "Changelog": [[232, "changelog"], [219, "changelog"]], "Indices and tables": [[232, "indices-and-tables"]], "BioSimSpace._Utils.command_split": [[193, "biosimspace-utils-command-split"]], "BioSimSpace.Box": [[196, "biosimspace-box"]], "Functions": [[196, "functions"], [198, "functions"], [195, "functions"], [202, "functions"], [203, "functions"], [200, "functions"], [209, "functions"], [205, "functions"], [218, "functions"], [210, "functions"], [206, "functions"], [214, "functions"], [204, "functions"], [213, "functions"], [208, "functions"], [207, "functions"]], "BioSimSpace._Utils.WorkDir": [[187, "biosimspace-utils-workdir"]], "BioSimSpace._Exceptions": [[199, "biosimspace-exceptions"]], "Classes": [[199, "classes"], [201, "classes"], [200, "classes"], [197, "classes"], [205, "classes"], [218, "classes"], [210, "classes"], [216, "classes"], [212, "classes"], [204, "classes"], [215, "classes"], [207, "classes"]], "BioSimSpace.Convert": [[198, "biosimspace-convert"]], "BioSimSpace.Align": [[195, "biosimspace-align"]], "BioSimSpace.IO": [[202, "biosimspace-io"]], "BioSimSpace._Utils._module_stub": [[190, "biosimspace-utils-module-stub"]], "BioSimSpace._Utils.cd": [[192, "biosimspace-utils-cd"]], "BioSimSpace._Utils._assert_imported": [[188, "biosimspace-utils-assert-imported"]], "BioSimSpace.Gateway": [[201, "biosimspace-gateway"]], "Requirement types": [[201, "requirement-types"]], "BioSimSpace.MD": [[203, "biosimspace-md"]], "API Documentation": [[194, "api-documentation"]], "BioSimSpace.FreeEnergy": [[200, "biosimspace-freeenergy"]], "BioSimSpace._Config": [[197, "biosimspace-config"]], "BioSimSpace._Utils._have_imported": [[189, "biosimspace-utils-have-imported"]], "BioSimSpace._Utils._try_import": [[191, "biosimspace-utils-try-import"]], "BioSimSpace.Process": [[209, "biosimspace-process"]], "MD driver classes": [[209, "md-driver-classes"]], "Multi process simulation tools": [[209, "multi-process-simulation-tools"]], "BioSimSpace.Metadynamics.CollectiveVariable": [[205, "biosimspace-metadynamics-collectivevariable"]], "Code of Conduct": [[220, "code-of-conduct"]], "Our Pledge": [[220, "our-pledge"]], "Our Standards": [[220, "our-standards"]], "Our Responsibilities": [[220, "our-responsibilities"]], "Scope": [[220, "scope"]], "Enforcement": [[220, "enforcement"]], "Attribution": [[220, "attribution"]], "BioSimSpace._Utils": [[218, "biosimspace-utils"]], "Context managers": [[218, "context-managers"]], "BioSimSpace.Protocol": [[210, "biosimspace-protocol"]], "BioSimSpace.Node": [[206, "biosimspace-node"]], "BioSimSpace.Stream": [[214, "biosimspace-stream"]], "BioSimSpace.Sandpit": [[211, "biosimspace-sandpit"]], "OpenBioSim": [[219, "openbiosim"]], "Devel": [[219, "devel"]], "2023.4.1 - Dec 14 2023": [[219, "dec-14-2023"]], "2023.4.0 - Oct 13 2023": [[219, "oct-13-2023"]], "2023.3.1 - Aug 14 2023": [[219, "aug-14-2023"]], "2023.3.0 - Jun 30 2023": [[219, "jun-30-2023"]], "2023.2.2 - May 15 2023": [[219, "may-15-2023"]], "2023.2.1 - Apr 27 2023": [[219, "apr-27-2023"]], "2023.2.0 - Mar 30 2023": [[219, "mar-30-2023"]], "2023.1.2 - Feb 24 2023": [[219, "feb-24-2023"]], "2023.1.1 - Feb 07 2023": [[219, "feb-07-2023"]], "2023.1.0 - Feb 03 2023": [[219, "feb-03-2023"]], "Michellab": [[219, "michellab"]], "2022.3.0 - Sep 28 2022 (Pre-release)": [[219, "sep-28-2022-pre-release"]], "2022.2.1 - Mar 30 2022": [[219, "mar-30-2022"]], "2022.2.0 - Mar 24 2022": [[219, "mar-24-2022"]], "2022.1.0 - Jan 26 2022": [[219, "jan-26-2022"]], "2020.1.0 - July 28 2020": [[219, "july-28-2020"]], "2019.3.0 - Nov 22 2019": [[219, "nov-22-2019"]], "2019.2.0 - Sep 11 2019": [[219, "sep-11-2019"]], "2019.1.0 - May 02 2019": [[219, "may-02-2019"]], "2018.1.1 - May 02 2018": [[219, "may-02-2018"]], "2018.1.0 - May 01 2018": [[219, "may-01-2018"]], "BioSimSpace.Types": [[216, "biosimspace-types"]], "BioSimSpace.Units": [[217, "biosimspace-units"]], "Length units": [[217, "length-units"]], "Area units": [[217, "area-units"]], "Angle units": [[217, "angle-units"]], "Volume units": [[217, "volume-units"]], "Charge units": [[217, "charge-units"]], "Energy units": [[217, "energy-units"]], "Pressure units": [[217, "pressure-units"]], "Temperature units": [[217, "temperature-units"]], "Time units": [[217, "time-units"]], "BioSimSpace._SireWrappers": [[212, "biosimspace-sirewrappers"]], "BioSimSpace.Metadynamics": [[204, "biosimspace-metadynamics"]], "Packages": [[204, "packages"]], "BioSimSpace.Solvent": [[213, "biosimspace-solvent"]], "BioSimSpace.Parameters": [[208, "biosimspace-parameters"]], "BioSimSpace.Trajectory": [[215, "biosimspace-trajectory"]], "BioSimSpace.Notebook": [[207, "biosimspace-notebook"]], "BioSimSpace.Units.Time.femtosecond": [[158, "biosimspace-units-time-femtosecond"]], "BioSimSpace.Units.Time.hour": [[159, "biosimspace-units-time-hour"]], "BioSimSpace.Units.Time.picosecond": [[163, "biosimspace-units-time-picosecond"]], "BioSimSpace.Units.Volume.meter3": [[166, "biosimspace-units-volume-meter3"]], "BioSimSpace.Units.Time.minute": [[161, "biosimspace-units-time-minute"]], "BioSimSpace.Units.Time.millisecond": [[160, "biosimspace-units-time-millisecond"]], "BioSimSpace.Units.Pressure.bar": [[153, "biosimspace-units-pressure-bar"]], "BioSimSpace.Units.Volume.nanometer3": [[167, "biosimspace-units-volume-nanometer3"]], "BioSimSpace.Units.Temperature.fahrenheit": [[155, "biosimspace-units-temperature-fahrenheit"]], "BioSimSpace.Units.Temperature.kelvin": [[156, "biosimspace-units-temperature-kelvin"]], "BioSimSpace.Units.Time.nanosecond": [[162, "biosimspace-units-time-nanosecond"]], "BioSimSpace.Units.Volume.picometer3": [[168, "biosimspace-units-volume-picometer3"]], "BioSimSpace.Units.Time.day": [[157, "biosimspace-units-time-day"]], "BioSimSpace.Units.Volume.angstrom3": [[165, "biosimspace-units-volume-angstrom3"]], "BioSimSpace.Units.Time.second": [[164, "biosimspace-units-time-second"]], "BioSimSpace._Config.Amber": [[169, "biosimspace-config-amber"]], "BioSimSpace.Units.Temperature.celsius": [[154, "biosimspace-units-temperature-celsius"]], "BioSimSpace.Metadynamics.CollectiveVariable.Torsion": [[50, "biosimspace-metadynamics-collectivevariable-torsion"]], "BioSimSpace.IO.savePerturbableSystem": [[43, "biosimspace-io-saveperturbablesystem"]], "BioSimSpace.IO.readPDB": [[40, "biosimspace-io-readpdb"]], "BioSimSpace.IO.formatInfo": [[38, "biosimspace-io-formatinfo"]], "BioSimSpace.Metadynamics.CollectiveVariable.Funnel": [[48, "biosimspace-metadynamics-collectivevariable-funnel"]], "BioSimSpace.Gateway.Time": [[35, "biosimspace-gateway-time"]], "BioSimSpace.Metadynamics.CollectiveVariable.Distance": [[47, "biosimspace-metadynamics-collectivevariable-distance"]], "BioSimSpace.IO.readMolecules": [[39, "biosimspace-io-readmolecules"]], "BioSimSpace.Metadynamics.CollectiveVariable.RMSD": [[49, "biosimspace-metadynamics-collectivevariable-rmsd"]], "BioSimSpace.MD.run": [[45, "biosimspace-md-run"]], "BioSimSpace.Gateway.Temperature": [[34, "biosimspace-gateway-temperature"]], "BioSimSpace.IO.saveMolecules": [[42, "biosimspace-io-savemolecules"]], "BioSimSpace.Metadynamics.Bound": [[46, "biosimspace-metadynamics-bound"]], "BioSimSpace.IO.readPerturbableSystem": [[41, "biosimspace-io-readperturbablesystem"]], "BioSimSpace.Gateway.Volume": [[36, "biosimspace-gateway-volume"]], "BioSimSpace.IO.fileFormats": [[37, "biosimspace-io-fileformats"]], "BioSimSpace.MD.engines": [[44, "biosimspace-md-engines"]], "BioSimSpace.Convert.toRDKit": [[17, "biosimspace-convert-tordkit"]], "BioSimSpace.FreeEnergy.engines": [[20, "biosimspace-freeenergy-engines"]], "BioSimSpace.Gateway.Charge": [[24, "biosimspace-gateway-charge"]], "BioSimSpace.FreeEnergy.getData": [[21, "biosimspace-freeenergy-getdata"]], "BioSimSpace.Gateway.Float": [[28, "biosimspace-gateway-float"]], "BioSimSpace.Gateway.Area": [[22, "biosimspace-gateway-area"]], "BioSimSpace.Gateway.File": [[26, "biosimspace-gateway-file"]], "BioSimSpace.Gateway.Pressure": [[32, "biosimspace-gateway-pressure"]], "BioSimSpace.Gateway.String": [[33, "biosimspace-gateway-string"]], "BioSimSpace.Convert.toSire": [[18, "biosimspace-convert-tosire"]], "BioSimSpace.Gateway.Energy": [[25, "biosimspace-gateway-energy"]], "BioSimSpace.Gateway.FileSet": [[27, "biosimspace-gateway-fileset"]], "BioSimSpace.Gateway.Length": [[30, "biosimspace-gateway-length"]], "BioSimSpace.Gateway.Integer": [[29, "biosimspace-gateway-integer"]], "BioSimSpace.Gateway.Node": [[31, "biosimspace-gateway-node"]], "BioSimSpace.FreeEnergy.Relative": [[19, "biosimspace-freeenergy-relative"]], "BioSimSpace.Gateway.Boolean": [[23, "biosimspace-gateway-boolean"]], "BioSimSpace.Units.Angle.radian": [[138, "biosimspace-units-angle-radian"]], "BioSimSpace.Units.Area.picometer2": [[142, "biosimspace-units-area-picometer2"]], "BioSimSpace.Units.Angle.degree": [[137, "biosimspace-units-angle-degree"]], "BioSimSpace.Units.Charge.electron_charge": [[144, "biosimspace-units-charge-electron-charge"]], "BioSimSpace.Units.Energy.kj_per_mol": [[146, "biosimspace-units-energy-kj-per-mol"]], "BioSimSpace.Units.Energy.kt": [[147, "biosimspace-units-energy-kt"]], "BioSimSpace.Units.Length.meter": [[149, "biosimspace-units-length-meter"]], "BioSimSpace.Units.Length.nanometer": [[150, "biosimspace-units-length-nanometer"]], "BioSimSpace.Units.Energy.kcal_per_mol": [[145, "biosimspace-units-energy-kcal-per-mol"]], "BioSimSpace.Units.Area.meter2": [[140, "biosimspace-units-area-meter2"]], "BioSimSpace.Units.Area.nanometer2": [[141, "biosimspace-units-area-nanometer2"]], "BioSimSpace.Units.Area.angstrom2": [[139, "biosimspace-units-area-angstrom2"]], "BioSimSpace.Units.Length.picometer": [[151, "biosimspace-units-length-picometer"]], "BioSimSpace.Units.Charge.coulomb": [[143, "biosimspace-units-charge-coulomb"]], "BioSimSpace.Types.Volume": [[136, "biosimspace-types-volume"]], "BioSimSpace.Units.Length.angstrom": [[148, "biosimspace-units-length-angstrom"]], "BioSimSpace.Units.Pressure.atm": [[152, "biosimspace-units-pressure-atm"]], "BioSimSpace.Types.Temperature": [[133, "biosimspace-types-temperature"]], "BioSimSpace.Solvent.tip5p": [[121, "biosimspace-solvent-tip5p"]], "BioSimSpace.Types.Area": [[127, "biosimspace-types-area"]], "BioSimSpace.Types.Time": [[134, "biosimspace-types-time"]], "BioSimSpace.Stream.load": [[123, "biosimspace-stream-load"]], "BioSimSpace.Solvent.tip3p": [[119, "biosimspace-solvent-tip3p"]], "BioSimSpace.Trajectory.Trajectory": [[125, "biosimspace-trajectory-trajectory"]], "BioSimSpace.Types.Angle": [[126, "biosimspace-types-angle"]], "BioSimSpace.Types.Energy": [[130, "biosimspace-types-energy"]], "BioSimSpace.Types.Vector": [[135, "biosimspace-types-vector"]], "BioSimSpace.Solvent.tip4p": [[120, "biosimspace-solvent-tip4p"]], "BioSimSpace.Types.Charge": [[128, "biosimspace-types-charge"]], "BioSimSpace.Types.Coordinate": [[129, "biosimspace-types-coordinate"]], "BioSimSpace.Stream.save": [[124, "biosimspace-stream-save"]], "BioSimSpace.Solvent.waterModels": [[122, "biosimspace-solvent-watermodels"]], "BioSimSpace.Types.Pressure": [[132, "biosimspace-types-pressure"]], "BioSimSpace.Types.Length": [[131, "biosimspace-types-length"]], "BioSimSpace.Protocol.FreeEnergyProduction": [[109, "biosimspace-protocol-freeenergyproduction"]], "BioSimSpace.Solvent.spc": [[117, "biosimspace-solvent-spc"]], "BioSimSpace.Protocol.FreeEnergyEquilibration": [[107, "biosimspace-protocol-freeenergyequilibration"]], "BioSimSpace.Protocol.protocols": [[115, "biosimspace-protocol-protocols"]], "BioSimSpace.Process.engines": [[103, "biosimspace-process-engines"]], "BioSimSpace.Solvent.spce": [[118, "biosimspace-solvent-spce"]], "BioSimSpace.Solvent.solvate": [[116, "biosimspace-solvent-solvate"]], "BioSimSpace.Protocol.Custom": [[104, "biosimspace-protocol-custom"]], "BioSimSpace.Protocol.Steering": [[113, "biosimspace-protocol-steering"]], "BioSimSpace.Protocol.Metadynamics": [[110, "biosimspace-protocol-metadynamics"]], "BioSimSpace.Protocol.FreeEnergyMinimisation": [[108, "biosimspace-protocol-freeenergyminimisation"]], "BioSimSpace.Protocol.createProtocol": [[114, "biosimspace-protocol-createprotocol"]], "BioSimSpace.Process.createProcess": [[102, "biosimspace-process-createprocess"]], "BioSimSpace.Protocol.Production": [[112, "biosimspace-protocol-production"]], "BioSimSpace.Protocol.FreeEnergy": [[106, "biosimspace-protocol-freeenergy"]], "BioSimSpace.Protocol.Equilibration": [[105, "biosimspace-protocol-equilibration"]], "BioSimSpace.Protocol.Minimisation": [[111, "biosimspace-protocol-minimisation"]], "BioSimSpace._SireWrappers.Atom": [[180, "biosimspace-sirewrappers-atom"]], "BioSimSpace._Exceptions.ParameterisationError": [[177, "biosimspace-exceptions-parameterisationerror"]], "BioSimSpace._SireWrappers.SearchResult": [[185, "biosimspace-sirewrappers-searchresult"]], "BioSimSpace._SireWrappers.Bond": [[181, "biosimspace-sirewrappers-bond"]], "BioSimSpace._SireWrappers.Molecules": [[183, "biosimspace-sirewrappers-molecules"]], "BioSimSpace._Exceptions.IncompatibleError": [[175, "biosimspace-exceptions-incompatibleerror"]], "BioSimSpace._Config.Somd": [[171, "biosimspace-config-somd"]], "BioSimSpace._Config.Gromacs": [[170, "biosimspace-config-gromacs"]], "BioSimSpace._Exceptions.AnalysisError": [[173, "biosimspace-exceptions-analysiserror"]], "BioSimSpace._Exceptions.MissingSoftwareError": [[176, "biosimspace-exceptions-missingsoftwareerror"]], "BioSimSpace._SireWrappers.Residue": [[184, "biosimspace-sirewrappers-residue"]], "BioSimSpace._Exceptions.ConversionError": [[174, "biosimspace-exceptions-conversionerror"]], "BioSimSpace._Exceptions.ThirdPartyError": [[179, "biosimspace-exceptions-thirdpartyerror"]], "BioSimSpace._Exceptions.StreamError": [[178, "biosimspace-exceptions-streamerror"]], "BioSimSpace._SireWrappers.System": [[186, "biosimspace-sirewrappers-system"]], "BioSimSpace._Exceptions.AlignmentError": [[172, "biosimspace-exceptions-alignmenterror"]], "BioSimSpace._SireWrappers.Molecule": [[182, "biosimspace-sirewrappers-molecule"]], "BioSimSpace.Parameters.openff_unconstrained_2_0_0": [[89, "biosimspace-parameters-openff-unconstrained-2-0-0"]], "BioSimSpace.Parameters.openff_unconstrained_1_3_0": [[86, "biosimspace-parameters-openff-unconstrained-1-3-0"]], "BioSimSpace.Parameters.openff_unconstrained_1_2_1": [[85, "biosimspace-parameters-openff-unconstrained-1-2-1"]], "BioSimSpace.Parameters.openff_unconstrained_1_3_1": [[87, "biosimspace-parameters-openff-unconstrained-1-3-1"]], "BioSimSpace.Process.Gromacs": [[96, "biosimspace-process-gromacs"]], "BioSimSpace.Parameters.openff_unconstrained_2_0_0_rc_1": [[90, "biosimspace-parameters-openff-unconstrained-2-0-0-rc-1"]], "BioSimSpace.Process.Plumed": [[99, "biosimspace-process-plumed"]], "BioSimSpace.Parameters.openff_unconstrained_2_1_0_rc_1": [[93, "biosimspace-parameters-openff-unconstrained-2-1-0-rc-1"]], "BioSimSpace.Parameters.parameterise": [[94, "biosimspace-parameters-parameterise"]], "BioSimSpace.Parameters.openff_unconstrained_1_3_1_alpha_1": [[88, "biosimspace-parameters-openff-unconstrained-1-3-1-alpha-1"]], "BioSimSpace.Process.Somd": [[101, "biosimspace-process-somd"]], "BioSimSpace.Parameters.openff_unconstrained_2_0_0_rc_2": [[91, "biosimspace-parameters-openff-unconstrained-2-0-0-rc-2"]], "BioSimSpace.Parameters.openff_unconstrained_2_1_0": [[92, "biosimspace-parameters-openff-unconstrained-2-1-0"]], "BioSimSpace.Process.Namd": [[97, "biosimspace-process-namd"]], "BioSimSpace.Process.OpenMM": [[98, "biosimspace-process-openmm"]], "BioSimSpace.Process.Amber": [[95, "biosimspace-process-amber"]], "BioSimSpace.Process.ProcessRunner": [[100, "biosimspace-process-processrunner"]]}, "indexentries": {"flexalign() (in module biosimspace.align)": [[0, "BioSimSpace.Align.flexAlign"]], "generatenetwork() (in module biosimspace.align)": [[1, "BioSimSpace.Align.generateNetwork"]], "matchatoms() (in module biosimspace.align)": [[2, "BioSimSpace.Align.matchAtoms"]], "merge() (in module biosimspace.align)": [[3, "BioSimSpace.Align.merge"]], "rmsdalign() (in module biosimspace.align)": [[4, "BioSimSpace.Align.rmsdAlign"]], "viewmapping() (in module biosimspace.align)": [[5, "BioSimSpace.Align.viewMapping"]], "boxtypes() (in module biosimspace.box)": [[6, "BioSimSpace.Box.boxTypes"]], "cubic() (in module biosimspace.box)": [[7, "BioSimSpace.Box.cubic"]], "generateboxparameters() (in module biosimspace.box)": [[8, "BioSimSpace.Box.generateBoxParameters"]], "rhombicdodecahedronhexagon() (in module biosimspace.box)": [[9, "BioSimSpace.Box.rhombicDodecahedronHexagon"]], "rhombicdodecahedronsquare() (in module biosimspace.box)": [[10, "BioSimSpace.Box.rhombicDodecahedronSquare"]], "truncatedoctahedron() (in module biosimspace.box)": [[11, "BioSimSpace.Box.truncatedOctahedron"]], "smiles() (in module biosimspace.convert)": [[12, "BioSimSpace.Convert.smiles"]], "supportedformats() (in module biosimspace.convert)": [[13, "BioSimSpace.Convert.supportedFormats"]], "to() (in module biosimspace.convert)": [[14, "BioSimSpace.Convert.to"]], "tobiosimspace() (in module biosimspace.convert)": [[15, "BioSimSpace.Convert.toBioSimSpace"]], "toopenmm() (in module biosimspace.convert)": [[16, "BioSimSpace.Convert.toOpenMM"]], "tordkit() (in module biosimspace.convert)": [[17, "BioSimSpace.Convert.toRDKit"]], "tosire() (in module biosimspace.convert)": [[18, "BioSimSpace.Convert.toSire"]], "relative (class in biosimspace.freeenergy)": [[19, "BioSimSpace.FreeEnergy.Relative"]], "__init__() (biosimspace.freeenergy.relative method)": [[19, "BioSimSpace.FreeEnergy.Relative.__init__"]], "analyse() (biosimspace.freeenergy.relative static method)": [[19, "BioSimSpace.FreeEnergy.Relative.analyse"]], "checkoverlap() (biosimspace.freeenergy.relative static method)": [[19, "BioSimSpace.FreeEnergy.Relative.checkOverlap"]], "difference() (biosimspace.freeenergy.relative static method)": [[19, "BioSimSpace.FreeEnergy.Relative.difference"]], "getdata() (biosimspace.freeenergy.relative method)": [[19, "BioSimSpace.FreeEnergy.Relative.getData"]], "kill() (biosimspace.freeenergy.relative method)": [[19, "BioSimSpace.FreeEnergy.Relative.kill"]], "killall() (biosimspace.freeenergy.relative method)": [[19, "BioSimSpace.FreeEnergy.Relative.killAll"]], "run() (biosimspace.freeenergy.relative method)": [[19, "BioSimSpace.FreeEnergy.Relative.run"]], "wait() (biosimspace.freeenergy.relative method)": [[19, "BioSimSpace.FreeEnergy.Relative.wait"]], "workdir() (biosimspace.freeenergy.relative method)": [[19, "BioSimSpace.FreeEnergy.Relative.workDir"]], "engines() (in module biosimspace.freeenergy)": [[20, "BioSimSpace.FreeEnergy.engines"]], "getdata() (in module biosimspace.freeenergy)": [[21, "BioSimSpace.FreeEnergy.getData"]], "area (class in biosimspace.gateway)": [[22, "BioSimSpace.Gateway.Area"]], "__init__() (biosimspace.gateway.area method)": [[22, "BioSimSpace.Gateway.Area.__init__"]], "getallowedvalues() (biosimspace.gateway.area method)": [[22, "BioSimSpace.Gateway.Area.getAllowedValues"]], "getargtype() (biosimspace.gateway.area method)": [[22, "BioSimSpace.Gateway.Area.getArgType"]], "getdefault() (biosimspace.gateway.area method)": [[22, "BioSimSpace.Gateway.Area.getDefault"]], "gethelp() (biosimspace.gateway.area method)": [[22, "BioSimSpace.Gateway.Area.getHelp"]], "getmax() (biosimspace.gateway.area method)": [[22, "BioSimSpace.Gateway.Area.getMax"]], "getmin() (biosimspace.gateway.area method)": [[22, "BioSimSpace.Gateway.Area.getMin"]], "getunit() (biosimspace.gateway.area method)": [[22, "BioSimSpace.Gateway.Area.getUnit"]], "getvalue() (biosimspace.gateway.area method)": [[22, "BioSimSpace.Gateway.Area.getValue"]], "ismulti() (biosimspace.gateway.area method)": [[22, "BioSimSpace.Gateway.Area.isMulti"]], "isoptional() (biosimspace.gateway.area method)": [[22, "BioSimSpace.Gateway.Area.isOptional"]], "setvalue() (biosimspace.gateway.area method)": [[22, "BioSimSpace.Gateway.Area.setValue"]], "boolean (class in biosimspace.gateway)": [[23, "BioSimSpace.Gateway.Boolean"]], "__init__() (biosimspace.gateway.boolean method)": [[23, "BioSimSpace.Gateway.Boolean.__init__"]], "getallowedvalues() (biosimspace.gateway.boolean method)": [[23, "BioSimSpace.Gateway.Boolean.getAllowedValues"]], "getargtype() (biosimspace.gateway.boolean method)": [[23, "BioSimSpace.Gateway.Boolean.getArgType"]], "getdefault() (biosimspace.gateway.boolean method)": [[23, "BioSimSpace.Gateway.Boolean.getDefault"]], "gethelp() (biosimspace.gateway.boolean method)": [[23, "BioSimSpace.Gateway.Boolean.getHelp"]], "getmax() (biosimspace.gateway.boolean method)": [[23, "BioSimSpace.Gateway.Boolean.getMax"]], "getmin() (biosimspace.gateway.boolean method)": [[23, "BioSimSpace.Gateway.Boolean.getMin"]], "getunit() (biosimspace.gateway.boolean method)": [[23, "BioSimSpace.Gateway.Boolean.getUnit"]], "getvalue() (biosimspace.gateway.boolean method)": [[23, "BioSimSpace.Gateway.Boolean.getValue"]], "ismulti() (biosimspace.gateway.boolean method)": [[23, "BioSimSpace.Gateway.Boolean.isMulti"]], "isoptional() (biosimspace.gateway.boolean method)": [[23, "BioSimSpace.Gateway.Boolean.isOptional"]], "setvalue() (biosimspace.gateway.boolean method)": [[23, "BioSimSpace.Gateway.Boolean.setValue"]], "charge (class in biosimspace.gateway)": [[24, "BioSimSpace.Gateway.Charge"]], "__init__() (biosimspace.gateway.charge method)": [[24, "BioSimSpace.Gateway.Charge.__init__"]], "getallowedvalues() (biosimspace.gateway.charge method)": [[24, "BioSimSpace.Gateway.Charge.getAllowedValues"]], "getargtype() (biosimspace.gateway.charge method)": [[24, "BioSimSpace.Gateway.Charge.getArgType"]], "getdefault() (biosimspace.gateway.charge method)": [[24, "BioSimSpace.Gateway.Charge.getDefault"]], "gethelp() (biosimspace.gateway.charge method)": [[24, "BioSimSpace.Gateway.Charge.getHelp"]], "getmax() (biosimspace.gateway.charge method)": [[24, "BioSimSpace.Gateway.Charge.getMax"]], "getmin() (biosimspace.gateway.charge method)": [[24, "BioSimSpace.Gateway.Charge.getMin"]], "getunit() (biosimspace.gateway.charge method)": [[24, "BioSimSpace.Gateway.Charge.getUnit"]], "getvalue() (biosimspace.gateway.charge method)": [[24, "BioSimSpace.Gateway.Charge.getValue"]], "ismulti() (biosimspace.gateway.charge method)": [[24, "BioSimSpace.Gateway.Charge.isMulti"]], "isoptional() (biosimspace.gateway.charge method)": [[24, "BioSimSpace.Gateway.Charge.isOptional"]], "setvalue() (biosimspace.gateway.charge method)": [[24, "BioSimSpace.Gateway.Charge.setValue"]], "energy (class in biosimspace.gateway)": [[25, "BioSimSpace.Gateway.Energy"]], "__init__() (biosimspace.gateway.energy method)": [[25, "BioSimSpace.Gateway.Energy.__init__"]], "getallowedvalues() (biosimspace.gateway.energy method)": [[25, "BioSimSpace.Gateway.Energy.getAllowedValues"]], "getargtype() (biosimspace.gateway.energy method)": [[25, "BioSimSpace.Gateway.Energy.getArgType"]], "getdefault() (biosimspace.gateway.energy method)": [[25, "BioSimSpace.Gateway.Energy.getDefault"]], "gethelp() (biosimspace.gateway.energy method)": [[25, "BioSimSpace.Gateway.Energy.getHelp"]], "getmax() (biosimspace.gateway.energy method)": [[25, "BioSimSpace.Gateway.Energy.getMax"]], "getmin() (biosimspace.gateway.energy method)": [[25, "BioSimSpace.Gateway.Energy.getMin"]], "getunit() (biosimspace.gateway.energy method)": [[25, "BioSimSpace.Gateway.Energy.getUnit"]], "getvalue() (biosimspace.gateway.energy method)": [[25, "BioSimSpace.Gateway.Energy.getValue"]], "ismulti() (biosimspace.gateway.energy method)": [[25, "BioSimSpace.Gateway.Energy.isMulti"]], "isoptional() (biosimspace.gateway.energy method)": [[25, "BioSimSpace.Gateway.Energy.isOptional"]], "setvalue() (biosimspace.gateway.energy method)": [[25, "BioSimSpace.Gateway.Energy.setValue"]], "file (class in biosimspace.gateway)": [[26, "BioSimSpace.Gateway.File"]], "__init__() (biosimspace.gateway.file method)": [[26, "BioSimSpace.Gateway.File.__init__"]], "getallowedvalues() (biosimspace.gateway.file method)": [[26, "BioSimSpace.Gateway.File.getAllowedValues"]], "getargtype() (biosimspace.gateway.file method)": [[26, "BioSimSpace.Gateway.File.getArgType"]], "getdefault() (biosimspace.gateway.file method)": [[26, "BioSimSpace.Gateway.File.getDefault"]], "gethelp() (biosimspace.gateway.file method)": [[26, "BioSimSpace.Gateway.File.getHelp"]], "getmax() (biosimspace.gateway.file method)": [[26, "BioSimSpace.Gateway.File.getMax"]], "getmin() (biosimspace.gateway.file method)": [[26, "BioSimSpace.Gateway.File.getMin"]], "getunit() (biosimspace.gateway.file method)": [[26, "BioSimSpace.Gateway.File.getUnit"]], "getvalue() (biosimspace.gateway.file method)": [[26, "BioSimSpace.Gateway.File.getValue"]], "ismulti() (biosimspace.gateway.file method)": [[26, "BioSimSpace.Gateway.File.isMulti"]], "isoptional() (biosimspace.gateway.file method)": [[26, "BioSimSpace.Gateway.File.isOptional"]], "setvalue() (biosimspace.gateway.file method)": [[26, "BioSimSpace.Gateway.File.setValue"]], "fileset (class in biosimspace.gateway)": [[27, "BioSimSpace.Gateway.FileSet"]], "__init__() (biosimspace.gateway.fileset method)": [[27, "BioSimSpace.Gateway.FileSet.__init__"]], "getallowedvalues() (biosimspace.gateway.fileset method)": [[27, "BioSimSpace.Gateway.FileSet.getAllowedValues"]], "getargtype() (biosimspace.gateway.fileset method)": [[27, "BioSimSpace.Gateway.FileSet.getArgType"]], "getdefault() (biosimspace.gateway.fileset method)": [[27, "BioSimSpace.Gateway.FileSet.getDefault"]], "gethelp() (biosimspace.gateway.fileset method)": [[27, "BioSimSpace.Gateway.FileSet.getHelp"]], "getmax() (biosimspace.gateway.fileset method)": [[27, "BioSimSpace.Gateway.FileSet.getMax"]], "getmin() (biosimspace.gateway.fileset method)": [[27, "BioSimSpace.Gateway.FileSet.getMin"]], "getunit() (biosimspace.gateway.fileset method)": [[27, "BioSimSpace.Gateway.FileSet.getUnit"]], "getvalue() (biosimspace.gateway.fileset method)": [[27, "BioSimSpace.Gateway.FileSet.getValue"]], "ismulti() (biosimspace.gateway.fileset method)": [[27, "BioSimSpace.Gateway.FileSet.isMulti"]], "isoptional() (biosimspace.gateway.fileset method)": [[27, "BioSimSpace.Gateway.FileSet.isOptional"]], "setvalue() (biosimspace.gateway.fileset method)": [[27, "BioSimSpace.Gateway.FileSet.setValue"]], "float (class in biosimspace.gateway)": [[28, "BioSimSpace.Gateway.Float"]], "__init__() (biosimspace.gateway.float method)": [[28, "BioSimSpace.Gateway.Float.__init__"]], "getallowedvalues() (biosimspace.gateway.float method)": [[28, "BioSimSpace.Gateway.Float.getAllowedValues"]], "getargtype() (biosimspace.gateway.float method)": [[28, "BioSimSpace.Gateway.Float.getArgType"]], "getdefault() (biosimspace.gateway.float method)": [[28, "BioSimSpace.Gateway.Float.getDefault"]], "gethelp() (biosimspace.gateway.float method)": [[28, "BioSimSpace.Gateway.Float.getHelp"]], "getmax() (biosimspace.gateway.float method)": [[28, "BioSimSpace.Gateway.Float.getMax"]], "getmin() (biosimspace.gateway.float method)": [[28, "BioSimSpace.Gateway.Float.getMin"]], "getunit() (biosimspace.gateway.float method)": [[28, "BioSimSpace.Gateway.Float.getUnit"]], "getvalue() (biosimspace.gateway.float method)": [[28, "BioSimSpace.Gateway.Float.getValue"]], "ismulti() (biosimspace.gateway.float method)": [[28, "BioSimSpace.Gateway.Float.isMulti"]], "isoptional() (biosimspace.gateway.float method)": [[28, "BioSimSpace.Gateway.Float.isOptional"]], "setvalue() (biosimspace.gateway.float method)": [[28, "BioSimSpace.Gateway.Float.setValue"]], "integer (class in biosimspace.gateway)": [[29, "BioSimSpace.Gateway.Integer"]], "__init__() (biosimspace.gateway.integer method)": [[29, "BioSimSpace.Gateway.Integer.__init__"]], "getallowedvalues() (biosimspace.gateway.integer method)": [[29, "BioSimSpace.Gateway.Integer.getAllowedValues"]], "getargtype() (biosimspace.gateway.integer method)": [[29, "BioSimSpace.Gateway.Integer.getArgType"]], "getdefault() (biosimspace.gateway.integer method)": [[29, "BioSimSpace.Gateway.Integer.getDefault"]], "gethelp() (biosimspace.gateway.integer method)": [[29, "BioSimSpace.Gateway.Integer.getHelp"]], "getmax() (biosimspace.gateway.integer method)": [[29, "BioSimSpace.Gateway.Integer.getMax"]], "getmin() (biosimspace.gateway.integer method)": [[29, "BioSimSpace.Gateway.Integer.getMin"]], "getunit() (biosimspace.gateway.integer method)": [[29, "BioSimSpace.Gateway.Integer.getUnit"]], "getvalue() (biosimspace.gateway.integer method)": [[29, "BioSimSpace.Gateway.Integer.getValue"]], "ismulti() (biosimspace.gateway.integer method)": [[29, "BioSimSpace.Gateway.Integer.isMulti"]], "isoptional() (biosimspace.gateway.integer method)": [[29, "BioSimSpace.Gateway.Integer.isOptional"]], "setvalue() (biosimspace.gateway.integer method)": [[29, "BioSimSpace.Gateway.Integer.setValue"]], "length (class in biosimspace.gateway)": [[30, "BioSimSpace.Gateway.Length"]], "__init__() (biosimspace.gateway.length method)": [[30, "BioSimSpace.Gateway.Length.__init__"]], "getallowedvalues() (biosimspace.gateway.length method)": [[30, "BioSimSpace.Gateway.Length.getAllowedValues"]], "getargtype() (biosimspace.gateway.length method)": [[30, "BioSimSpace.Gateway.Length.getArgType"]], "getdefault() (biosimspace.gateway.length method)": [[30, "BioSimSpace.Gateway.Length.getDefault"]], "gethelp() (biosimspace.gateway.length method)": [[30, "BioSimSpace.Gateway.Length.getHelp"]], "getmax() (biosimspace.gateway.length method)": [[30, "BioSimSpace.Gateway.Length.getMax"]], "getmin() (biosimspace.gateway.length method)": [[30, "BioSimSpace.Gateway.Length.getMin"]], "getunit() (biosimspace.gateway.length method)": [[30, "BioSimSpace.Gateway.Length.getUnit"]], "getvalue() (biosimspace.gateway.length method)": [[30, "BioSimSpace.Gateway.Length.getValue"]], "ismulti() (biosimspace.gateway.length method)": [[30, "BioSimSpace.Gateway.Length.isMulti"]], "isoptional() (biosimspace.gateway.length method)": [[30, "BioSimSpace.Gateway.Length.isOptional"]], "setvalue() (biosimspace.gateway.length method)": [[30, "BioSimSpace.Gateway.Length.setValue"]], "node (class in biosimspace.gateway)": [[31, "BioSimSpace.Gateway.Node"]], "__init__() (biosimspace.gateway.node method)": [[31, "BioSimSpace.Gateway.Node.__init__"]], "addauthor() (biosimspace.gateway.node method)": [[31, "BioSimSpace.Gateway.Node.addAuthor"]], "adderror() (biosimspace.gateway.node method)": [[31, "BioSimSpace.Gateway.Node.addError"]], "addinput() (biosimspace.gateway.node method)": [[31, "BioSimSpace.Gateway.Node.addInput"]], "addoutput() (biosimspace.gateway.node method)": [[31, "BioSimSpace.Gateway.Node.addOutput"]], "getauthors() (biosimspace.gateway.node method)": [[31, "BioSimSpace.Gateway.Node.getAuthors"]], "getinput() (biosimspace.gateway.node method)": [[31, "BioSimSpace.Gateway.Node.getInput"]], "getinputs() (biosimspace.gateway.node method)": [[31, "BioSimSpace.Gateway.Node.getInputs"]], "getlicense() (biosimspace.gateway.node method)": [[31, "BioSimSpace.Gateway.Node.getLicense"]], "setlicense() (biosimspace.gateway.node method)": [[31, "BioSimSpace.Gateway.Node.setLicense"]], "setoutput() (biosimspace.gateway.node method)": [[31, "BioSimSpace.Gateway.Node.setOutput"]], "showcontrols() (biosimspace.gateway.node method)": [[31, "BioSimSpace.Gateway.Node.showControls"]], "validate() (biosimspace.gateway.node method)": [[31, "BioSimSpace.Gateway.Node.validate"]], "pressure (class in biosimspace.gateway)": [[32, "BioSimSpace.Gateway.Pressure"]], "__init__() (biosimspace.gateway.pressure method)": [[32, "BioSimSpace.Gateway.Pressure.__init__"]], "getallowedvalues() (biosimspace.gateway.pressure method)": [[32, "BioSimSpace.Gateway.Pressure.getAllowedValues"]], "getargtype() (biosimspace.gateway.pressure method)": [[32, "BioSimSpace.Gateway.Pressure.getArgType"]], "getdefault() (biosimspace.gateway.pressure method)": [[32, "BioSimSpace.Gateway.Pressure.getDefault"]], "gethelp() (biosimspace.gateway.pressure method)": [[32, "BioSimSpace.Gateway.Pressure.getHelp"]], "getmax() (biosimspace.gateway.pressure method)": [[32, "BioSimSpace.Gateway.Pressure.getMax"]], "getmin() (biosimspace.gateway.pressure method)": [[32, "BioSimSpace.Gateway.Pressure.getMin"]], "getunit() (biosimspace.gateway.pressure method)": [[32, "BioSimSpace.Gateway.Pressure.getUnit"]], "getvalue() (biosimspace.gateway.pressure method)": [[32, "BioSimSpace.Gateway.Pressure.getValue"]], "ismulti() (biosimspace.gateway.pressure method)": [[32, "BioSimSpace.Gateway.Pressure.isMulti"]], "isoptional() (biosimspace.gateway.pressure method)": [[32, "BioSimSpace.Gateway.Pressure.isOptional"]], "setvalue() (biosimspace.gateway.pressure method)": [[32, "BioSimSpace.Gateway.Pressure.setValue"]], "string (class in biosimspace.gateway)": [[33, "BioSimSpace.Gateway.String"]], "__init__() (biosimspace.gateway.string method)": [[33, "BioSimSpace.Gateway.String.__init__"]], "getallowedvalues() (biosimspace.gateway.string method)": [[33, "BioSimSpace.Gateway.String.getAllowedValues"]], "getargtype() (biosimspace.gateway.string method)": [[33, "BioSimSpace.Gateway.String.getArgType"]], "getdefault() (biosimspace.gateway.string method)": [[33, "BioSimSpace.Gateway.String.getDefault"]], "gethelp() (biosimspace.gateway.string method)": [[33, "BioSimSpace.Gateway.String.getHelp"]], "getmax() (biosimspace.gateway.string method)": [[33, "BioSimSpace.Gateway.String.getMax"]], "getmin() (biosimspace.gateway.string method)": [[33, "BioSimSpace.Gateway.String.getMin"]], "getunit() (biosimspace.gateway.string method)": [[33, "BioSimSpace.Gateway.String.getUnit"]], "getvalue() (biosimspace.gateway.string method)": [[33, "BioSimSpace.Gateway.String.getValue"]], "ismulti() (biosimspace.gateway.string method)": [[33, "BioSimSpace.Gateway.String.isMulti"]], "isoptional() (biosimspace.gateway.string method)": [[33, "BioSimSpace.Gateway.String.isOptional"]], "setvalue() (biosimspace.gateway.string method)": [[33, "BioSimSpace.Gateway.String.setValue"]], "temperature (class in biosimspace.gateway)": [[34, "BioSimSpace.Gateway.Temperature"]], "__init__() (biosimspace.gateway.temperature method)": [[34, "BioSimSpace.Gateway.Temperature.__init__"]], "getallowedvalues() (biosimspace.gateway.temperature method)": [[34, "BioSimSpace.Gateway.Temperature.getAllowedValues"]], "getargtype() (biosimspace.gateway.temperature method)": [[34, "BioSimSpace.Gateway.Temperature.getArgType"]], "getdefault() (biosimspace.gateway.temperature method)": [[34, "BioSimSpace.Gateway.Temperature.getDefault"]], "gethelp() (biosimspace.gateway.temperature method)": [[34, "BioSimSpace.Gateway.Temperature.getHelp"]], "getmax() (biosimspace.gateway.temperature method)": [[34, "BioSimSpace.Gateway.Temperature.getMax"]], "getmin() (biosimspace.gateway.temperature method)": [[34, "BioSimSpace.Gateway.Temperature.getMin"]], "getunit() (biosimspace.gateway.temperature method)": [[34, "BioSimSpace.Gateway.Temperature.getUnit"]], "getvalue() (biosimspace.gateway.temperature method)": [[34, "BioSimSpace.Gateway.Temperature.getValue"]], "ismulti() (biosimspace.gateway.temperature method)": [[34, "BioSimSpace.Gateway.Temperature.isMulti"]], "isoptional() (biosimspace.gateway.temperature method)": [[34, "BioSimSpace.Gateway.Temperature.isOptional"]], "setvalue() (biosimspace.gateway.temperature method)": [[34, "BioSimSpace.Gateway.Temperature.setValue"]], "time (class in biosimspace.gateway)": [[35, "BioSimSpace.Gateway.Time"]], "__init__() (biosimspace.gateway.time method)": [[35, "BioSimSpace.Gateway.Time.__init__"]], "getallowedvalues() (biosimspace.gateway.time method)": [[35, "BioSimSpace.Gateway.Time.getAllowedValues"]], "getargtype() (biosimspace.gateway.time method)": [[35, "BioSimSpace.Gateway.Time.getArgType"]], "getdefault() (biosimspace.gateway.time method)": [[35, "BioSimSpace.Gateway.Time.getDefault"]], "gethelp() (biosimspace.gateway.time method)": [[35, "BioSimSpace.Gateway.Time.getHelp"]], "getmax() (biosimspace.gateway.time method)": [[35, "BioSimSpace.Gateway.Time.getMax"]], "getmin() (biosimspace.gateway.time method)": [[35, "BioSimSpace.Gateway.Time.getMin"]], "getunit() (biosimspace.gateway.time method)": [[35, "BioSimSpace.Gateway.Time.getUnit"]], "getvalue() (biosimspace.gateway.time method)": [[35, "BioSimSpace.Gateway.Time.getValue"]], "ismulti() (biosimspace.gateway.time method)": [[35, "BioSimSpace.Gateway.Time.isMulti"]], "isoptional() (biosimspace.gateway.time method)": [[35, "BioSimSpace.Gateway.Time.isOptional"]], "setvalue() (biosimspace.gateway.time method)": [[35, "BioSimSpace.Gateway.Time.setValue"]], "volume (class in biosimspace.gateway)": [[36, "BioSimSpace.Gateway.Volume"]], "__init__() (biosimspace.gateway.volume method)": [[36, "BioSimSpace.Gateway.Volume.__init__"]], "getallowedvalues() (biosimspace.gateway.volume method)": [[36, "BioSimSpace.Gateway.Volume.getAllowedValues"]], "getargtype() (biosimspace.gateway.volume method)": [[36, "BioSimSpace.Gateway.Volume.getArgType"]], "getdefault() (biosimspace.gateway.volume method)": [[36, "BioSimSpace.Gateway.Volume.getDefault"]], "gethelp() (biosimspace.gateway.volume method)": [[36, "BioSimSpace.Gateway.Volume.getHelp"]], "getmax() (biosimspace.gateway.volume method)": [[36, "BioSimSpace.Gateway.Volume.getMax"]], "getmin() (biosimspace.gateway.volume method)": [[36, "BioSimSpace.Gateway.Volume.getMin"]], "getunit() (biosimspace.gateway.volume method)": [[36, "BioSimSpace.Gateway.Volume.getUnit"]], "getvalue() (biosimspace.gateway.volume method)": [[36, "BioSimSpace.Gateway.Volume.getValue"]], "ismulti() (biosimspace.gateway.volume method)": [[36, "BioSimSpace.Gateway.Volume.isMulti"]], "isoptional() (biosimspace.gateway.volume method)": [[36, "BioSimSpace.Gateway.Volume.isOptional"]], "setvalue() (biosimspace.gateway.volume method)": [[36, "BioSimSpace.Gateway.Volume.setValue"]], "fileformats() (in module biosimspace.io)": [[37, "BioSimSpace.IO.fileFormats"]], "formatinfo() (in module biosimspace.io)": [[38, "BioSimSpace.IO.formatInfo"]], "readmolecules() (in module biosimspace.io)": [[39, "BioSimSpace.IO.readMolecules"]], "readpdb() (in module biosimspace.io)": [[40, "BioSimSpace.IO.readPDB"]], "readperturbablesystem() (in module biosimspace.io)": [[41, "BioSimSpace.IO.readPerturbableSystem"]], "savemolecules() (in module biosimspace.io)": [[42, "BioSimSpace.IO.saveMolecules"]], "saveperturbablesystem() (in module biosimspace.io)": [[43, "BioSimSpace.IO.savePerturbableSystem"]], "engines() (in module biosimspace.md)": [[44, "BioSimSpace.MD.engines"]], "run() (in module biosimspace.md)": [[45, "BioSimSpace.MD.run"]], "bound (class in biosimspace.metadynamics)": [[46, "BioSimSpace.Metadynamics.Bound"]], "__init__() (biosimspace.metadynamics.bound method)": [[46, "BioSimSpace.Metadynamics.Bound.__init__"]], "getepsilon() (biosimspace.metadynamics.bound method)": [[46, "BioSimSpace.Metadynamics.Bound.getEpsilon"]], "getexponent() (biosimspace.metadynamics.bound method)": [[46, "BioSimSpace.Metadynamics.Bound.getExponent"]], "getforceconstant() (biosimspace.metadynamics.bound method)": [[46, "BioSimSpace.Metadynamics.Bound.getForceConstant"]], "getvalue() (biosimspace.metadynamics.bound method)": [[46, "BioSimSpace.Metadynamics.Bound.getValue"]], "setepsilon() (biosimspace.metadynamics.bound method)": [[46, "BioSimSpace.Metadynamics.Bound.setEpsilon"]], "setexponent() (biosimspace.metadynamics.bound method)": [[46, "BioSimSpace.Metadynamics.Bound.setExponent"]], "setforceconstant() (biosimspace.metadynamics.bound method)": [[46, "BioSimSpace.Metadynamics.Bound.setForceConstant"]], "setvalue() (biosimspace.metadynamics.bound method)": [[46, "BioSimSpace.Metadynamics.Bound.setValue"]], "distance (class in biosimspace.metadynamics.collectivevariable)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance"]], "__init__() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.__init__"]], "getatom0() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.getAtom0"]], "getatom1() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.getAtom1"]], "getcom0() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.getCoM0"]], "getcom1() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.getCoM1"]], "getcomponent() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.getComponent"]], "getgrid() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.getGrid"]], "gethillwidth() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.getHillWidth"]], "getlowerbound() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.getLowerBound"]], "getperiodicboundaries() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.getPeriodicBoundaries"]], "getupperbound() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.getUpperBound"]], "getweights0() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.getWeights0"]], "getweights1() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.getWeights1"]], "ncomponents() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.nComponents"]], "setatom0() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.setAtom0"]], "setatom1() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.setAtom1"]], "setcom0() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.setCoM0"]], "setcom1() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.setCoM1"]], "setcomponent() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.setComponent"]], "setgrid() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.setGrid"]], "sethillwidth() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.setHillWidth"]], "setlowerbound() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.setLowerBound"]], "setperiodicboundaries() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.setPeriodicBoundaries"]], "setupperbound() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.setUpperBound"]], "setweights0() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.setWeights0"]], "setweights1() (biosimspace.metadynamics.collectivevariable.distance method)": [[47, "BioSimSpace.Metadynamics.CollectiveVariable.Distance.setWeights1"]], "funnel (class in biosimspace.metadynamics.collectivevariable)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel"]], "__init__() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.__init__"]], "getatoms0() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.getAtoms0"]], "getatoms1() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.getAtoms1"]], "getbuffer() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.getBuffer"]], "getcorrection() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.getCorrection"]], "getextent() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.getExtent"]], "getgrid() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.getGrid"]], "gethillwidth() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.getHillWidth"]], "getinflection() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.getInflection"]], "getlowerbound() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.getLowerBound"]], "getsteepness() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.getSteepness"]], "getupperbound() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.getUpperBound"]], "getwidth() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.getWidth"]], "ncomponents() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.nComponents"]], "setatoms0() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.setAtoms0"]], "setatoms1() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.setAtoms1"]], "setbuffer() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.setBuffer"]], "setgrid() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.setGrid"]], "sethillwidth() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.setHillWidth"]], "setinflection() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.setInflection"]], "setlowerbound() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.setLowerBound"]], "setsteepness() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.setSteepness"]], "setupperbound() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.setUpperBound"]], "setwidth() (biosimspace.metadynamics.collectivevariable.funnel method)": [[48, "BioSimSpace.Metadynamics.CollectiveVariable.Funnel.setWidth"]], "rmsd (class in biosimspace.metadynamics.collectivevariable)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD"]], "__init__() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.__init__"]], "getalignmenttype() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.getAlignmentType"]], "getgrid() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.getGrid"]], "gethillwidth() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.getHillWidth"]], "getinitialvalue() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.getInitialValue"]], "getlowerbound() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.getLowerBound"]], "getperiodicboundaries() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.getPeriodicBoundaries"]], "getreferenceindex() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.getReferenceIndex"]], "getreferencepdb() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.getReferencePDB"]], "getupperbound() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.getUpperBound"]], "ncomponents() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.nComponents"]], "setalignmenttype() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.setAlignmentType"]], "setgrid() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.setGrid"]], "sethillwidth() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.setHillWidth"]], "setlowerbound() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.setLowerBound"]], "setperiodicboundaries() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.setPeriodicBoundaries"]], "setupperbound() (biosimspace.metadynamics.collectivevariable.rmsd method)": [[49, "BioSimSpace.Metadynamics.CollectiveVariable.RMSD.setUpperBound"]], "torsion (class in biosimspace.metadynamics.collectivevariable)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion"]], "__init__() (biosimspace.metadynamics.collectivevariable.torsion method)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion.__init__"]], "getatoms() (biosimspace.metadynamics.collectivevariable.torsion method)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion.getAtoms"]], "getgrid() (biosimspace.metadynamics.collectivevariable.torsion method)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion.getGrid"]], "gethillwidth() (biosimspace.metadynamics.collectivevariable.torsion method)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion.getHillWidth"]], "getlowerbound() (biosimspace.metadynamics.collectivevariable.torsion method)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion.getLowerBound"]], "getperiodicboundaries() (biosimspace.metadynamics.collectivevariable.torsion method)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion.getPeriodicBoundaries"]], "getupperbound() (biosimspace.metadynamics.collectivevariable.torsion method)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion.getUpperBound"]], "ncomponents() (biosimspace.metadynamics.collectivevariable.torsion method)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion.nComponents"]], "setatoms() (biosimspace.metadynamics.collectivevariable.torsion method)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion.setAtoms"]], "setgrid() (biosimspace.metadynamics.collectivevariable.torsion method)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion.setGrid"]], "sethillwidth() (biosimspace.metadynamics.collectivevariable.torsion method)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion.setHillWidth"]], "setlowerbound() (biosimspace.metadynamics.collectivevariable.torsion method)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion.setLowerBound"]], "setperiodicboundaries() (biosimspace.metadynamics.collectivevariable.torsion method)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion.setPeriodicBoundaries"]], "setupperbound() (biosimspace.metadynamics.collectivevariable.torsion method)": [[50, "BioSimSpace.Metadynamics.CollectiveVariable.Torsion.setUpperBound"]], "list() (in module biosimspace.metadynamics.collectivevariable)": [[51, "BioSimSpace.Metadynamics.CollectiveVariable.list"]], "makefunnel() (in module biosimspace.metadynamics.collectivevariable)": [[52, "BioSimSpace.Metadynamics.CollectiveVariable.makeFunnel"]], "viewfunnel() (in module biosimspace.metadynamics.collectivevariable)": [[53, "BioSimSpace.Metadynamics.CollectiveVariable.viewFunnel"]], "grid (class in biosimspace.metadynamics)": [[54, "BioSimSpace.Metadynamics.Grid"]], "__init__() (biosimspace.metadynamics.grid method)": [[54, "BioSimSpace.Metadynamics.Grid.__init__"]], "getbins() (biosimspace.metadynamics.grid method)": [[54, "BioSimSpace.Metadynamics.Grid.getBins"]], "getmaximum() (biosimspace.metadynamics.grid method)": [[54, "BioSimSpace.Metadynamics.Grid.getMaximum"]], "getminimum() (biosimspace.metadynamics.grid method)": [[54, "BioSimSpace.Metadynamics.Grid.getMinimum"]], "setbins() (biosimspace.metadynamics.grid method)": [[54, "BioSimSpace.Metadynamics.Grid.setBins"]], "setmaximum() (biosimspace.metadynamics.grid method)": [[54, "BioSimSpace.Metadynamics.Grid.setMaximum"]], "setminimum() (biosimspace.metadynamics.grid method)": [[54, "BioSimSpace.Metadynamics.Grid.setMinimum"]], "restraint (class in biosimspace.metadynamics)": [[55, "BioSimSpace.Metadynamics.Restraint"]], "__init__() (biosimspace.metadynamics.restraint method)": [[55, "BioSimSpace.Metadynamics.Restraint.__init__"]], "getforceconstant() (biosimspace.metadynamics.restraint method)": [[55, "BioSimSpace.Metadynamics.Restraint.getForceConstant"]], "getslope() (biosimspace.metadynamics.restraint method)": [[55, "BioSimSpace.Metadynamics.Restraint.getSlope"]], "getvalue() (biosimspace.metadynamics.restraint method)": [[55, "BioSimSpace.Metadynamics.Restraint.getValue"]], "setforceconstant() (biosimspace.metadynamics.restraint method)": [[55, "BioSimSpace.Metadynamics.Restraint.setForceConstant"]], "setslope() (biosimspace.metadynamics.restraint method)": [[55, "BioSimSpace.Metadynamics.Restraint.setSlope"]], "setvalue() (biosimspace.metadynamics.restraint method)": [[55, "BioSimSpace.Metadynamics.Restraint.setValue"]], "engines() (in module biosimspace.metadynamics)": [[56, "BioSimSpace.Metadynamics.engines"]], "run() (in module biosimspace.metadynamics)": [[57, "BioSimSpace.Metadynamics.run"]], "help() (in module biosimspace.node)": [[58, "BioSimSpace.Node.help"]], "list() (in module biosimspace.node)": [[59, "BioSimSpace.Node.list"]], "run() (in module biosimspace.node)": [[60, "BioSimSpace.Node.run"]], "setnodedirectory() (in module biosimspace.node)": [[61, "BioSimSpace.Node.setNodeDirectory"]], "view (class in biosimspace.notebook)": [[62, "BioSimSpace.Notebook.View"]], "__init__() (biosimspace.notebook.view method)": [[62, "BioSimSpace.Notebook.View.__init__"]], "molecule() (biosimspace.notebook.view method)": [[62, "BioSimSpace.Notebook.View.molecule"]], "molecules() (biosimspace.notebook.view method)": [[62, "BioSimSpace.Notebook.View.molecules"]], "nviews() (biosimspace.notebook.view method)": [[62, "BioSimSpace.Notebook.View.nViews"]], "reload() (biosimspace.notebook.view method)": [[62, "BioSimSpace.Notebook.View.reload"]], "reset() (biosimspace.notebook.view method)": [[62, "BioSimSpace.Notebook.View.reset"]], "savepdb() (biosimspace.notebook.view method)": [[62, "BioSimSpace.Notebook.View.savePDB"]], "system() (biosimspace.notebook.view method)": [[62, "BioSimSpace.Notebook.View.system"]], "plot() (in module biosimspace.notebook)": [[63, "BioSimSpace.Notebook.plot"]], "plotcontour() (in module biosimspace.notebook)": [[64, "BioSimSpace.Notebook.plotContour"]], "plotoverlapmatrix() (in module biosimspace.notebook)": [[65, "BioSimSpace.Notebook.plotOverlapMatrix"]], "amberforcefields() (in module biosimspace.parameters)": [[66, "BioSimSpace.Parameters.amberForceFields"]], "amberproteinforcefields() (in module biosimspace.parameters)": [[67, "BioSimSpace.Parameters.amberProteinForceFields"]], "ff03() (in module biosimspace.parameters)": [[68, "BioSimSpace.Parameters.ff03"]], "ff14sb() (in module biosimspace.parameters)": [[69, "BioSimSpace.Parameters.ff14SB"]], "ff99() (in module biosimspace.parameters)": [[70, "BioSimSpace.Parameters.ff99"]], "ff99sb() (in module biosimspace.parameters)": [[71, "BioSimSpace.Parameters.ff99SB"]], "ff99sbildn() (in module biosimspace.parameters)": [[72, "BioSimSpace.Parameters.ff99SBildn"]], "forcefields() (in module biosimspace.parameters)": [[73, "BioSimSpace.Parameters.forceFields"]], "formalcharge() (in module biosimspace.parameters)": [[74, "BioSimSpace.Parameters.formalCharge"]], "gaff() (in module biosimspace.parameters)": [[75, "BioSimSpace.Parameters.gaff"]], "gaff2() (in module biosimspace.parameters)": [[76, "BioSimSpace.Parameters.gaff2"]], "openforcefields() (in module biosimspace.parameters)": [[77, "BioSimSpace.Parameters.openForceFields"]], "openff_unconstrained_1_0_0() (in module biosimspace.parameters)": [[78, "BioSimSpace.Parameters.openff_unconstrained_1_0_0"]], "openff_unconstrained_1_0_0_rc1() (in module biosimspace.parameters)": [[79, "BioSimSpace.Parameters.openff_unconstrained_1_0_0_RC1"]], "openff_unconstrained_1_0_0_rc2() (in module biosimspace.parameters)": [[80, "BioSimSpace.Parameters.openff_unconstrained_1_0_0_RC2"]], "openff_unconstrained_1_0_1() (in module biosimspace.parameters)": [[81, "BioSimSpace.Parameters.openff_unconstrained_1_0_1"]], "openff_unconstrained_1_1_0() (in module biosimspace.parameters)": [[82, "BioSimSpace.Parameters.openff_unconstrained_1_1_0"]], "openff_unconstrained_1_1_1() (in module biosimspace.parameters)": [[83, "BioSimSpace.Parameters.openff_unconstrained_1_1_1"]], "openff_unconstrained_1_2_0() (in module biosimspace.parameters)": [[84, "BioSimSpace.Parameters.openff_unconstrained_1_2_0"]], "openff_unconstrained_1_2_1() (in module biosimspace.parameters)": [[85, "BioSimSpace.Parameters.openff_unconstrained_1_2_1"]], "openff_unconstrained_1_3_0() (in module biosimspace.parameters)": [[86, "BioSimSpace.Parameters.openff_unconstrained_1_3_0"]], "openff_unconstrained_1_3_1() (in module biosimspace.parameters)": [[87, "BioSimSpace.Parameters.openff_unconstrained_1_3_1"]], "openff_unconstrained_1_3_1_alpha_1() (in module biosimspace.parameters)": [[88, "BioSimSpace.Parameters.openff_unconstrained_1_3_1_alpha_1"]], "openff_unconstrained_2_0_0() (in module biosimspace.parameters)": [[89, "BioSimSpace.Parameters.openff_unconstrained_2_0_0"]], "openff_unconstrained_2_0_0_rc_1() (in module biosimspace.parameters)": [[90, "BioSimSpace.Parameters.openff_unconstrained_2_0_0_rc_1"]], "openff_unconstrained_2_0_0_rc_2() (in module biosimspace.parameters)": [[91, "BioSimSpace.Parameters.openff_unconstrained_2_0_0_rc_2"]], "openff_unconstrained_2_1_0() (in module biosimspace.parameters)": [[92, "BioSimSpace.Parameters.openff_unconstrained_2_1_0"]], "openff_unconstrained_2_1_0_rc_1() (in module biosimspace.parameters)": [[93, "BioSimSpace.Parameters.openff_unconstrained_2_1_0_rc_1"]], "parameterise() (in module biosimspace.parameters)": [[94, "BioSimSpace.Parameters.parameterise"]], "amber (class in biosimspace.process)": [[95, "BioSimSpace.Process.Amber"]], "__init__() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.__init__"]], "addargs() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.addArgs"]], "addtoconfig() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.addToConfig"]], "clearargs() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.clearArgs"]], "command() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.command"]], "deletearg() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.deleteArg"]], "exe() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.exe"]], "getangleenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getAngleEnergy"]], "getargstring() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getArgString"]], "getargstringlist() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getArgStringList"]], "getargs() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getArgs"]], "getbondenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getBondEnergy"]], "getcentreofmasskineticenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCentreOfMassKineticEnergy"]], "getconfig() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getConfig"]], "getcurrentangleenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentAngleEnergy"]], "getcurrentbondenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentBondEnergy"]], "getcurrentcentreofmasskineticenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentCentreOfMassKineticEnergy"]], "getcurrentdensity() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentDensity"]], "getcurrentdihedralenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentDihedralEnergy"]], "getcurrentelectrostaticenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentElectrostaticEnergy"]], "getcurrentelectrostaticenergy14() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentElectrostaticEnergy14"]], "getcurrenthydrogenbondenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentHydrogenBondEnergy"]], "getcurrentkineticenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentKineticEnergy"]], "getcurrentnonbondedenergy14() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentNonBondedEnergy14"]], "getcurrentpotentialenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentPotentialEnergy"]], "getcurrentpressure() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentPressure"]], "getcurrentrecord() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentRecord"]], "getcurrentrecords() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentRecords"]], "getcurrentrestraintenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentRestraintEnergy"]], "getcurrentstep() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentStep"]], "getcurrentsystem() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentSystem"]], "getcurrenttemperature() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentTemperature"]], "getcurrenttime() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentTime"]], "getcurrenttotalenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentTotalEnergy"]], "getcurrentvanderwaalsenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentVanDerWaalsEnergy"]], "getcurrentvirial() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentVirial"]], "getcurrentvolume() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getCurrentVolume"]], "getdensity() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getDensity"]], "getdihedralenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getDihedralEnergy"]], "getelectrostaticenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getElectrostaticEnergy"]], "getelectrostaticenergy14() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getElectrostaticEnergy14"]], "getframe() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getFrame"]], "gethydrogenbondenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getHydrogenBondEnergy"]], "getinput() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getInput"]], "getkineticenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getKineticEnergy"]], "getname() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getName"]], "getnonbondedenergy14() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getNonBondedEnergy14"]], "getoutput() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getOutput"]], "getpackagename() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getPackageName"]], "getpotentialenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getPotentialEnergy"]], "getpressure() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getPressure"]], "getrecord() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getRecord"]], "getrecords() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getRecords"]], "getrestraintenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getRestraintEnergy"]], "getseed() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getSeed"]], "getstderr() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getStderr"]], "getstdout() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getStdout"]], "getstep() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getStep"]], "getsystem() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getSystem"]], "gettemperature() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getTemperature"]], "gettime() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getTime"]], "gettotalenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getTotalEnergy"]], "gettrajectory() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getTrajectory"]], "getvanderwaalsenergy() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getVanDerWaalsEnergy"]], "getvirial() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getVirial"]], "getvolume() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.getVolume"]], "inputfiles() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.inputFiles"]], "insertarg() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.insertArg"]], "iserror() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.isError"]], "isqueued() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.isQueued"]], "isrunning() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.isRunning"]], "kill() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.kill"]], "resetargs() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.resetArgs"]], "resetconfig() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.resetConfig"]], "run() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.run"]], "runtime() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.runTime"]], "setarg() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.setArg"]], "setargs() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.setArgs"]], "setconfig() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.setConfig"]], "setname() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.setName"]], "setseed() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.setSeed"]], "start() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.start"]], "stderr() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.stderr"]], "stdout() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.stdout"]], "wait() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.wait"]], "workdir() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.workDir"]], "writeconfig() (biosimspace.process.amber method)": [[95, "BioSimSpace.Process.Amber.writeConfig"]], "gromacs (class in biosimspace.process)": [[96, "BioSimSpace.Process.Gromacs"]], "__init__() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.__init__"]], "addargs() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.addArgs"]], "addtoconfig() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.addToConfig"]], "clearargs() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.clearArgs"]], "command() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.command"]], "deletearg() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.deleteArg"]], "exe() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.exe"]], "getangleenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getAngleEnergy"]], "getargstring() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getArgString"]], "getargstringlist() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getArgStringList"]], "getargs() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getArgs"]], "getbondenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getBondEnergy"]], "getconfig() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getConfig"]], "getconservedenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getConservedEnergy"]], "getconstraintrmsd() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getConstraintRMSD"]], "getcoulomb14() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCoulomb14"]], "getcoulombreciprocal() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCoulombReciprocal"]], "getcoulombsr() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCoulombSR"]], "getcurrentangleenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentAngleEnergy"]], "getcurrentbondenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentBondEnergy"]], "getcurrentconservedenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentConservedEnergy"]], "getcurrentconstraintrmsd() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentConstraintRMSD"]], "getcurrentcoulomb14() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentCoulomb14"]], "getcurrentcoulombreciprocal() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentCoulombReciprocal"]], "getcurrentcoulombsr() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentCoulombSR"]], "getcurrentdihedralenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentDihedralEnergy"]], "getcurrentdispersioncorrection() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentDispersionCorrection"]], "getcurrentimproperenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentImproperEnergy"]], "getcurrentkineticenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentKineticEnergy"]], "getcurrentlennardjones14() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentLennardJones14"]], "getcurrentlennardjonessr() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentLennardJonesSR"]], "getcurrentpotentialenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentPotentialEnergy"]], "getcurrentpressure() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentPressure"]], "getcurrentpressuredc() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentPressureDC"]], "getcurrentproperenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentProperEnergy"]], "getcurrentrecord() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentRecord"]], "getcurrentrecords() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentRecords"]], "getcurrentrestraintenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentRestraintEnergy"]], "getcurrentstep() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentStep"]], "getcurrentsystem() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentSystem"]], "getcurrenttemperature() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentTemperature"]], "getcurrenttime() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentTime"]], "getcurrenttotalenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentTotalEnergy"]], "getcurrentvolume() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getCurrentVolume"]], "getdihedralenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getDihedralEnergy"]], "getdispersioncorrection() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getDispersionCorrection"]], "getframe() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getFrame"]], "getimproperenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getImproperEnergy"]], "getinput() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getInput"]], "getkineticenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getKineticEnergy"]], "getlennardjones14() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getLennardJones14"]], "getlennardjonessr() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getLennardJonesSR"]], "getname() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getName"]], "getoutput() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getOutput"]], "getpackagename() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getPackageName"]], "getpotentialenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getPotentialEnergy"]], "getpressure() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getPressure"]], "getpressuredc() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getPressureDC"]], "getproperenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getProperEnergy"]], "getrecord() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getRecord"]], "getrecords() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getRecords"]], "getrestraintenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getRestraintEnergy"]], "getseed() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getSeed"]], "getstderr() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getStderr"]], "getstdout() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getStdout"]], "getstep() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getStep"]], "getsystem() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getSystem"]], "gettemperature() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getTemperature"]], "gettime() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getTime"]], "gettotalenergy() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getTotalEnergy"]], "gettrajectory() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getTrajectory"]], "getvolume() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.getVolume"]], "inputfiles() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.inputFiles"]], "insertarg() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.insertArg"]], "iserror() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.isError"]], "isqueued() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.isQueued"]], "isrunning() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.isRunning"]], "kill() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.kill"]], "resetargs() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.resetArgs"]], "resetconfig() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.resetConfig"]], "run() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.run"]], "runtime() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.runTime"]], "setarg() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.setArg"]], "setargs() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.setArgs"]], "setconfig() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.setConfig"]], "setname() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.setName"]], "setseed() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.setSeed"]], "start() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.start"]], "stderr() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.stderr"]], "stdout() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.stdout"]], "wait() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.wait"]], "workdir() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.workDir"]], "writeconfig() (biosimspace.process.gromacs method)": [[96, "BioSimSpace.Process.Gromacs.writeConfig"]], "namd (class in biosimspace.process)": [[97, "BioSimSpace.Process.Namd"]], "__init__() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.__init__"]], "addargs() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.addArgs"]], "addtoconfig() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.addToConfig"]], "clearargs() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.clearArgs"]], "command() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.command"]], "deletearg() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.deleteArg"]], "eta() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.eta"]], "exe() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.exe"]], "getangleenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getAngleEnergy"]], "getargstring() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getArgString"]], "getargstringlist() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getArgStringList"]], "getargs() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getArgs"]], "getbondenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getBondEnergy"]], "getboundaryenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getBoundaryEnergy"]], "getconfig() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getConfig"]], "getcurrentangleenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentAngleEnergy"]], "getcurrentbondenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentBondEnergy"]], "getcurrentboundaryenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentBoundaryEnergy"]], "getcurrentdihedralenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentDihedralEnergy"]], "getcurrentelectrostaticenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentElectrostaticEnergy"]], "getcurrentgpressure() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentGPressure"]], "getcurrentgpressureaverage() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentGPressureAverage"]], "getcurrentimproperenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentImproperEnergy"]], "getcurrentkineticenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentKineticEnergy"]], "getcurrentmiscenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentMiscEnergy"]], "getcurrentpotentialenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentPotentialEnergy"]], "getcurrentpressure() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentPressure"]], "getcurrentpressureaverage() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentPressureAverage"]], "getcurrentproperenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentProperEnergy"]], "getcurrentrecord() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentRecord"]], "getcurrentrecords() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentRecords"]], "getcurrentstep() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentStep"]], "getcurrentsystem() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentSystem"]], "getcurrenttemperature() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentTemperature"]], "getcurrenttemperatureaverage() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentTemperatureAverage"]], "getcurrenttime() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentTime"]], "getcurrenttotal2energy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentTotal2Energy"]], "getcurrenttotal3energy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentTotal3Energy"]], "getcurrenttotalenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentTotalEnergy"]], "getcurrentvanderwaalsenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentVanDerWaalsEnergy"]], "getcurrentvolume() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getCurrentVolume"]], "getdihedralenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getDihedralEnergy"]], "getelectrostaticenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getElectrostaticEnergy"]], "getframe() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getFrame"]], "getgpressure() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getGPressure"]], "getgpressureaverage() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getGPressureAverage"]], "getimproperenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getImproperEnergy"]], "getinput() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getInput"]], "getkineticenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getKineticEnergy"]], "getmiscenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getMiscEnergy"]], "getname() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getName"]], "getoutput() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getOutput"]], "getpackagename() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getPackageName"]], "getpotentialenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getPotentialEnergy"]], "getpressure() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getPressure"]], "getpressureaverage() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getPressureAverage"]], "getproperenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getProperEnergy"]], "getrecord() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getRecord"]], "getrecords() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getRecords"]], "getseed() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getSeed"]], "getstderr() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getStderr"]], "getstdout() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getStdout"]], "getstep() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getStep"]], "getsystem() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getSystem"]], "gettemperature() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getTemperature"]], "gettemperatureaverage() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getTemperatureAverage"]], "gettime() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getTime"]], "gettotal2energy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getTotal2Energy"]], "gettotal3energy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getTotal3Energy"]], "gettotalenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getTotalEnergy"]], "gettrajectory() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getTrajectory"]], "getvanderwaalsenergy() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getVanDerWaalsEnergy"]], "getvolume() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.getVolume"]], "inputfiles() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.inputFiles"]], "insertarg() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.insertArg"]], "iserror() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.isError"]], "isqueued() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.isQueued"]], "isrunning() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.isRunning"]], "kill() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.kill"]], "resetargs() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.resetArgs"]], "resetconfig() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.resetConfig"]], "run() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.run"]], "runtime() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.runTime"]], "setarg() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.setArg"]], "setargs() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.setArgs"]], "setconfig() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.setConfig"]], "setname() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.setName"]], "setseed() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.setSeed"]], "start() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.start"]], "stderr() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.stderr"]], "stdout() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.stdout"]], "wait() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.wait"]], "workdir() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.workDir"]], "writeconfig() (biosimspace.process.namd method)": [[97, "BioSimSpace.Process.Namd.writeConfig"]], "openmm (class in biosimspace.process)": [[98, "BioSimSpace.Process.OpenMM"]], "__init__() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.__init__"]], "addargs() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.addArgs"]], "addtoconfig() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.addToConfig"]], "clearargs() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.clearArgs"]], "command() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.command"]], "deletearg() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.deleteArg"]], "exe() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.exe"]], "getargstring() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getArgString"]], "getargstringlist() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getArgStringList"]], "getargs() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getArgs"]], "getconfig() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getConfig"]], "getcurrentkineticenergy() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getCurrentKineticEnergy"]], "getcurrentpotentialenergy() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getCurrentPotentialEnergy"]], "getcurrentrecord() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getCurrentRecord"]], "getcurrentrecords() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getCurrentRecords"]], "getcurrentstep() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getCurrentStep"]], "getcurrentsystem() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getCurrentSystem"]], "getcurrenttemperature() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getCurrentTemperature"]], "getcurrenttime() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getCurrentTime"]], "getcurrenttotalenergy() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getCurrentTotalEnergy"]], "getcurrentvolume() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getCurrentVolume"]], "getframe() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getFrame"]], "getinput() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getInput"]], "getkineticenergy() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getKineticEnergy"]], "getname() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getName"]], "getoutput() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getOutput"]], "getpackagename() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getPackageName"]], "getpotentialenergy() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getPotentialEnergy"]], "getrecord() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getRecord"]], "getrecords() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getRecords"]], "getseed() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getSeed"]], "getstderr() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getStderr"]], "getstdout() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getStdout"]], "getstep() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getStep"]], "getsystem() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getSystem"]], "gettemperature() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getTemperature"]], "gettime() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getTime"]], "gettotalenergy() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getTotalEnergy"]], "gettrajectory() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getTrajectory"]], "getvolume() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.getVolume"]], "inputfiles() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.inputFiles"]], "insertarg() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.insertArg"]], "iserror() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.isError"]], "isqueued() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.isQueued"]], "isrunning() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.isRunning"]], "kill() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.kill"]], "resetargs() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.resetArgs"]], "resetconfig() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.resetConfig"]], "run() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.run"]], "runtime() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.runTime"]], "setarg() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.setArg"]], "setargs() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.setArgs"]], "setconfig() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.setConfig"]], "setname() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.setName"]], "setseed() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.setSeed"]], "start() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.start"]], "stderr() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.stderr"]], "stdout() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.stdout"]], "wait() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.wait"]], "workdir() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.workDir"]], "writeconfig() (biosimspace.process.openmm method)": [[98, "BioSimSpace.Process.OpenMM.writeConfig"]], "plumed (class in biosimspace.process)": [[99, "BioSimSpace.Process.Plumed"]], "__init__() (biosimspace.process.plumed method)": [[99, "BioSimSpace.Process.Plumed.__init__"]], "createconfig() (biosimspace.process.plumed method)": [[99, "BioSimSpace.Process.Plumed.createConfig"]], "getcollectivevariable() (biosimspace.process.plumed method)": [[99, "BioSimSpace.Process.Plumed.getCollectiveVariable"]], "getfreeenergy() (biosimspace.process.plumed method)": [[99, "BioSimSpace.Process.Plumed.getFreeEnergy"]], "gettime() (biosimspace.process.plumed method)": [[99, "BioSimSpace.Process.Plumed.getTime"]], "processrunner (class in biosimspace.process)": [[100, "BioSimSpace.Process.ProcessRunner"]], "__init__() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.__init__"]], "addprocess() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.addProcess"]], "errored() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.errored"]], "getname() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.getName"]], "iserror() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.isError"]], "isqueued() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.isQueued"]], "isrunning() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.isRunning"]], "kill() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.kill"]], "killall() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.killAll"]], "nerror() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.nError"]], "nprocesses() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.nProcesses"]], "nqueued() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.nQueued"]], "nrunning() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.nRunning"]], "processes() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.processes"]], "queued() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.queued"]], "removeprocess() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.removeProcess"]], "restartfailed() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.restartFailed"]], "runtime() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.runTime"]], "running() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.running"]], "setname() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.setName"]], "start() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.start"]], "startall() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.startAll"]], "wait() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.wait"]], "workdir() (biosimspace.process.processrunner method)": [[100, "BioSimSpace.Process.ProcessRunner.workDir"]], "somd (class in biosimspace.process)": [[101, "BioSimSpace.Process.Somd"]], "__init__() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.__init__"]], "addargs() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.addArgs"]], "addtoconfig() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.addToConfig"]], "clearargs() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.clearArgs"]], "command() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.command"]], "deletearg() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.deleteArg"]], "exe() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.exe"]], "getargstring() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getArgString"]], "getargstringlist() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getArgStringList"]], "getargs() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getArgs"]], "getconfig() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getConfig"]], "getcurrentgradient() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getCurrentGradient"]], "getcurrentsystem() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getCurrentSystem"]], "getcurrenttime() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getCurrentTime"]], "getframe() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getFrame"]], "getgradient() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getGradient"]], "getinput() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getInput"]], "getname() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getName"]], "getoutput() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getOutput"]], "getpackagename() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getPackageName"]], "getseed() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getSeed"]], "getstderr() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getStderr"]], "getstdout() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getStdout"]], "getsystem() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getSystem"]], "gettime() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getTime"]], "gettrajectory() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.getTrajectory"]], "inputfiles() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.inputFiles"]], "insertarg() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.insertArg"]], "iserror() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.isError"]], "isqueued() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.isQueued"]], "isrunning() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.isRunning"]], "kill() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.kill"]], "resetargs() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.resetArgs"]], "resetconfig() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.resetConfig"]], "run() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.run"]], "runtime() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.runTime"]], "setarg() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.setArg"]], "setargs() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.setArgs"]], "setconfig() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.setConfig"]], "setname() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.setName"]], "setseed() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.setSeed"]], "start() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.start"]], "stderr() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.stderr"]], "stdout() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.stdout"]], "wait() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.wait"]], "workdir() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.workDir"]], "writeconfig() (biosimspace.process.somd method)": [[101, "BioSimSpace.Process.Somd.writeConfig"]], "createprocess() (in module biosimspace.process)": [[102, "BioSimSpace.Process.createProcess"]], "engines() (in module biosimspace.process)": [[103, "BioSimSpace.Process.engines"]], "custom (class in biosimspace.protocol)": [[104, "BioSimSpace.Protocol.Custom"]], "__init__() (biosimspace.protocol.custom method)": [[104, "BioSimSpace.Protocol.Custom.__init__"]], "getconfig() (biosimspace.protocol.custom method)": [[104, "BioSimSpace.Protocol.Custom.getConfig"]], "setconfig() (biosimspace.protocol.custom method)": [[104, "BioSimSpace.Protocol.Custom.setConfig"]], "equilibration (class in biosimspace.protocol)": [[105, "BioSimSpace.Protocol.Equilibration"]], "__init__() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.__init__"]], "getendtemperature() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.getEndTemperature"]], "getforceconstant() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.getForceConstant"]], "getpressure() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.getPressure"]], "getreportinterval() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.getReportInterval"]], "getrestartinterval() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.getRestartInterval"]], "getrestraint() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.getRestraint"]], "getruntime() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.getRunTime"]], "getstarttemperature() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.getStartTemperature"]], "getthermostattimeconstant() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.getThermostatTimeConstant"]], "gettimestep() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.getTimeStep"]], "isconstanttemp() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.isConstantTemp"]], "restraints() (biosimspace.protocol.equilibration class method)": [[105, "BioSimSpace.Protocol.Equilibration.restraints"]], "setendtemperature() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.setEndTemperature"]], "setforceconstant() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.setForceConstant"]], "setpressure() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.setPressure"]], "setreportinterval() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.setReportInterval"]], "setrestartinterval() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.setRestartInterval"]], "setrestraint() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.setRestraint"]], "setruntime() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.setRunTime"]], "setstarttemperature() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.setStartTemperature"]], "setthermostattimeconstant() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.setThermostatTimeConstant"]], "settimestep() (biosimspace.protocol.equilibration method)": [[105, "BioSimSpace.Protocol.Equilibration.setTimeStep"]], "freeenergy (in module biosimspace.protocol)": [[106, "BioSimSpace.Protocol.FreeEnergy"]], "freeenergyequilibration (class in biosimspace.protocol)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration"]], "__init__() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.__init__"]], "getendtemperature() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.getEndTemperature"]], "getforceconstant() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.getForceConstant"]], "getlambda() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.getLambda"]], "getlambdaindex() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.getLambdaIndex"]], "getlambdavalues() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.getLambdaValues"]], "getperturbationtype() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.getPerturbationType"]], "getpressure() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.getPressure"]], "getreportinterval() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.getReportInterval"]], "getrestartinterval() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.getRestartInterval"]], "getrestraint() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.getRestraint"]], "getruntime() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.getRunTime"]], "getstarttemperature() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.getStartTemperature"]], "getthermostattimeconstant() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.getThermostatTimeConstant"]], "gettimestep() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.getTimeStep"]], "isconstanttemp() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.isConstantTemp"]], "restraints() (biosimspace.protocol.freeenergyequilibration class method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.restraints"]], "setendtemperature() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.setEndTemperature"]], "setforceconstant() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.setForceConstant"]], "setlambdavalues() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.setLambdaValues"]], "setperturbationtype() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.setPerturbationType"]], "setpressure() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.setPressure"]], "setreportinterval() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.setReportInterval"]], "setrestartinterval() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.setRestartInterval"]], "setrestraint() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.setRestraint"]], "setruntime() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.setRunTime"]], "setstarttemperature() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.setStartTemperature"]], "setthermostattimeconstant() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.setThermostatTimeConstant"]], "settimestep() (biosimspace.protocol.freeenergyequilibration method)": [[107, "BioSimSpace.Protocol.FreeEnergyEquilibration.setTimeStep"]], "freeenergyminimisation (class in biosimspace.protocol)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation"]], "__init__() (biosimspace.protocol.freeenergyminimisation method)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation.__init__"]], "getforceconstant() (biosimspace.protocol.freeenergyminimisation method)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation.getForceConstant"]], "getlambda() (biosimspace.protocol.freeenergyminimisation method)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation.getLambda"]], "getlambdaindex() (biosimspace.protocol.freeenergyminimisation method)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation.getLambdaIndex"]], "getlambdavalues() (biosimspace.protocol.freeenergyminimisation method)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation.getLambdaValues"]], "getperturbationtype() (biosimspace.protocol.freeenergyminimisation method)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation.getPerturbationType"]], "getrestraint() (biosimspace.protocol.freeenergyminimisation method)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation.getRestraint"]], "getsteps() (biosimspace.protocol.freeenergyminimisation method)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation.getSteps"]], "restraints() (biosimspace.protocol.freeenergyminimisation class method)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation.restraints"]], "setforceconstant() (biosimspace.protocol.freeenergyminimisation method)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation.setForceConstant"]], "setlambdavalues() (biosimspace.protocol.freeenergyminimisation method)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation.setLambdaValues"]], "setperturbationtype() (biosimspace.protocol.freeenergyminimisation method)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation.setPerturbationType"]], "setrestraint() (biosimspace.protocol.freeenergyminimisation method)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation.setRestraint"]], "setsteps() (biosimspace.protocol.freeenergyminimisation method)": [[108, "BioSimSpace.Protocol.FreeEnergyMinimisation.setSteps"]], "freeenergyproduction (class in biosimspace.protocol)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction"]], "__init__() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.__init__"]], "getforceconstant() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.getForceConstant"]], "getlambda() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.getLambda"]], "getlambdaindex() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.getLambdaIndex"]], "getlambdavalues() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.getLambdaValues"]], "getperturbationtype() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.getPerturbationType"]], "getpressure() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.getPressure"]], "getreportinterval() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.getReportInterval"]], "getrestartinterval() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.getRestartInterval"]], "getrestraint() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.getRestraint"]], "getruntime() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.getRunTime"]], "gettemperature() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.getTemperature"]], "getthermostattimeconstant() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.getThermostatTimeConstant"]], "gettimestep() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.getTimeStep"]], "isrestart() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.isRestart"]], "restraints() (biosimspace.protocol.freeenergyproduction class method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.restraints"]], "setforceconstant() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.setForceConstant"]], "setlambdavalues() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.setLambdaValues"]], "setperturbationtype() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.setPerturbationType"]], "setpressure() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.setPressure"]], "setreportinterval() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.setReportInterval"]], "setrestart() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.setRestart"]], "setrestartinterval() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.setRestartInterval"]], "setrestraint() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.setRestraint"]], "setruntime() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.setRunTime"]], "settemperature() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.setTemperature"]], "setthermostattimeconstant() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.setThermostatTimeConstant"]], "settimestep() (biosimspace.protocol.freeenergyproduction method)": [[109, "BioSimSpace.Protocol.FreeEnergyProduction.setTimeStep"]], "metadynamics (class in biosimspace.protocol)": [[110, "BioSimSpace.Protocol.Metadynamics"]], "__init__() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.__init__"]], "getbiasfactor() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.getBiasFactor"]], "getcollectivevariable() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.getCollectiveVariable"]], "gethillfrequency() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.getHillFrequency"]], "gethillheight() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.getHillHeight"]], "getpressure() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.getPressure"]], "getreportinterval() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.getReportInterval"]], "getrestartinterval() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.getRestartInterval"]], "getruntime() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.getRunTime"]], "gettemperature() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.getTemperature"]], "gettimestep() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.getTimeStep"]], "setbiasfactor() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.setBiasFactor"]], "setcollectivevariable() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.setCollectiveVariable"]], "sethillfrequency() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.setHillFrequency"]], "sethillheight() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.setHillHeight"]], "setpressure() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.setPressure"]], "setreportinterval() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.setReportInterval"]], "setrestartinterval() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.setRestartInterval"]], "setruntime() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.setRunTime"]], "settemperature() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.setTemperature"]], "settimestep() (biosimspace.protocol.metadynamics method)": [[110, "BioSimSpace.Protocol.Metadynamics.setTimeStep"]], "minimisation (class in biosimspace.protocol)": [[111, "BioSimSpace.Protocol.Minimisation"]], "__init__() (biosimspace.protocol.minimisation method)": [[111, "BioSimSpace.Protocol.Minimisation.__init__"]], "getforceconstant() (biosimspace.protocol.minimisation method)": [[111, "BioSimSpace.Protocol.Minimisation.getForceConstant"]], "getrestraint() (biosimspace.protocol.minimisation method)": [[111, "BioSimSpace.Protocol.Minimisation.getRestraint"]], "getsteps() (biosimspace.protocol.minimisation method)": [[111, "BioSimSpace.Protocol.Minimisation.getSteps"]], "restraints() (biosimspace.protocol.minimisation class method)": [[111, "BioSimSpace.Protocol.Minimisation.restraints"]], "setforceconstant() (biosimspace.protocol.minimisation method)": [[111, "BioSimSpace.Protocol.Minimisation.setForceConstant"]], "setrestraint() (biosimspace.protocol.minimisation method)": [[111, "BioSimSpace.Protocol.Minimisation.setRestraint"]], "setsteps() (biosimspace.protocol.minimisation method)": [[111, "BioSimSpace.Protocol.Minimisation.setSteps"]], "production (class in biosimspace.protocol)": [[112, "BioSimSpace.Protocol.Production"]], "__init__() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.__init__"]], "getforceconstant() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.getForceConstant"]], "getpressure() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.getPressure"]], "getreportinterval() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.getReportInterval"]], "getrestartinterval() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.getRestartInterval"]], "getrestraint() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.getRestraint"]], "getruntime() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.getRunTime"]], "gettemperature() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.getTemperature"]], "getthermostattimeconstant() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.getThermostatTimeConstant"]], "gettimestep() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.getTimeStep"]], "isrestart() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.isRestart"]], "restraints() (biosimspace.protocol.production class method)": [[112, "BioSimSpace.Protocol.Production.restraints"]], "setforceconstant() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.setForceConstant"]], "setpressure() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.setPressure"]], "setreportinterval() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.setReportInterval"]], "setrestart() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.setRestart"]], "setrestartinterval() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.setRestartInterval"]], "setrestraint() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.setRestraint"]], "setruntime() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.setRunTime"]], "settemperature() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.setTemperature"]], "setthermostattimeconstant() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.setThermostatTimeConstant"]], "settimestep() (biosimspace.protocol.production method)": [[112, "BioSimSpace.Protocol.Production.setTimeStep"]], "steering (class in biosimspace.protocol)": [[113, "BioSimSpace.Protocol.Steering"]], "__init__() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.__init__"]], "getcollectivevariable() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.getCollectiveVariable"]], "getcolvarfile() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.getColvarFile"]], "getpressure() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.getPressure"]], "getreportinterval() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.getReportInterval"]], "getrestartinterval() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.getRestartInterval"]], "getrestraints() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.getRestraints"]], "getruntime() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.getRunTime"]], "getschedule() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.getSchedule"]], "gettemperature() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.getTemperature"]], "getthermostattimeconstant() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.getThermostatTimeConstant"]], "gettimestep() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.getTimeStep"]], "getverse() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.getVerse"]], "setcollectivevariable() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.setCollectiveVariable"]], "setcolvarfile() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.setColvarFile"]], "setpressure() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.setPressure"]], "setreportinterval() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.setReportInterval"]], "setrestartinterval() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.setRestartInterval"]], "setrestraints() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.setRestraints"]], "setruntime() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.setRunTime"]], "setschedule() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.setSchedule"]], "settemperature() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.setTemperature"]], "setthermostattimeconstant() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.setThermostatTimeConstant"]], "settimestep() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.setTimeStep"]], "setverse() (biosimspace.protocol.steering method)": [[113, "BioSimSpace.Protocol.Steering.setVerse"]], "createprotocol() (in module biosimspace.protocol)": [[114, "BioSimSpace.Protocol.createProtocol"]], "protocols() (in module biosimspace.protocol)": [[115, "BioSimSpace.Protocol.protocols"]], "solvate() (in module biosimspace.solvent)": [[116, "BioSimSpace.Solvent.solvate"]], "spc() (in module biosimspace.solvent)": [[117, "BioSimSpace.Solvent.spc"]], "spce() (in module biosimspace.solvent)": [[118, "BioSimSpace.Solvent.spce"]], "tip3p() (in module biosimspace.solvent)": [[119, "BioSimSpace.Solvent.tip3p"]], "tip4p() (in module biosimspace.solvent)": [[120, "BioSimSpace.Solvent.tip4p"]], "tip5p() (in module biosimspace.solvent)": [[121, "BioSimSpace.Solvent.tip5p"]], "watermodels() (in module biosimspace.solvent)": [[122, "BioSimSpace.Solvent.waterModels"]], "load() (in module biosimspace.stream)": [[123, "BioSimSpace.Stream.load"]], "save() (in module biosimspace.stream)": [[124, "BioSimSpace.Stream.save"]], "trajectory (class in biosimspace.trajectory)": [[125, "BioSimSpace.Trajectory.Trajectory"]], "__init__() (biosimspace.trajectory.trajectory method)": [[125, "BioSimSpace.Trajectory.Trajectory.__init__"]], "getframes() (biosimspace.trajectory.trajectory method)": [[125, "BioSimSpace.Trajectory.Trajectory.getFrames"]], "gettrajectory() (biosimspace.trajectory.trajectory method)": [[125, "BioSimSpace.Trajectory.Trajectory.getTrajectory"]], "nframes() (biosimspace.trajectory.trajectory method)": [[125, "BioSimSpace.Trajectory.Trajectory.nFrames"]], "rmsd() (biosimspace.trajectory.trajectory method)": [[125, "BioSimSpace.Trajectory.Trajectory.rmsd"]], "angle (class in biosimspace.types)": [[126, "BioSimSpace.Types.Angle"]], "__init__() (biosimspace.types.angle method)": [[126, "BioSimSpace.Types.Angle.__init__"]], "angle() (biosimspace.types.angle class method)": [[126, "BioSimSpace.Types.Angle.angle"]], "charge() (biosimspace.types.angle class method)": [[126, "BioSimSpace.Types.Angle.charge"]], "degrees() (biosimspace.types.angle method)": [[126, "BioSimSpace.Types.Angle.degrees"]], "dimensions() (biosimspace.types.angle class method)": [[126, "BioSimSpace.Types.Angle.dimensions"]], "length() (biosimspace.types.angle class method)": [[126, "BioSimSpace.Types.Angle.length"]], "mass() (biosimspace.types.angle class method)": [[126, "BioSimSpace.Types.Angle.mass"]], "quantity() (biosimspace.types.angle class method)": [[126, "BioSimSpace.Types.Angle.quantity"]], "radians() (biosimspace.types.angle method)": [[126, "BioSimSpace.Types.Angle.radians"]], "temperature() (biosimspace.types.angle class method)": [[126, "BioSimSpace.Types.Angle.temperature"]], "time() (biosimspace.types.angle class method)": [[126, "BioSimSpace.Types.Angle.time"]], "to() (biosimspace.types.angle method)": [[126, "BioSimSpace.Types.Angle.to"]], "unit() (biosimspace.types.angle method)": [[126, "BioSimSpace.Types.Angle.unit"]], "value() (biosimspace.types.angle method)": [[126, "BioSimSpace.Types.Angle.value"]], "area (class in biosimspace.types)": [[127, "BioSimSpace.Types.Area"]], "__init__() (biosimspace.types.area method)": [[127, "BioSimSpace.Types.Area.__init__"]], "angle() (biosimspace.types.area class method)": [[127, "BioSimSpace.Types.Area.angle"]], "angstroms2() (biosimspace.types.area method)": [[127, "BioSimSpace.Types.Area.angstroms2"]], "charge() (biosimspace.types.area class method)": [[127, "BioSimSpace.Types.Area.charge"]], "dimensions() (biosimspace.types.area class method)": [[127, "BioSimSpace.Types.Area.dimensions"]], "length() (biosimspace.types.area class method)": [[127, "BioSimSpace.Types.Area.length"]], "mass() (biosimspace.types.area class method)": [[127, "BioSimSpace.Types.Area.mass"]], "meters2() (biosimspace.types.area method)": [[127, "BioSimSpace.Types.Area.meters2"]], "nanometers2() (biosimspace.types.area method)": [[127, "BioSimSpace.Types.Area.nanometers2"]], "picometers2() (biosimspace.types.area method)": [[127, "BioSimSpace.Types.Area.picometers2"]], "quantity() (biosimspace.types.area class method)": [[127, "BioSimSpace.Types.Area.quantity"]], "temperature() (biosimspace.types.area class method)": [[127, "BioSimSpace.Types.Area.temperature"]], "time() (biosimspace.types.area class method)": [[127, "BioSimSpace.Types.Area.time"]], "to() (biosimspace.types.area method)": [[127, "BioSimSpace.Types.Area.to"]], "unit() (biosimspace.types.area method)": [[127, "BioSimSpace.Types.Area.unit"]], "value() (biosimspace.types.area method)": [[127, "BioSimSpace.Types.Area.value"]], "charge (class in biosimspace.types)": [[128, "BioSimSpace.Types.Charge"]], "__init__() (biosimspace.types.charge method)": [[128, "BioSimSpace.Types.Charge.__init__"]], "angle() (biosimspace.types.charge class method)": [[128, "BioSimSpace.Types.Charge.angle"]], "charge() (biosimspace.types.charge class method)": [[128, "BioSimSpace.Types.Charge.charge"]], "coulomb() (biosimspace.types.charge method)": [[128, "BioSimSpace.Types.Charge.coulomb"]], "dimensions() (biosimspace.types.charge class method)": [[128, "BioSimSpace.Types.Charge.dimensions"]], "electron_charge() (biosimspace.types.charge method)": [[128, "BioSimSpace.Types.Charge.electron_charge"]], "length() (biosimspace.types.charge class method)": [[128, "BioSimSpace.Types.Charge.length"]], "mass() (biosimspace.types.charge class method)": [[128, "BioSimSpace.Types.Charge.mass"]], "quantity() (biosimspace.types.charge class method)": [[128, "BioSimSpace.Types.Charge.quantity"]], "temperature() (biosimspace.types.charge class method)": [[128, "BioSimSpace.Types.Charge.temperature"]], "time() (biosimspace.types.charge class method)": [[128, "BioSimSpace.Types.Charge.time"]], "to() (biosimspace.types.charge method)": [[128, "BioSimSpace.Types.Charge.to"]], "unit() (biosimspace.types.charge method)": [[128, "BioSimSpace.Types.Charge.unit"]], "value() (biosimspace.types.charge method)": [[128, "BioSimSpace.Types.Charge.value"]], "coordinate (class in biosimspace.types)": [[129, "BioSimSpace.Types.Coordinate"]], "__init__() (biosimspace.types.coordinate method)": [[129, "BioSimSpace.Types.Coordinate.__init__"]], "fromvector() (biosimspace.types.coordinate static method)": [[129, "BioSimSpace.Types.Coordinate.fromVector"]], "tovector() (biosimspace.types.coordinate method)": [[129, "BioSimSpace.Types.Coordinate.toVector"]], "x() (biosimspace.types.coordinate method)": [[129, "BioSimSpace.Types.Coordinate.x"]], "y() (biosimspace.types.coordinate method)": [[129, "BioSimSpace.Types.Coordinate.y"]], "z() (biosimspace.types.coordinate method)": [[129, "BioSimSpace.Types.Coordinate.z"]], "energy (class in biosimspace.types)": [[130, "BioSimSpace.Types.Energy"]], "__init__() (biosimspace.types.energy method)": [[130, "BioSimSpace.Types.Energy.__init__"]], "angle() (biosimspace.types.energy class method)": [[130, "BioSimSpace.Types.Energy.angle"]], "charge() (biosimspace.types.energy class method)": [[130, "BioSimSpace.Types.Energy.charge"]], "dimensions() (biosimspace.types.energy class method)": [[130, "BioSimSpace.Types.Energy.dimensions"]], "kcal_per_mol() (biosimspace.types.energy method)": [[130, "BioSimSpace.Types.Energy.kcal_per_mol"]], "kj_per_mol() (biosimspace.types.energy method)": [[130, "BioSimSpace.Types.Energy.kj_per_mol"]], "kt() (biosimspace.types.energy method)": [[130, "BioSimSpace.Types.Energy.kt"]], "length() (biosimspace.types.energy class method)": [[130, "BioSimSpace.Types.Energy.length"]], "mass() (biosimspace.types.energy class method)": [[130, "BioSimSpace.Types.Energy.mass"]], "quantity() (biosimspace.types.energy class method)": [[130, "BioSimSpace.Types.Energy.quantity"]], "temperature() (biosimspace.types.energy class method)": [[130, "BioSimSpace.Types.Energy.temperature"]], "time() (biosimspace.types.energy class method)": [[130, "BioSimSpace.Types.Energy.time"]], "to() (biosimspace.types.energy method)": [[130, "BioSimSpace.Types.Energy.to"]], "unit() (biosimspace.types.energy method)": [[130, "BioSimSpace.Types.Energy.unit"]], "value() (biosimspace.types.energy method)": [[130, "BioSimSpace.Types.Energy.value"]], "length (class in biosimspace.types)": [[131, "BioSimSpace.Types.Length"]], "__init__() (biosimspace.types.length method)": [[131, "BioSimSpace.Types.Length.__init__"]], "angle() (biosimspace.types.length class method)": [[131, "BioSimSpace.Types.Length.angle"]], "angstroms() (biosimspace.types.length method)": [[131, "BioSimSpace.Types.Length.angstroms"]], "centimeters() (biosimspace.types.length method)": [[131, "BioSimSpace.Types.Length.centimeters"]], "charge() (biosimspace.types.length class method)": [[131, "BioSimSpace.Types.Length.charge"]], "dimensions() (biosimspace.types.length class method)": [[131, "BioSimSpace.Types.Length.dimensions"]], "length() (biosimspace.types.length class method)": [[131, "BioSimSpace.Types.Length.length"]], "mass() (biosimspace.types.length class method)": [[131, "BioSimSpace.Types.Length.mass"]], "meters() (biosimspace.types.length method)": [[131, "BioSimSpace.Types.Length.meters"]], "millimeters() (biosimspace.types.length method)": [[131, "BioSimSpace.Types.Length.millimeters"]], "nanometers() (biosimspace.types.length method)": [[131, "BioSimSpace.Types.Length.nanometers"]], "picometers() (biosimspace.types.length method)": [[131, "BioSimSpace.Types.Length.picometers"]], "quantity() (biosimspace.types.length class method)": [[131, "BioSimSpace.Types.Length.quantity"]], "temperature() (biosimspace.types.length class method)": [[131, "BioSimSpace.Types.Length.temperature"]], "time() (biosimspace.types.length class method)": [[131, "BioSimSpace.Types.Length.time"]], "to() (biosimspace.types.length method)": [[131, "BioSimSpace.Types.Length.to"]], "unit() (biosimspace.types.length method)": [[131, "BioSimSpace.Types.Length.unit"]], "value() (biosimspace.types.length method)": [[131, "BioSimSpace.Types.Length.value"]], "pressure (class in biosimspace.types)": [[132, "BioSimSpace.Types.Pressure"]], "__init__() (biosimspace.types.pressure method)": [[132, "BioSimSpace.Types.Pressure.__init__"]], "angle() (biosimspace.types.pressure class method)": [[132, "BioSimSpace.Types.Pressure.angle"]], "atm() (biosimspace.types.pressure method)": [[132, "BioSimSpace.Types.Pressure.atm"]], "bar() (biosimspace.types.pressure method)": [[132, "BioSimSpace.Types.Pressure.bar"]], "charge() (biosimspace.types.pressure class method)": [[132, "BioSimSpace.Types.Pressure.charge"]], "dimensions() (biosimspace.types.pressure class method)": [[132, "BioSimSpace.Types.Pressure.dimensions"]], "length() (biosimspace.types.pressure class method)": [[132, "BioSimSpace.Types.Pressure.length"]], "mass() (biosimspace.types.pressure class method)": [[132, "BioSimSpace.Types.Pressure.mass"]], "quantity() (biosimspace.types.pressure class method)": [[132, "BioSimSpace.Types.Pressure.quantity"]], "temperature() (biosimspace.types.pressure class method)": [[132, "BioSimSpace.Types.Pressure.temperature"]], "time() (biosimspace.types.pressure class method)": [[132, "BioSimSpace.Types.Pressure.time"]], "to() (biosimspace.types.pressure method)": [[132, "BioSimSpace.Types.Pressure.to"]], "unit() (biosimspace.types.pressure method)": [[132, "BioSimSpace.Types.Pressure.unit"]], "value() (biosimspace.types.pressure method)": [[132, "BioSimSpace.Types.Pressure.value"]], "temperature (class in biosimspace.types)": [[133, "BioSimSpace.Types.Temperature"]], "__init__() (biosimspace.types.temperature method)": [[133, "BioSimSpace.Types.Temperature.__init__"]], "angle() (biosimspace.types.temperature class method)": [[133, "BioSimSpace.Types.Temperature.angle"]], "celsius() (biosimspace.types.temperature method)": [[133, "BioSimSpace.Types.Temperature.celsius"]], "charge() (biosimspace.types.temperature class method)": [[133, "BioSimSpace.Types.Temperature.charge"]], "dimensions() (biosimspace.types.temperature class method)": [[133, "BioSimSpace.Types.Temperature.dimensions"]], "fahrenheit() (biosimspace.types.temperature method)": [[133, "BioSimSpace.Types.Temperature.fahrenheit"]], "kelvin() (biosimspace.types.temperature method)": [[133, "BioSimSpace.Types.Temperature.kelvin"]], "length() (biosimspace.types.temperature class method)": [[133, "BioSimSpace.Types.Temperature.length"]], "mass() (biosimspace.types.temperature class method)": [[133, "BioSimSpace.Types.Temperature.mass"]], "quantity() (biosimspace.types.temperature class method)": [[133, "BioSimSpace.Types.Temperature.quantity"]], "temperature() (biosimspace.types.temperature class method)": [[133, "BioSimSpace.Types.Temperature.temperature"]], "time() (biosimspace.types.temperature class method)": [[133, "BioSimSpace.Types.Temperature.time"]], "to() (biosimspace.types.temperature method)": [[133, "BioSimSpace.Types.Temperature.to"]], "unit() (biosimspace.types.temperature method)": [[133, "BioSimSpace.Types.Temperature.unit"]], "value() (biosimspace.types.temperature method)": [[133, "BioSimSpace.Types.Temperature.value"]], "time (class in biosimspace.types)": [[134, "BioSimSpace.Types.Time"]], "__init__() (biosimspace.types.time method)": [[134, "BioSimSpace.Types.Time.__init__"]], "angle() (biosimspace.types.time class method)": [[134, "BioSimSpace.Types.Time.angle"]], "charge() (biosimspace.types.time class method)": [[134, "BioSimSpace.Types.Time.charge"]], "days() (biosimspace.types.time method)": [[134, "BioSimSpace.Types.Time.days"]], "dimensions() (biosimspace.types.time class method)": [[134, "BioSimSpace.Types.Time.dimensions"]], "femtoseconds() (biosimspace.types.time method)": [[134, "BioSimSpace.Types.Time.femtoseconds"]], "hours() (biosimspace.types.time method)": [[134, "BioSimSpace.Types.Time.hours"]], "length() (biosimspace.types.time class method)": [[134, "BioSimSpace.Types.Time.length"]], "mass() (biosimspace.types.time class method)": [[134, "BioSimSpace.Types.Time.mass"]], "milliseconds() (biosimspace.types.time method)": [[134, "BioSimSpace.Types.Time.milliseconds"]], "minutes() (biosimspace.types.time method)": [[134, "BioSimSpace.Types.Time.minutes"]], "nanoseconds() (biosimspace.types.time method)": [[134, "BioSimSpace.Types.Time.nanoseconds"]], "picoseconds() (biosimspace.types.time method)": [[134, "BioSimSpace.Types.Time.picoseconds"]], "quantity() (biosimspace.types.time class method)": [[134, "BioSimSpace.Types.Time.quantity"]], "seconds() (biosimspace.types.time method)": [[134, "BioSimSpace.Types.Time.seconds"]], "temperature() (biosimspace.types.time class method)": [[134, "BioSimSpace.Types.Time.temperature"]], "time() (biosimspace.types.time class method)": [[134, "BioSimSpace.Types.Time.time"]], "to() (biosimspace.types.time method)": [[134, "BioSimSpace.Types.Time.to"]], "unit() (biosimspace.types.time method)": [[134, "BioSimSpace.Types.Time.unit"]], "value() (biosimspace.types.time method)": [[134, "BioSimSpace.Types.Time.value"]], "vector (class in biosimspace.types)": [[135, "BioSimSpace.Types.Vector"]], "__init__() (biosimspace.types.vector method)": [[135, "BioSimSpace.Types.Vector.__init__"]], "angle() (biosimspace.types.vector method)": [[135, "BioSimSpace.Types.Vector.angle"]], "cross() (biosimspace.types.vector method)": [[135, "BioSimSpace.Types.Vector.cross"]], "dot() (biosimspace.types.vector method)": [[135, "BioSimSpace.Types.Vector.dot"]], "magnitude() (biosimspace.types.vector method)": [[135, "BioSimSpace.Types.Vector.magnitude"]], "normalise() (biosimspace.types.vector method)": [[135, "BioSimSpace.Types.Vector.normalise"]], "x() (biosimspace.types.vector method)": [[135, "BioSimSpace.Types.Vector.x"]], "y() (biosimspace.types.vector method)": [[135, "BioSimSpace.Types.Vector.y"]], "z() (biosimspace.types.vector method)": [[135, "BioSimSpace.Types.Vector.z"]], "volume (class in biosimspace.types)": [[136, "BioSimSpace.Types.Volume"]], "__init__() (biosimspace.types.volume method)": [[136, "BioSimSpace.Types.Volume.__init__"]], "angle() (biosimspace.types.volume class method)": [[136, "BioSimSpace.Types.Volume.angle"]], "angstroms3() (biosimspace.types.volume method)": [[136, "BioSimSpace.Types.Volume.angstroms3"]], "charge() (biosimspace.types.volume class method)": [[136, "BioSimSpace.Types.Volume.charge"]], "dimensions() (biosimspace.types.volume class method)": [[136, "BioSimSpace.Types.Volume.dimensions"]], "length() (biosimspace.types.volume class method)": [[136, "BioSimSpace.Types.Volume.length"]], "mass() (biosimspace.types.volume class method)": [[136, "BioSimSpace.Types.Volume.mass"]], "meters3() (biosimspace.types.volume method)": [[136, "BioSimSpace.Types.Volume.meters3"]], "nanometers3() (biosimspace.types.volume method)": [[136, "BioSimSpace.Types.Volume.nanometers3"]], "picometers3() (biosimspace.types.volume method)": [[136, "BioSimSpace.Types.Volume.picometers3"]], "quantity() (biosimspace.types.volume class method)": [[136, "BioSimSpace.Types.Volume.quantity"]], "temperature() (biosimspace.types.volume class method)": [[136, "BioSimSpace.Types.Volume.temperature"]], "time() (biosimspace.types.volume class method)": [[136, "BioSimSpace.Types.Volume.time"]], "to() (biosimspace.types.volume method)": [[136, "BioSimSpace.Types.Volume.to"]], "unit() (biosimspace.types.volume method)": [[136, "BioSimSpace.Types.Volume.unit"]], "value() (biosimspace.types.volume method)": [[136, "BioSimSpace.Types.Volume.value"]], "degree (in module biosimspace.units.angle)": [[137, "BioSimSpace.Units.Angle.degree"]], "radian (in module biosimspace.units.angle)": [[138, "BioSimSpace.Units.Angle.radian"]], "angstrom2 (in module biosimspace.units.area)": [[139, "BioSimSpace.Units.Area.angstrom2"]], "meter2 (in module biosimspace.units.area)": [[140, "BioSimSpace.Units.Area.meter2"]], "nanometer2 (in module biosimspace.units.area)": [[141, "BioSimSpace.Units.Area.nanometer2"]], "picometer2 (in module biosimspace.units.area)": [[142, "BioSimSpace.Units.Area.picometer2"]], "coulomb (in module biosimspace.units.charge)": [[143, "BioSimSpace.Units.Charge.coulomb"]], "electron_charge (in module biosimspace.units.charge)": [[144, "BioSimSpace.Units.Charge.electron_charge"]], "kcal_per_mol (in module biosimspace.units.energy)": [[145, "BioSimSpace.Units.Energy.kcal_per_mol"]], "kj_per_mol (in module biosimspace.units.energy)": [[146, "BioSimSpace.Units.Energy.kj_per_mol"]], "kt (in module biosimspace.units.energy)": [[147, "BioSimSpace.Units.Energy.kt"]], "angstrom (in module biosimspace.units.length)": [[148, "BioSimSpace.Units.Length.angstrom"]], "meter (in module biosimspace.units.length)": [[149, "BioSimSpace.Units.Length.meter"]], "nanometer (in module biosimspace.units.length)": [[150, "BioSimSpace.Units.Length.nanometer"]], "picometer (in module biosimspace.units.length)": [[151, "BioSimSpace.Units.Length.picometer"]], "atm (in module biosimspace.units.pressure)": [[152, "BioSimSpace.Units.Pressure.atm"]], "bar (in module biosimspace.units.pressure)": [[153, "BioSimSpace.Units.Pressure.bar"]], "celsius (in module biosimspace.units.temperature)": [[154, "BioSimSpace.Units.Temperature.celsius"]], "fahrenheit (in module biosimspace.units.temperature)": [[155, "BioSimSpace.Units.Temperature.fahrenheit"]], "kelvin (in module biosimspace.units.temperature)": [[156, "BioSimSpace.Units.Temperature.kelvin"]], "day (in module biosimspace.units.time)": [[157, "BioSimSpace.Units.Time.day"]], "femtosecond (in module biosimspace.units.time)": [[158, "BioSimSpace.Units.Time.femtosecond"]], "hour (in module biosimspace.units.time)": [[159, "BioSimSpace.Units.Time.hour"]], "millisecond (in module biosimspace.units.time)": [[160, "BioSimSpace.Units.Time.millisecond"]], "minute (in module biosimspace.units.time)": [[161, "BioSimSpace.Units.Time.minute"]], "nanosecond (in module biosimspace.units.time)": [[162, "BioSimSpace.Units.Time.nanosecond"]], "picosecond (in module biosimspace.units.time)": [[163, "BioSimSpace.Units.Time.picosecond"]], "second (in module biosimspace.units.time)": [[164, "BioSimSpace.Units.Time.second"]], "angstrom3 (in module biosimspace.units.volume)": [[165, "BioSimSpace.Units.Volume.angstrom3"]], "meter3 (in module biosimspace.units.volume)": [[166, "BioSimSpace.Units.Volume.meter3"]], "nanometer3 (in module biosimspace.units.volume)": [[167, "BioSimSpace.Units.Volume.nanometer3"]], "picometer3 (in module biosimspace.units.volume)": [[168, "BioSimSpace.Units.Volume.picometer3"]], "amber (class in biosimspace._config)": [[169, "BioSimSpace._Config.Amber"]], "__init__() (biosimspace._config.amber method)": [[169, "BioSimSpace._Config.Amber.__init__"]], "createconfig() (biosimspace._config.amber method)": [[169, "BioSimSpace._Config.Amber.createConfig"]], "hasbox() (biosimspace._config.amber method)": [[169, "BioSimSpace._Config.Amber.hasBox"]], "haswater() (biosimspace._config.amber method)": [[169, "BioSimSpace._Config.Amber.hasWater"]], "isrestart() (biosimspace._config.amber method)": [[169, "BioSimSpace._Config.Amber.isRestart"]], "reportinterval() (biosimspace._config.amber method)": [[169, "BioSimSpace._Config.Amber.reportInterval"]], "restartinterval() (biosimspace._config.amber method)": [[169, "BioSimSpace._Config.Amber.restartInterval"]], "steps() (biosimspace._config.amber method)": [[169, "BioSimSpace._Config.Amber.steps"]], "gromacs (class in biosimspace._config)": [[170, "BioSimSpace._Config.Gromacs"]], "__init__() (biosimspace._config.gromacs method)": [[170, "BioSimSpace._Config.Gromacs.__init__"]], "createconfig() (biosimspace._config.gromacs method)": [[170, "BioSimSpace._Config.Gromacs.createConfig"]], "hasbox() (biosimspace._config.gromacs method)": [[170, "BioSimSpace._Config.Gromacs.hasBox"]], "haswater() (biosimspace._config.gromacs method)": [[170, "BioSimSpace._Config.Gromacs.hasWater"]], "isrestart() (biosimspace._config.gromacs method)": [[170, "BioSimSpace._Config.Gromacs.isRestart"]], "reportinterval() (biosimspace._config.gromacs method)": [[170, "BioSimSpace._Config.Gromacs.reportInterval"]], "restartinterval() (biosimspace._config.gromacs method)": [[170, "BioSimSpace._Config.Gromacs.restartInterval"]], "steps() (biosimspace._config.gromacs method)": [[170, "BioSimSpace._Config.Gromacs.steps"]], "somd (class in biosimspace._config)": [[171, "BioSimSpace._Config.Somd"]], "__init__() (biosimspace._config.somd method)": [[171, "BioSimSpace._Config.Somd.__init__"]], "createconfig() (biosimspace._config.somd method)": [[171, "BioSimSpace._Config.Somd.createConfig"]], "hasbox() (biosimspace._config.somd method)": [[171, "BioSimSpace._Config.Somd.hasBox"]], "haswater() (biosimspace._config.somd method)": [[171, "BioSimSpace._Config.Somd.hasWater"]], "isrestart() (biosimspace._config.somd method)": [[171, "BioSimSpace._Config.Somd.isRestart"]], "reportinterval() (biosimspace._config.somd method)": [[171, "BioSimSpace._Config.Somd.reportInterval"]], "restartinterval() (biosimspace._config.somd method)": [[171, "BioSimSpace._Config.Somd.restartInterval"]], "steps() (biosimspace._config.somd method)": [[171, "BioSimSpace._Config.Somd.steps"]], "alignmenterror": [[172, "BioSimSpace._Exceptions.AlignmentError"]], "add_note() (biosimspace._exceptions.alignmenterror method)": [[172, "BioSimSpace._Exceptions.AlignmentError.add_note"]], "with_traceback() (biosimspace._exceptions.alignmenterror method)": [[172, "BioSimSpace._Exceptions.AlignmentError.with_traceback"]], "analysiserror": [[173, "BioSimSpace._Exceptions.AnalysisError"]], "add_note() (biosimspace._exceptions.analysiserror method)": [[173, "BioSimSpace._Exceptions.AnalysisError.add_note"]], "with_traceback() (biosimspace._exceptions.analysiserror method)": [[173, "BioSimSpace._Exceptions.AnalysisError.with_traceback"]], "conversionerror": [[174, "BioSimSpace._Exceptions.ConversionError"]], "add_note() (biosimspace._exceptions.conversionerror method)": [[174, "BioSimSpace._Exceptions.ConversionError.add_note"]], "with_traceback() (biosimspace._exceptions.conversionerror method)": [[174, "BioSimSpace._Exceptions.ConversionError.with_traceback"]], "incompatibleerror": [[175, "BioSimSpace._Exceptions.IncompatibleError"]], "add_note() (biosimspace._exceptions.incompatibleerror method)": [[175, "BioSimSpace._Exceptions.IncompatibleError.add_note"]], "with_traceback() (biosimspace._exceptions.incompatibleerror method)": [[175, "BioSimSpace._Exceptions.IncompatibleError.with_traceback"]], "missingsoftwareerror": [[176, "BioSimSpace._Exceptions.MissingSoftwareError"]], "add_note() (biosimspace._exceptions.missingsoftwareerror method)": [[176, "BioSimSpace._Exceptions.MissingSoftwareError.add_note"]], "with_traceback() (biosimspace._exceptions.missingsoftwareerror method)": [[176, "BioSimSpace._Exceptions.MissingSoftwareError.with_traceback"]], "parameterisationerror": [[177, "BioSimSpace._Exceptions.ParameterisationError"]], "add_note() (biosimspace._exceptions.parameterisationerror method)": [[177, "BioSimSpace._Exceptions.ParameterisationError.add_note"]], "with_traceback() (biosimspace._exceptions.parameterisationerror method)": [[177, "BioSimSpace._Exceptions.ParameterisationError.with_traceback"]], "streamerror": [[178, "BioSimSpace._Exceptions.StreamError"]], "add_note() (biosimspace._exceptions.streamerror method)": [[178, "BioSimSpace._Exceptions.StreamError.add_note"]], "with_traceback() (biosimspace._exceptions.streamerror method)": [[178, "BioSimSpace._Exceptions.StreamError.with_traceback"]], "thirdpartyerror": [[179, "BioSimSpace._Exceptions.ThirdPartyError"]], "add_note() (biosimspace._exceptions.thirdpartyerror method)": [[179, "BioSimSpace._Exceptions.ThirdPartyError.add_note"]], "with_traceback() (biosimspace._exceptions.thirdpartyerror method)": [[179, "BioSimSpace._Exceptions.ThirdPartyError.with_traceback"]], "atom (class in biosimspace._sirewrappers)": [[180, "BioSimSpace._SireWrappers.Atom"]], "__init__() (biosimspace._sirewrappers.atom method)": [[180, "BioSimSpace._SireWrappers.Atom.__init__"]], "charge() (biosimspace._sirewrappers.atom method)": [[180, "BioSimSpace._SireWrappers.Atom.charge"]], "coordinates() (biosimspace._sirewrappers.atom method)": [[180, "BioSimSpace._SireWrappers.Atom.coordinates"]], "copy() (biosimspace._sirewrappers.atom method)": [[180, "BioSimSpace._SireWrappers.Atom.copy"]], "element() (biosimspace._sirewrappers.atom method)": [[180, "BioSimSpace._SireWrappers.Atom.element"]], "getaxisalignedboundingbox() (biosimspace._sirewrappers.atom method)": [[180, "BioSimSpace._SireWrappers.Atom.getAxisAlignedBoundingBox"]], "index() (biosimspace._sirewrappers.atom method)": [[180, "BioSimSpace._SireWrappers.Atom.index"]], "moleculenumber() (biosimspace._sirewrappers.atom method)": [[180, "BioSimSpace._SireWrappers.Atom.moleculeNumber"]], "name() (biosimspace._sirewrappers.atom method)": [[180, "BioSimSpace._SireWrappers.Atom.name"]], "save() (biosimspace._sirewrappers.atom method)": [[180, "BioSimSpace._SireWrappers.Atom.save"]], "smiles() (biosimspace._sirewrappers.atom method)": [[180, "BioSimSpace._SireWrappers.Atom.smiles"]], "tomolecule() (biosimspace._sirewrappers.atom method)": [[180, "BioSimSpace._SireWrappers.Atom.toMolecule"]], "translate() (biosimspace._sirewrappers.atom method)": [[180, "BioSimSpace._SireWrappers.Atom.translate"]], "bond (class in biosimspace._sirewrappers)": [[181, "BioSimSpace._SireWrappers.Bond"]], "__init__() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.__init__"]], "atom0() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.atom0"]], "atom1() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.atom1"]], "charge() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.charge"]], "coordinates() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.coordinates"]], "copy() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.copy"]], "energy() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.energy"]], "getatoms() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.getAtoms"]], "getaxisalignedboundingbox() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.getAxisAlignedBoundingBox"]], "length() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.length"]], "moleculenumber() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.moleculeNumber"]], "natoms() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.nAtoms"]], "name() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.name"]], "save() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.save"]], "search() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.search"]], "smiles() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.smiles"]], "tomolecule() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.toMolecule"]], "translate() (biosimspace._sirewrappers.bond method)": [[181, "BioSimSpace._SireWrappers.Bond.translate"]], "molecule (class in biosimspace._sirewrappers)": [[182, "BioSimSpace._SireWrappers.Molecule"]], "__init__() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.__init__"]], "charge() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.charge"]], "coordinates() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.coordinates"]], "copy() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.copy"]], "extract() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.extract"]], "getatoms() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.getAtoms"]], "getaxisalignedboundingbox() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.getAxisAlignedBoundingBox"]], "getresidues() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.getResidues"]], "isamberwater() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.isAmberWater"]], "isgromacswater() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.isGromacsWater"]], "isperturbable() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.isPerturbable"]], "iswater() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.isWater"]], "makecompatiblewith() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.makeCompatibleWith"]], "molecule0() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.molecule0"]], "molecule1() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.molecule1"]], "natoms() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.nAtoms"]], "nchains() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.nChains"]], "nresidues() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.nResidues"]], "number() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.number"]], "repartitionhydrogenmass() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.repartitionHydrogenMass"]], "save() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.save"]], "search() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.search"]], "smiles() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.smiles"]], "tosystem() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.toSystem"]], "translate() (biosimspace._sirewrappers.molecule method)": [[182, "BioSimSpace._SireWrappers.Molecule.translate"]], "molecules (class in biosimspace._sirewrappers)": [[183, "BioSimSpace._SireWrappers.Molecules"]], "__init__() (biosimspace._sirewrappers.molecules method)": [[183, "BioSimSpace._SireWrappers.Molecules.__init__"]], "charge() (biosimspace._sirewrappers.molecules method)": [[183, "BioSimSpace._SireWrappers.Molecules.charge"]], "copy() (biosimspace._sirewrappers.molecules method)": [[183, "BioSimSpace._SireWrappers.Molecules.copy"]], "getaxisalignedboundingbox() (biosimspace._sirewrappers.molecules method)": [[183, "BioSimSpace._SireWrappers.Molecules.getAxisAlignedBoundingBox"]], "getmolecule() (biosimspace._sirewrappers.molecules method)": [[183, "BioSimSpace._SireWrappers.Molecules.getMolecule"]], "nmolecules() (biosimspace._sirewrappers.molecules method)": [[183, "BioSimSpace._SireWrappers.Molecules.nMolecules"]], "save() (biosimspace._sirewrappers.molecules method)": [[183, "BioSimSpace._SireWrappers.Molecules.save"]], "search() (biosimspace._sirewrappers.molecules method)": [[183, "BioSimSpace._SireWrappers.Molecules.search"]], "smiles() (biosimspace._sirewrappers.molecules method)": [[183, "BioSimSpace._SireWrappers.Molecules.smiles"]], "tosystem() (biosimspace._sirewrappers.molecules method)": [[183, "BioSimSpace._SireWrappers.Molecules.toSystem"]], "translate() (biosimspace._sirewrappers.molecules method)": [[183, "BioSimSpace._SireWrappers.Molecules.translate"]], "residue (class in biosimspace._sirewrappers)": [[184, "BioSimSpace._SireWrappers.Residue"]], "__init__() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.__init__"]], "charge() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.charge"]], "coordinates() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.coordinates"]], "copy() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.copy"]], "getatoms() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.getAtoms"]], "getaxisalignedboundingbox() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.getAxisAlignedBoundingBox"]], "index() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.index"]], "moleculenumber() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.moleculeNumber"]], "natoms() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.nAtoms"]], "name() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.name"]], "save() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.save"]], "search() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.search"]], "smiles() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.smiles"]], "tomolecule() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.toMolecule"]], "translate() (biosimspace._sirewrappers.residue method)": [[184, "BioSimSpace._SireWrappers.Residue.translate"]], "searchresult (class in biosimspace._sirewrappers)": [[185, "BioSimSpace._SireWrappers.SearchResult"]], "__init__() (biosimspace._sirewrappers.searchresult method)": [[185, "BioSimSpace._SireWrappers.SearchResult.__init__"]], "atoms() (biosimspace._sirewrappers.searchresult method)": [[185, "BioSimSpace._SireWrappers.SearchResult.atoms"]], "bonds() (biosimspace._sirewrappers.searchresult method)": [[185, "BioSimSpace._SireWrappers.SearchResult.bonds"]], "chains() (biosimspace._sirewrappers.searchresult method)": [[185, "BioSimSpace._SireWrappers.SearchResult.chains"]], "copy() (biosimspace._sirewrappers.searchresult method)": [[185, "BioSimSpace._SireWrappers.SearchResult.copy"]], "getresult() (biosimspace._sirewrappers.searchresult method)": [[185, "BioSimSpace._SireWrappers.SearchResult.getResult"]], "molecules() (biosimspace._sirewrappers.searchresult method)": [[185, "BioSimSpace._SireWrappers.SearchResult.molecules"]], "nresults() (biosimspace._sirewrappers.searchresult method)": [[185, "BioSimSpace._SireWrappers.SearchResult.nResults"]], "residues() (biosimspace._sirewrappers.searchresult method)": [[185, "BioSimSpace._SireWrappers.SearchResult.residues"]], "segments() (biosimspace._sirewrappers.searchresult method)": [[185, "BioSimSpace._SireWrappers.SearchResult.segments"]], "system (class in biosimspace._sirewrappers)": [[186, "BioSimSpace._SireWrappers.System"]], "__init__() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.__init__"]], "addmolecules() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.addMolecules"]], "charge() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.charge"]], "copy() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.copy"]], "fileformat() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.fileFormat"]], "getaminoacids() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.getAminoAcids"]], "getatom() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.getAtom"]], "getatoms() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.getAtoms"]], "getaxisalignedboundingbox() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.getAxisAlignedBoundingBox"]], "getbox() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.getBox"]], "getindex() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.getIndex"]], "getmolecule() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.getMolecule"]], "getmolecules() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.getMolecules"]], "getnucleotides() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.getNucleotides"]], "getperturbablemolecules() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.getPerturbableMolecules"]], "getresidue() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.getResidue"]], "getresidues() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.getResidues"]], "getrestraintatoms() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.getRestraintAtoms"]], "getwatermolecules() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.getWaterMolecules"]], "issame() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.isSame"]], "makewhole() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.makeWhole"]], "naminoacids() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.nAminoAcids"]], "natoms() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.nAtoms"]], "nchains() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.nChains"]], "nmolecules() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.nMolecules"]], "nnucleotides() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.nNucleotides"]], "nperturbablemolecules() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.nPerturbableMolecules"]], "nresidues() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.nResidues"]], "nwatermolecules() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.nWaterMolecules"]], "reduceboxvectors() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.reduceBoxVectors"]], "removemolecules() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.removeMolecules"]], "removewatermolecules() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.removeWaterMolecules"]], "repartitionhydrogenmass() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.repartitionHydrogenMass"]], "rotateboxvectors() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.rotateBoxVectors"]], "save() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.save"]], "search() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.search"]], "setbox() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.setBox"]], "smiles() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.smiles"]], "translate() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.translate"]], "updatemolecule() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.updateMolecule"]], "updatemolecules() (biosimspace._sirewrappers.system method)": [[186, "BioSimSpace._SireWrappers.System.updateMolecules"]], "workdir (class in biosimspace._utils)": [[187, "BioSimSpace._Utils.WorkDir"]], "__init__() (biosimspace._utils.workdir method)": [[187, "BioSimSpace._Utils.WorkDir.__init__"]], "is_temp_dir() (biosimspace._utils.workdir method)": [[187, "BioSimSpace._Utils.WorkDir.is_temp_dir"]], "_assert_imported() (in module biosimspace._utils)": [[188, "BioSimSpace._Utils._assert_imported"]], "_have_imported() (in module biosimspace._utils)": [[189, "BioSimSpace._Utils._have_imported"]], "_module_stub() (in module biosimspace._utils)": [[190, "BioSimSpace._Utils._module_stub"]], "_try_import() (in module biosimspace._utils)": [[191, "BioSimSpace._Utils._try_import"]], "cd() (in module biosimspace._utils)": [[192, "BioSimSpace._Utils.cd"]], "command_split() (in module biosimspace._utils)": [[193, "BioSimSpace._Utils.command_split"]], "biosimspace.align": [[195, "module-BioSimSpace.Align"]], "module": [[195, "module-BioSimSpace.Align"], [196, "module-BioSimSpace.Box"], [197, "module-BioSimSpace._Config"], [198, "module-BioSimSpace.Convert"], [199, "module-BioSimSpace._Exceptions"], [200, "module-BioSimSpace.FreeEnergy"], [201, "module-BioSimSpace.Gateway"], [202, "module-BioSimSpace.IO"], [203, "module-BioSimSpace.MD"], [204, "module-BioSimSpace.Metadynamics"], [205, "module-BioSimSpace.Metadynamics.CollectiveVariable"], [206, "module-BioSimSpace.Node"], [207, "module-BioSimSpace.Notebook"], [208, "module-BioSimSpace.Parameters"], [209, "module-BioSimSpace.Process"], [210, "module-BioSimSpace.Protocol"], [212, "module-BioSimSpace._SireWrappers"], [213, "module-BioSimSpace.Solvent"], [214, "module-BioSimSpace.Stream"], [215, "module-BioSimSpace.Trajectory"], [216, "module-BioSimSpace.Types"], [217, "module-BioSimSpace.Units"], [218, "module-BioSimSpace._Utils"]], "biosimspace.box": [[196, "module-BioSimSpace.Box"]], "biosimspace._config": [[197, "module-BioSimSpace._Config"]], "biosimspace.convert": [[198, "module-BioSimSpace.Convert"]], "biosimspace._exceptions": [[199, "module-BioSimSpace._Exceptions"]], "biosimspace.freeenergy": [[200, "module-BioSimSpace.FreeEnergy"]], "biosimspace.gateway": [[201, "module-BioSimSpace.Gateway"]], "biosimspace.io": [[202, "module-BioSimSpace.IO"]], "biosimspace.md": [[203, "module-BioSimSpace.MD"]], "biosimspace.metadynamics": [[204, "module-BioSimSpace.Metadynamics"]], "biosimspace.metadynamics.collectivevariable": [[205, "module-BioSimSpace.Metadynamics.CollectiveVariable"]], "biosimspace.node": [[206, "module-BioSimSpace.Node"]], "biosimspace.notebook": [[207, "module-BioSimSpace.Notebook"]], "biosimspace.parameters": [[208, "module-BioSimSpace.Parameters"]], "biosimspace.process": [[209, "module-BioSimSpace.Process"]], "biosimspace.protocol": [[210, "module-BioSimSpace.Protocol"]], "biosimspace._sirewrappers": [[212, "module-BioSimSpace._SireWrappers"]], "biosimspace.solvent": [[213, "module-BioSimSpace.Solvent"]], "biosimspace.stream": [[214, "module-BioSimSpace.Stream"]], "biosimspace.trajectory": [[215, "module-BioSimSpace.Trajectory"]], "biosimspace.types": [[216, "module-BioSimSpace.Types"]], "biosimspace.units": [[217, "module-BioSimSpace.Units"]], "biosimspace._utils": [[218, "module-BioSimSpace._Utils"]]}})